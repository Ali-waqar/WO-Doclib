/*! For license information please see 53843-1e4045c2f5b95449e2c7.js.LICENSE.txt */
(self.webpackChunkdoctolib = self.webpackChunkdoctolib || []).push([
    [53843], {
        275424: (l, n, u) => {
            (function() {
                function l(l, n) {
                    var u, d = l.split("."),
                        t = Z;
                    d[0] in t || !t.execScript || t.execScript("var " + d[0]);
                    for (; d.length && (u = d.shift());) d.length || void 0 === n ? t = t[u] ? t[u] : t[u] = {} : t[u] = n
                }

                function n(l, n) {
                    function u() {}
                    u.prototype = n.prototype, l.M = n.prototype, l.prototype = new u, l.prototype.constructor = l, l.N = function(l, u, d) {
                        for (var t = Array(arguments.length - 2), e = 2; e < arguments.length; e++) t[e - 2] = arguments[e];
                        return n.prototype[u].apply(l, t)
                    }
                }

                function u(l, n) {
                    null != l && this.a.apply(this, arguments)
                }

                function d(l) {
                    l.b = ""
                }

                function t(l, n) {
                    return l > n ? 1 : l < n ? -1 : 0
                }

                function e(l, n) {
                    this.b = l, this.a = {};
                    for (var u = 0; u < n.length; u++) {
                        var d = n[u];
                        this.a[d.b] = d
                    }
                }

                function r(l) {
                    return l = function(l) {
                            var n, u = [],
                                d = 0;
                            for (n in l) u[d++] = l[n];
                            return u
                        }(l.a),
                        function(l, n) {
                            l.sort(n || t)
                        }(l, (function(l, n) {
                            return l.b - n.b
                        })), l
                }

                function i(l, n) {
                    switch (this.b = l, this.g = !!n.v, this.a = n.c, this.i = n.type, this.h = !1, this.a) {
                        case G:
                        case U:
                        case V:
                        case H:
                        case W:
                        case j:
                        case B:
                            this.h = !0
                    }
                    this.f = n.defaultValue
                }

                function o() {
                    this.a = {}, this.f = this.j().a, this.b = this.g = null
                }

                function a(l, n) {
                    for (var u = r(l.j()), d = 0; d < u.length; d++) {
                        var t = (i = u[d]).b;
                        if (null != n.a[t]) {
                            l.b && delete l.b[i.b];
                            var e = 11 == i.a || 10 == i.a;
                            if (i.g)
                                for (var i = $(n, t) || [], o = 0; o < i.length; o++) {
                                    var c = l,
                                        s = t,
                                        f = e ? i[o].clone() : i[o];
                                    c.a[s] || (c.a[s] = []), c.a[s].push(f), c.b && delete c.b[s]
                                } else i = $(n, t), e ? (e = $(l, t)) ? a(e, i) : p(l, t, i.clone()) : p(l, t, i)
                        }
                    }
                }

                function $(l, n) {
                    var u = l.a[n];
                    if (null == u) return null;
                    if (l.g) {
                        if (!(n in l.b)) {
                            var d = l.g,
                                t = l.f[n];
                            if (null != u)
                                if (t.g) {
                                    for (var e = [], r = 0; r < u.length; r++) e[r] = d.b(t, u[r]);
                                    u = e
                                } else u = d.b(t, u);
                            return l.b[n] = u
                        }
                        return l.b[n]
                    }
                    return u
                }

                function c(l, n, u) {
                    var d = $(l, n);
                    return l.f[n].g ? d[u || 0] : d
                }

                function s(l, n) {
                    var u;
                    if (null != l.a[n]) u = c(l, n, void 0);
                    else l: {
                        if (void 0 === (u = l.f[n]).f) {
                            var d = u.i;
                            if (d === Boolean) u.f = !1;
                            else if (d === Number) u.f = 0;
                            else {
                                if (d !== String) {
                                    u = new d;
                                    break l
                                }
                                u.f = u.h ? "0" : ""
                            }
                        }
                        u = u.f
                    }
                    return u
                }

                function f(l, n) {
                    return l.f[n].g ? null != l.a[n] ? l.a[n].length : 0 : null != l.a[n] ? 1 : 0
                }

                function p(l, n, u) {
                    l.a[n] = u, l.b && (l.b[n] = u)
                }

                function h(l, n) {
                    var u, d = [];
                    for (u in n) 0 != u && d.push(new i(u, n[u]));
                    return new e(l, d)
                }

                function v() {
                    o.call(this)
                }

                function m() {
                    o.call(this)
                }

                function g() {
                    o.call(this)
                }

                function y() {}

                function b() {}

                function w() {}

                function _() {
                    this.a = {}
                }

                function C(l) {
                    return 0 == l.length || ul.test(l)
                }

                function E(l, n) {
                    if (null == n) return null;
                    n = n.toUpperCase();
                    var u = l.a[n];
                    if (null == u) {
                        if (null == (u = Q[n])) return null;
                        u = (new w).a(g.j(), u), l.a[n] = u
                    }
                    return u
                }

                function x(l) {
                    return null == (l = J[l]) ? "ZZ" : l[0]
                }

                function S(l) {
                    this.H = RegExp("\u2008"), this.C = "", this.m = new u, this.w = "", this.i = new u, this.u = new u, this.l = !0, this.A = this.o = this.F = !1, this.G = _.b(), this.s = 0, this.b = new u, this.B = !1, this.h = "", this.a = new u, this.f = [], this.D = l, this.J = this.g = A(this, this.D)
                }

                function A(l, n) {
                    var u;
                    if (null != n && isNaN(n) && n.toUpperCase() in Q) {
                        if (null == (u = E(l.G, n))) throw Error("Invalid region code: " + n);
                        u = s(u, 10)
                    } else u = 0;
                    return null != (u = E(l.G, x(u))) ? u : dl
                }

                function M(l) {
                    for (var n = l.f.length, u = 0; u < n; ++u) {
                        var t, e = l.f[u],
                            r = s(e, 1);
                        if (l.w == r) return !1;
                        t = l;
                        var i = s(a = e, 1);
                        if (-1 != i.indexOf("|")) t = !1;
                        else {
                            var o;
                            i = (i = i.replace(tl, "\\d")).replace(el, "\\d"), d(t.m), o = t;
                            var a = s(a, 2),
                                $ = "999999999999999".match(i)[0];
                            $.length < o.a.b.length ? o = "" : o = (o = $.replace(new RegExp(i, "g"), a)).replace(RegExp("9", "g"), "\u2008"), 0 < o.length ? (t.m.a(o), t = !0) : t = !1
                        }
                        if (t) return l.w = r, l.B = il.test(c(e, 4)), l.s = 0, !0
                    }
                    return l.l = !1
                }

                function O(l, n) {
                    for (var u = [], d = n.length - 3, t = l.f.length, e = 0; e < t; ++e) {
                        var r = l.f[e];
                        0 == f(r, 3) ? u.push(l.f[e]) : (r = c(r, 3, Math.min(d, f(r, 3) - 1)), 0 == n.search(r) && u.push(l.f[e]))
                    }
                    l.f = u
                }

                function P(l) {
                    return l.l = !0, l.A = !1, l.f = [], l.s = 0, d(l.m), l.w = "", N(l)
                }

                function F(l) {
                    for (var n = l.a.toString(), u = l.f.length, d = 0; d < u; ++d) {
                        var t = l.f[d],
                            e = s(t, 1);
                        if (new RegExp("^(?:" + e + ")$").test(n)) return l.B = il.test(c(t, 4)), T(l, n = n.replace(new RegExp(e, "g"), c(t, 2)))
                    }
                    return ""
                }

                function T(l, n) {
                    var u = l.b.b.length;
                    return l.B && 0 < u && " " != l.b.toString().charAt(u - 1) ? l.b + " " + n : l.b + n
                }

                function N(l) {
                    var n = l.a.toString();
                    if (3 <= n.length) {
                        for (var u = l.o && 0 == l.h.length && 0 < f(l.g, 20) ? $(l.g, 20) || [] : $(l.g, 19) || [], d = u.length, t = 0; t < d; ++t) {
                            var e = u[t];
                            0 < l.h.length && C(s(e, 4)) && !c(e, 6) && null == e.a[5] || (0 != l.h.length || l.o || C(s(e, 4)) || c(e, 6)) && rl.test(s(e, 2)) && l.f.push(e)
                        }
                        return O(l, n), 0 < (n = F(l)).length ? n : M(l) ? I(l) : l.i.toString()
                    }
                    return T(l, n)
                }

                function I(l) {
                    var n = l.a.toString(),
                        u = n.length;
                    if (0 < u) {
                        for (var d = "", t = 0; t < u; t++) d = L(l, n.charAt(t));
                        return l.l ? T(l, d) : l.i.toString()
                    }
                    return l.b.toString()
                }

                function R(l) {
                    var n, u = l.a.toString(),
                        t = 0;
                    return 1 != c(l.g, 10) ? n = !1 : n = "1" == (n = l.a.toString()).charAt(0) && "0" != n.charAt(1) && "1" != n.charAt(1), n ? (t = 1, l.b.a("1").a(" "), l.o = !0) : null != l.g.a[15] && (n = new RegExp("^(?:" + c(l.g, 15) + ")"), null != (n = u.match(n)) && null != n[0] && 0 < n[0].length && (l.o = !0, t = n[0].length, l.b.a(u.substring(0, t)))), d(l.a), l.a.a(u.substring(t)), u.substring(0, t)
                }

                function k(l) {
                    var n = l.u.toString(),
                        u = new RegExp("^(?:\\+|" + c(l.g, 11) + ")");
                    return null != (u = n.match(u)) && null != u[0] && 0 < u[0].length && (l.o = !0, u = u[0].length, d(l.a), l.a.a(n.substring(u)), d(l.b), l.b.a(n.substring(0, u)), "+" != n.charAt(0) && l.b.a(" "), !0)
                }

                function D(l) {
                    if (0 == l.a.b.length) return !1;
                    var n, t = new u;
                    l: {
                        if (0 != (n = l.a.toString()).length && "0" != n.charAt(0))
                            for (var e, r = n.length, i = 1; 3 >= i && i <= r; ++i)
                                if ((e = parseInt(n.substring(0, i), 10)) in J) {
                                    t.a(n.substring(i)), n = e;
                                    break l
                                }
                        n = 0
                    }
                    return 0 != n && (d(l.a), l.a.a(t.toString()), "001" == (t = x(n)) ? l.g = E(l.G, "" + n) : t != l.D && (l.g = A(l, t)), l.b.a("" + n).a(" "), l.h = "", !0)
                }

                function L(l, n) {
                    if (0 <= (t = l.m.toString()).substring(l.s).search(l.H)) {
                        var u = t.search(l.H),
                            t = t.replace(l.H, n);
                        return d(l.m), l.m.a(t), l.s = u, t.substring(0, l.s + 1)
                    }
                    return 1 == l.f.length && (l.l = !1), l.w = "", l.i.toString()
                }
                var Z = this;
                u.prototype.b = "", u.prototype.set = function(l) {
                    this.b = "" + l
                }, u.prototype.a = function(l, n, u) {
                    if (this.b += String(l), null != n)
                        for (var d = 1; d < arguments.length; d++) this.b += arguments[d];
                    return this
                }, u.prototype.toString = function() {
                    return this.b
                };
                var B = 1,
                    j = 2,
                    G = 3,
                    U = 4,
                    V = 6,
                    H = 16,
                    W = 18;
                o.prototype.set = function(l, n) {
                    p(this, l.b, n)
                }, o.prototype.clone = function() {
                    var l = new this.constructor;
                    return l != this && (l.a = {}, l.b && (l.b = {}), a(l, this)), l
                }, n(v, o);
                var K = null;
                n(m, o);
                var Y = null;
                n(g, o);
                var z = null;
                v.prototype.j = function() {
                    var l = K;
                    return l || (K = l = h(v, {
                        0: {
                            name: "NumberFormat",
                            I: "i18n.phonenumbers.NumberFormat"
                        },
                        1: {
                            name: "pattern",
                            required: !0,
                            c: 9,
                            type: String
                        },
                        2: {
                            name: "format",
                            required: !0,
                            c: 9,
                            type: String
                        },
                        3: {
                            name: "leading_digits_pattern",
                            v: !0,
                            c: 9,
                            type: String
                        },
                        4: {
                            name: "national_prefix_formatting_rule",
                            c: 9,
                            type: String
                        },
                        6: {
                            name: "national_prefix_optional_when_formatting",
                            c: 8,
                            defaultValue: !1,
                            type: Boolean
                        },
                        5: {
                            name: "domestic_carrier_code_formatting_rule",
                            c: 9,
                            type: String
                        }
                    })), l
                }, v.j = v.prototype.j, m.prototype.j = function() {
                    var l = Y;
                    return l || (Y = l = h(m, {
                        0: {
                            name: "PhoneNumberDesc",
                            I: "i18n.phonenumbers.PhoneNumberDesc"
                        },
                        2: {
                            name: "national_number_pattern",
                            c: 9,
                            type: String
                        },
                        9: {
                            name: "possible_length",
                            v: !0,
                            c: 5,
                            type: Number
                        },
                        10: {
                            name: "possible_length_local_only",
                            v: !0,
                            c: 5,
                            type: Number
                        },
                        6: {
                            name: "example_number",
                            c: 9,
                            type: String
                        }
                    })), l
                }, m.j = m.prototype.j, g.prototype.j = function() {
                    var l = z;
                    return l || (z = l = h(g, {
                        0: {
                            name: "PhoneMetadata",
                            I: "i18n.phonenumbers.PhoneMetadata"
                        },
                        1: {
                            name: "general_desc",
                            c: 11,
                            type: m
                        },
                        2: {
                            name: "fixed_line",
                            c: 11,
                            type: m
                        },
                        3: {
                            name: "mobile",
                            c: 11,
                            type: m
                        },
                        4: {
                            name: "toll_free",
                            c: 11,
                            type: m
                        },
                        5: {
                            name: "premium_rate",
                            c: 11,
                            type: m
                        },
                        6: {
                            name: "shared_cost",
                            c: 11,
                            type: m
                        },
                        7: {
                            name: "personal_number",
                            c: 11,
                            type: m
                        },
                        8: {
                            name: "voip",
                            c: 11,
                            type: m
                        },
                        21: {
                            name: "pager",
                            c: 11,
                            type: m
                        },
                        25: {
                            name: "uan",
                            c: 11,
                            type: m
                        },
                        27: {
                            name: "emergency",
                            c: 11,
                            type: m
                        },
                        28: {
                            name: "voicemail",
                            c: 11,
                            type: m
                        },
                        29: {
                            name: "short_code",
                            c: 11,
                            type: m
                        },
                        30: {
                            name: "standard_rate",
                            c: 11,
                            type: m
                        },
                        31: {
                            name: "carrier_specific",
                            c: 11,
                            type: m
                        },
                        33: {
                            name: "sms_services",
                            c: 11,
                            type: m
                        },
                        24: {
                            name: "no_international_dialling",
                            c: 11,
                            type: m
                        },
                        9: {
                            name: "id",
                            required: !0,
                            c: 9,
                            type: String
                        },
                        10: {
                            name: "country_code",
                            c: 5,
                            type: Number
                        },
                        11: {
                            name: "international_prefix",
                            c: 9,
                            type: String
                        },
                        17: {
                            name: "preferred_international_prefix",
                            c: 9,
                            type: String
                        },
                        12: {
                            name: "national_prefix",
                            c: 9,
                            type: String
                        },
                        13: {
                            name: "preferred_extn_prefix",
                            c: 9,
                            type: String
                        },
                        15: {
                            name: "national_prefix_for_parsing",
                            c: 9,
                            type: String
                        },
                        16: {
                            name: "national_prefix_transform_rule",
                            c: 9,
                            type: String
                        },
                        18: {
                            name: "same_mobile_and_fixed_line_pattern",
                            c: 8,
                            defaultValue: !1,
                            type: Boolean
                        },
                        19: {
                            name: "number_format",
                            v: !0,
                            c: 11,
                            type: v
                        },
                        20: {
                            name: "intl_number_format",
                            v: !0,
                            c: 11,
                            type: v
                        },
                        22: {
                            name: "main_country_for_code",
                            c: 8,
                            defaultValue: !1,
                            type: Boolean
                        },
                        23: {
                            name: "leading_digits",
                            c: 9,
                            type: String
                        },
                        26: {
                            name: "leading_zero_possible",
                            c: 8,
                            defaultValue: !1,
                            type: Boolean
                        }
                    })), l
                }, g.j = g.prototype.j, y.prototype.a = function(l) {
                    throw new l.b, Error("Unimplemented")
                }, y.prototype.b = function(l, n) {
                    if (11 == l.a || 10 == l.a) return n instanceof o ? n : this.a(l.i.prototype.j(), n);
                    if (14 == l.a) {
                        if ("string" == typeof n && X.test(n)) {
                            var u = Number(n);
                            if (0 < u) return u
                        }
                        return n
                    }
                    if (!l.h) return n;
                    if ((u = l.i) === String) {
                        if ("number" == typeof n) return String(n)
                    } else if (u === Number && "string" == typeof n && ("Infinity" === n || "-Infinity" === n || "NaN" === n || X.test(n))) return Number(n);
                    return n
                };
                var X = /^-?[0-9]+$/;
                n(b, y), b.prototype.a = function(l, n) {
                    var u = new l.b;
                    return u.g = this, u.a = n, u.b = {}, u
                }, n(w, b), w.prototype.b = function(l, n) {
                    return 8 == l.a ? !!n : y.prototype.b.apply(this, arguments)
                }, w.prototype.a = function(l, n) {
                    return w.M.a.call(this, l, n)
                };
                var J = {
                        1: "US AG AI AS BB BM BS CA DM DO GD GU JM KN KY LC MP MS PR SX TC TT VC VG VI".split(" "),
                        7: ["RU", "KZ"],
                        20: ["EG"],
                        27: ["ZA"],
                        30: ["GR"],
                        31: ["NL"],
                        32: ["BE"],
                        33: ["FR"],
                        34: ["ES"],
                        36: ["HU"],
                        39: ["IT", "VA"],
                        40: ["RO"],
                        41: ["CH"],
                        43: ["AT"],
                        44: ["GB", "GG", "IM", "JE"],
                        45: ["DK"],
                        46: ["SE"],
                        47: ["NO", "SJ"],
                        48: ["PL"],
                        49: ["DE"],
                        51: ["PE"],
                        52: ["MX"],
                        53: ["CU"],
                        54: ["AR"],
                        55: ["BR"],
                        56: ["CL"],
                        57: ["CO"],
                        58: ["VE"],
                        60: ["MY"],
                        61: ["AU", "CC", "CX"],
                        62: ["ID"],
                        63: ["PH"],
                        64: ["NZ"],
                        65: ["SG"],
                        66: ["TH"],
                        81: ["JP"],
                        82: ["KR"],
                        84: ["VN"],
                        86: ["CN"],
                        90: ["TR"],
                        91: ["IN"],
                        92: ["PK"],
                        93: ["AF"],
                        94: ["LK"],
                        95: ["MM"],
                        98: ["IR"],
                        211: ["SS"],
                        212: ["MA", "EH"],
                        213: ["DZ"],
                        216: ["TN"],
                        218: ["LY"],
                        220: ["GM"],
                        221: ["SN"],
                        222: ["MR"],
                        223: ["ML"],
                        224: ["GN"],
                        225: ["CI"],
                        226: ["BF"],
                        227: ["NE"],
                        228: ["TG"],
                        229: ["BJ"],
                        230: ["MU"],
                        231: ["LR"],
                        232: ["SL"],
                        233: ["GH"],
                        234: ["NG"],
                        235: ["TD"],
                        236: ["CF"],
                        237: ["CM"],
                        238: ["CV"],
                        239: ["ST"],
                        240: ["GQ"],
                        241: ["GA"],
                        242: ["CG"],
                        243: ["CD"],
                        244: ["AO"],
                        245: ["GW"],
                        246: ["IO"],
                        247: ["AC"],
                        248: ["SC"],
                        249: ["SD"],
                        250: ["RW"],
                        251: ["ET"],
                        252: ["SO"],
                        253: ["DJ"],
                        254: ["KE"],
                        255: ["TZ"],
                        256: ["UG"],
                        257: ["BI"],
                        258: ["MZ"],
                        260: ["ZM"],
                        261: ["MG"],
                        262: ["RE", "YT"],
                        263: ["ZW"],
                        264: ["NA"],
                        265: ["MW"],
                        266: ["LS"],
                        267: ["BW"],
                        268: ["SZ"],
                        269: ["KM"],
                        290: ["SH", "TA"],
                        291: ["ER"],
                        297: ["AW"],
                        298: ["FO"],
                        299: ["GL"],
                        350: ["GI"],
                        351: ["PT"],
                        352: ["LU"],
                        353: ["IE"],
                        354: ["IS"],
                        355: ["AL"],
                        356: ["MT"],
                        357: ["CY"],
                        358: ["FI", "AX"],
                        359: ["BG"],
                        370: ["LT"],
                        371: ["LV"],
                        372: ["EE"],
                        373: ["MD"],
                        374: ["AM"],
                        375: ["BY"],
                        376: ["AD"],
                        377: ["MC"],
                        378: ["SM"],
                        380: ["UA"],
                        381: ["RS"],
                        382: ["ME"],
                        383: ["XK"],
                        385: ["HR"],
                        386: ["SI"],
                        387: ["BA"],
                        389: ["MK"],
                        420: ["CZ"],
                        421: ["SK"],
                        423: ["LI"],
                        500: ["FK"],
                        501: ["BZ"],
                        502: ["GT"],
                        503: ["SV"],
                        504: ["HN"],
                        505: ["NI"],
                        506: ["CR"],
                        507: ["PA"],
                        508: ["PM"],
                        509: ["HT"],
                        590: ["GP", "BL", "MF"],
                        591: ["BO"],
                        592: ["GY"],
                        593: ["EC"],
                        594: ["GF"],
                        595: ["PY"],
                        596: ["MQ"],
                        597: ["SR"],
                        598: ["UY"],
                        599: ["CW", "BQ"],
                        670: ["TL"],
                        672: ["NF"],
                        673: ["BN"],
                        674: ["NR"],
                        675: ["PG"],
                        676: ["TO"],
                        677: ["SB"],
                        678: ["VU"],
                        679: ["FJ"],
                        680: ["PW"],
                        681: ["WF"],
                        682: ["CK"],
                        683: ["NU"],
                        685: ["WS"],
                        686: ["KI"],
                        687: ["NC"],
                        688: ["TV"],
                        689: ["PF"],
                        690: ["TK"],
                        691: ["FM"],
                        692: ["MH"],
                        800: ["001"],
                        808: ["001"],
                        850: ["KP"],
                        852: ["HK"],
                        853: ["MO"],
                        855: ["KH"],
                        856: ["LA"],
                        870: ["001"],
                        878: ["001"],
                        880: ["BD"],
                        881: ["001"],
                        882: ["001"],
                        883: ["001"],
                        886: ["TW"],
                        888: ["001"],
                        960: ["MV"],
                        961: ["LB"],
                        962: ["JO"],
                        963: ["SY"],
                        964: ["IQ"],
                        965: ["KW"],
                        966: ["SA"],
                        967: ["YE"],
                        968: ["OM"],
                        970: ["PS"],
                        971: ["AE"],
                        972: ["IL"],
                        973: ["BH"],
                        974: ["QA"],
                        975: ["BT"],
                        976: ["MN"],
                        977: ["NP"],
                        979: ["001"],
                        992: ["TJ"],
                        993: ["TM"],
                        994: ["AZ"],
                        995: ["GE"],
                        996: ["KG"],
                        998: ["UZ"]
                    },
                    Q = {
                        800: [null, [null, null, "\\d{8}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "\\d{8}", null, null, null, "12345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 800, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        808: [null, [null, null, "\\d{8}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "\\d{8}", null, null, null, "12345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 808, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        870: [null, [null, null, "[35-7]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:[356]\\d|7[6-8])\\d{7}", null, null, null, "301234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 870, null, null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[35-7]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        878: [null, [null, null, "10\\d{10}", null, null, null, null, null, null, [12]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "10\\d{10}", null, null, null, "101234567890"], "001", 878, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        881: [null, [null, null, "[67]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "[67]\\d{8}", null, null, null, "612345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 881, null, null, null, null, null, null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[67]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        882: [null, [null, null, "[13]\\d{6}(?:\\d{2,5})?|1\\d{7}", null, null, null, null, null, null, [7, 8, 9, 10, 11, 12]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3(?:(?:(?:2|7\\d{3})\\d|37)\\d\\d|4(?:2|7\\d{3}))\\d{4}", null, null, null, "3421234", null, null, [7, 9, 10, 12]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])|6\\d{1,6})|3(?:45|9\\d{3})\\d{3})\\d{4}", null, null, null, "390123456789"], "001", 882, null, null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["16|342"]],
                                [null, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["1"]],
                                [null, "(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]],
                                [null, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"]],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["34[57]"]],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]],
                                [null, "(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[13]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "348[57]\\d{7}", null, null, null, "34851234567", null, null, [11]]
                        ],
                        883: [null, [null, null, "51\\d{7}(?:\\d{3})?", null, null, null, null, null, null, [9, 12]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "51[013]0\\d{8}|5100\\d{5}", null, null, null, "510012345"], "001", 883, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["510"]],
                                [null, "(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["5"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        888: [null, [null, null, "\\d{11}", null, null, null, null, null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 888, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "\\d{11}", null, null, null, "12345678901"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        979: [null, [null, null, "\\d{9}", null, null, null, null, null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "\\d{9}", null, null, null, "123456789"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "001", 979, null, null, null, null, null, null, null, 1, [
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AC: [null, [null, null, "(?:[01589]\\d|[46])\\d{4}", null, null, null, null, null, null, [5, 6]],
                            [null, null, "6[2-467]\\d{3}", null, null, null, "62889", null, null, [5]],
                            [null, null, "4\\d{4}", null, null, null, "40123", null, null, [5]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AC", 247, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "[01589]\\d{5}", null, null, null, "542011", null, null, [6]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AD: [null, [null, null, "(?:1|6\\d)\\d{7}|[136-9]\\d{5}", null, null, null, null, null, null, [6, 8, 9]],
                            [null, null, "[78]\\d{5}", null, null, null, "712345", null, null, [6]],
                            [null, null, "690\\d{6}|[36]\\d{5}", null, null, null, "312345", null, null, [6, 9]],
                            [null, null, "180[02]\\d{4}", null, null, null, "18001234", null, null, [8]],
                            [null, null, "[19]\\d{5}", null, null, null, "912345", null, null, [6]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AD", 376, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["[136-9]"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["1"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "1800\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AE: [null, [null, null, "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10, 11, 12]],
                            [null, null, "[2-4679][2-8]\\d{6}", null, null, null, "22345678", null, null, [8],
                                [7]
                            ],
                            [null, null, "5[024-68]\\d{7}", null, null, null, "501234567", null, null, [9]],
                            [null, null, "400\\d{6}|800\\d{2,9}", null, null, null, "800123456"],
                            [null, null, "900[02]\\d{5}", null, null, null, "900234567", null, null, [9]],
                            [null, null, "700[05]\\d{5}", null, null, null, "700012345", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AE", 971, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"],
                                [null, "(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "600[25]\\d{5}", null, null, null, "600212345", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AF: [null, [null, null, "[2-7]\\d{8}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}", null, null, null, "234567890", null, null, null, [7]],
                            [null, null, "7(?:[014-9]\\d|2[89]|3[01])\\d{6}", null, null, null, "701234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AF", 93, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AG: [null, [null, null, "(?:268|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}", null, null, null, "2684601234", null, null, null, [7]],
                            [null, null, "268(?:464|7(?:1[3-9]|2\\d|3[246]|64|[78][0-689]))\\d{4}", null, null, null, "2684641234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, "26848[01]\\d{4}", null, null, null, "2684801234", null, null, null, [7]], "AG", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, "26840[69]\\d{4}", null, null, null, "2684061234", null, null, null, [7]], null, "268", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AI: [null, [null, null, "(?:264|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "2644(?:6[12]|9[78])\\d{4}", null, null, null, "2644612345", null, null, null, [7]],
                            [null, null, "264(?:235|476|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}", null, null, null, "2642351234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AI", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "264", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AL: [null, [null, null, "(?:(?:[2-58]|6\\d)\\d\\d|700)\\d{5}|(?:8\\d{2,3}|900)\\d{3}", null, null, null, null, null, null, [6, 7, 8, 9],
                                [5]
                            ],
                            [null, null, "(?:[2358](?:[16-9]\\d[2-9]|[2-5][2-9]\\d)|4(?:[2-57-9][2-9]|6\\d)\\d)\\d{4}", null, null, null, "22345678", null, null, [8],
                                [5, 6, 7]
                            ],
                            [null, null, "6(?:[689][2-9]|7[2-6])\\d{6}", null, null, null, "662123456", null, null, [9]],
                            [null, null, "800\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, "900[1-9]\\d\\d", null, null, null, "900123", null, null, [6]],
                            [null, null, "808[1-9]\\d\\d", null, null, null, "808123", null, null, [6]],
                            [null, null, "700[2-9]\\d{4}", null, null, null, "70021234", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AL", 355, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AM: [null, [null, null, "(?:[1-489]\\d|55|60|77)\\d{6}", null, null, null, null, null, null, [8],
                                [5, 6]
                            ],
                            [null, null, "(?:(?:1[0-2]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}", null, null, null, "10123456", null, null, null, [5, 6]],
                            [null, null, "(?:4[1349]|55|77|88|9[13-9])\\d{6}", null, null, null, "77123456"],
                            [null, null, "800\\d{5}", null, null, null, "80012345"],
                            [null, null, "90[016]\\d{5}", null, null, null, "90012345"],
                            [null, null, "80[1-4]\\d{5}", null, null, null, "80112345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|90)\\d{4}", null, null, null, "60271234"], "AM", 374, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[23]"], "(0$1)"],
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["[4-7]|88|9[13-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]"], "0 $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AO: [null, [null, null, "[29]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}", null, null, null, "222123456"],
                            [null, null, "9[1-49]\\d{7}", null, null, null, "923123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AO", 244, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AR: [null, [null, null, "(?:11|(?:[2368]|9\\d)\\d)\\d{8}", null, null, null, null, null, null, [10, 11],
                                [6, 7, 8]
                            ],
                            [null, null, "11\\d{8}|(?:2(?:2(?:[013]\\d|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:[07]\\d|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|6[013-9])|4(?:7[3-8]|9\\d)|6(?:[01346]\\d|2[24-6]|5[15-8])|80\\d|9(?:[012789]\\d|3[1-6]|4[02-9]|5[234]|6[2-46]))|3(?:3(?:2[79]|6\\d|8[2578])|4(?:0[0124-9]|[1-357]\\d|4[24-7]|6[02-9]|8[0-79]|9[1236-8])|5(?:[138]\\d|2[1245]|4[1-9]|6[2-4]|7[1-6])|6[24]\\d|7(?:[069]\\d|1[1568]|2[013-9]|3[145]|4[0-35-9]|5[14-8]|7[2-57]|8[0-24-9])|8(?:[01578]\\d|2[15-7]|3[0-24-9]|4[13-6]|6[1-357-9]|9[124]))|670\\d)\\d{6}", null, null, null, "1123456789", null, null, [10],
                                [6, 7, 8]
                            ],
                            [null, null, "675\\d{7}|9(?:11[2-9]\\d{7}|(?:2(?:2[013]|3[067]|49|6[01346]|80|9[147-9])|3(?:36|4[1-358]|5[138]|6[24]|7[069]|8[013578]))[2-9]\\d{6}|(?:2(?:2(?:02|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8])|47[3-578]|6(?:2[24-6]|4[6-8]|5[15-8])|9(?:0[1-3]|2\\d|3[1-6]|4[02568]|5[2-4]|6[2-46]|72|8[23]))|3(?:3(?:2[79]|8[2578])|4(?:0[0-24-9]|4[24-7]|6[02-9]|7[126]|9[1-36-8])|5(?:2[1245]|3[237]|4[1-46-9]|6[2-4]|7[1-6]|8[2-5])|7(?:1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:2[15-7]|3[2578]|4[13-6]|5[4-8]|6[1-357-9]|9[124])))[2-9]\\d{5})", null, null, null, "91123456789", null, null, null, [6, 7, 8]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "60[04579]\\d{7}", null, null, null, "6001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AR", 54, "00", "0", null, null, "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))?15)?", "9$1", null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
                                [null, "(\\d{2})(\\d{4})", "$1-$2", ["[2-9]"], "$1"],
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[2-9]"], "$1"],
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["[2-9]"], "$1"],
                                [null, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["911"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9(?:2[2-4689]|3[3-8])", "9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))", "9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))", "9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{2})(\\d{4})", "$2 15-$3-$4", ["9[23]"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["11"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])", "2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))", "2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", null, 1],
                                [null, "(\\d{3})", "$1", ["1[0-2]|911"], "$1"]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
                                [null, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3-$4", ["911"]],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3-$4", ["9(?:2[2-4689]|3[3-8])", "9(?:2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578]))", "9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))", "9(?:2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45])))"]],
                                [null, "(\\d)(\\d{4})(\\d{2})(\\d{4})", "$1 $2 $3-$4", ["9[23]"]],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["11"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["2(?:2[013]|3[067]|49|6[01346]|8|9[147-9])|3(?:36|4[1-358]|5[138]|6|7[069]|8[013578])", "2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3[4-6]|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))", "2(?:2(?:0[013-9]|[13])|3(?:0[013-9]|[67])|49|6(?:[0136]|4[0-59])|8|9(?:[19]|44|7[013-9]|8[14]))|3(?:36|4(?:[12]|3(?:4|5[014]|6[1-39])|[58]4)|5(?:1|3[0-24-689]|8[46])|6|7[069]|8(?:[01]|34|[578][45]))"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", null, 1]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "810\\d{7}", null, null, null, null, null, null, [10]],
                            [null, null, "810\\d{7}", null, null, null, "8101234567", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AS: [null, [null, null, "(?:[58]\\d\\d|684|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "6846(?:22|33|44|55|77|88|9[19])\\d{4}", null, null, null, "6846221234", null, null, null, [7]],
                            [null, null, "684(?:2(?:5[2468]|72)|7(?:3[13]|70))\\d{4}", null, null, null, "6847331234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AS", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "684", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AT: [null, [null, null, "[1-35-9]\\d{8,12}|4(?:[0-24-9]\\d{4,11}|3(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7}))|[1-35-8]\\d{7}|[1-35-7]\\d{6}|[135-7]\\d{5}|[15]\\d{4}|1\\d{3}", null, null, null, null, null, null, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                                [3]
                            ],
                            [null, null, "(?:1(?:11|[2-9]\\d{2,10})|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-8]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|7(?:2[1-8]|3[25]|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{3,9}|4(?:(?:2[1-8]|35|7[1368]|8[2457])\\d{3,9}|63\\d{2,9})|5(?:12\\d{2,9}|(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])\\d{3,9})|6(?:(?:13|2[1-47]|4[135-8]|5[468])\\d{3,9}|62\\d{2,9}))\\d|(?:316|732)\\d{3}", null, null, null, "1234567890", null, null, null, [3]],
                            [null, null, "6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}", null, null, null, "664123456", null, null, [7, 8, 9, 10, 11, 12, 13]],
                            [null, null, "800\\d{6,10}", null, null, null, "800123456", null, null, [9, 10, 11, 12, 13]],
                            [null, null, "9(?:0[01]|3[019])\\d{6,10}", null, null, null, "900123456", null, null, [9, 10, 11, 12, 13]],
                            [null, null, "8(?:10|2[018])\\d{6,10}|828\\d{5}", null, null, null, "810123456", null, null, [8, 9, 10, 11, 12, 13]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}", null, null, null, "780123456", null, null, [5, 6, 7, 8, 9, 10, 11, 12, 13]], "AT", 43, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"],
                                [null, "(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"],
                                [null, "(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"],
                                [null, "(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"],
                                [null, "(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AU: [null, [null, null, "1\\d{4,9}|(?:[2-478]\\d\\d|550)\\d{6}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10]],
                            [null, null, "(?:[237]\\d{5}|8(?:51(?:0(?:0[03-9]|[1247]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-6])|1(?:1[69]|[23]\\d|4[0-4]))|(?:[6-8]\\d{3}|9(?:[02-9]\\d\\d|1(?:[0-57-9]\\d|6[0135-9])))\\d))\\d{3}", null, null, null, "212345678", null, null, [9],
                                [8]
                            ],
                            [null, null, "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}", null, null, null, "412345678", null, null, [9]],
                            [null, null, "180(?:0\\d{3}|2)\\d{3}", null, null, null, "1800123456", null, null, [7, 10]],
                            [null, null, "190[0-26]\\d{6}", null, null, null, "1900123456", null, null, [10]],
                            [null, null, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", null, null, null, "1300123456", null, null, [6, 8, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:14(?:5\\d|71)|550\\d)\\d{5}", null, null, null, "550123456", null, null, [9]], "AU", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0", null, null, "0", null, "0011", null, [
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["19"]],
                                [null, "(\\d{4})(\\d{3,4})", "$1 $2", ["19"]],
                                [null, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["13"]],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["180", "1802"]],
                                [null, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|[45]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]
                            ],
                            [
                                [null, "(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|[45]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]
                            ],
                            [null, null, "16\\d{3,7}", null, null, null, "1612345", null, null, [5, 6, 7, 8, 9]], 1, null, [null, null, "1[38]00\\d{6}|1(?:345[0-4]|802)\\d{3}|13\\d{4}", null, null, null, null, null, null, [6, 7, 8, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AW: [null, [null, null, "(?:[25-79]\\d\\d|800)\\d{4}", null, null, null, null, null, null, [7]],
                            [null, null, "5(?:2\\d|8[1-9])\\d{4}", null, null, null, "5212345"],
                            [null, null, "(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}", null, null, null, "5601234"],
                            [null, null, "800\\d{4}", null, null, null, "8001234"],
                            [null, null, "900\\d{4}", null, null, null, "9001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:28\\d|501)\\d{4}", null, null, null, "5011234"], "AW", 297, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AX: [null, [null, null, "(?:(?:[1247]\\d|3[0-46-9]|[56]0)\\d\\d|800)\\d{4,6}|(?:[1-47]\\d|50)\\d{4,5}|2\\d{4}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10]],
                            [null, null, "18[1-8]\\d{3,6}", null, null, null, "181234567", null, null, [6, 7, 8, 9]],
                            [null, null, "(?:4[0-8]|50)\\d{4,8}", null, null, null, "412345678", null, null, [6, 7, 8, 9, 10]],
                            [null, null, "800\\d{4,6}", null, null, null, "800123456", null, null, [7, 8, 9]],
                            [null, null, "[67]00\\d{5,6}", null, null, null, "600123456", null, null, [8, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AX", 358, "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "0", null, null, "0", null, "00", null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "18", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:10|[23][09])\\d{4,8}|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})|20[2-59]\\d\\d", null, null, null, "10112345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        AZ: [null, [null, null, "(?:(?:(?:[12457]\\d|60|88)\\d|365)\\d{3}|900200)\\d{3}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:(?:1[28]\\d|2(?:[045]2|1[24]|2[2-4]|33|6[23]))\\d\\d|365(?:[0-46-9]\\d|5[0-35-9]))\\d{4}", null, null, null, "123123456", null, null, null, [7]],
                            [null, null, "(?:36554|(?:4[04]|5[015]|60|7[07])\\d{3})\\d{4}", null, null, null, "401234567"],
                            [null, null, "88\\d{7}", null, null, null, "881234567"],
                            [null, null, "900200\\d{3}", null, null, null, "900200123"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "AZ", 994, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[12]|365", "[12]|365", "[12]|365(?:[0-46-9]|5[0-35-9])"], "(0$1)"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[3-8]"], "0$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[12]|365", "[12]|365", "[12]|365(?:[0-46-9]|5[0-35-9])"], "(0$1)"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[3-8]"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BA: [null, [null, null, "(?:[3589]\\d|49|6\\d\\d?|70)\\d{6}", null, null, null, null, null, null, [8, 9],
                                [6]
                            ],
                            [null, null, "(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}", null, null, null, "30212345", null, null, [8],
                                [6]
                            ],
                            [null, null, "6(?:0(?:3\\d|40)|[1-356]\\d|44[0-6]|71[137])\\d{5}", null, null, null, "61123456"],
                            [null, null, "8[08]\\d{6}", null, null, null, "80123456", null, null, [8]],
                            [null, null, "9[0246]\\d{6}", null, null, null, "90123456", null, null, [8]],
                            [null, null, "8[12]\\d{6}", null, null, null, "82123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BA", 387, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})", "$1-$2", ["[2-9]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-356]|[7-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-356]|[7-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70(?:3[0146]|[56]0)\\d{4}", null, null, null, "70341234", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BB: [null, [null, null, "(?:246|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}", null, null, null, "2464123456", null, null, null, [7]],
                            [null, null, "246(?:2(?:[356]\\d|4[0-57-9]|8[0-79])|45\\d|69[5-7]|8(?:[2-5]\\d|83))\\d{4}", null, null, null, "2462501234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "(?:246976|900[2-9]\\d\\d)\\d{4}", null, null, null, "9002123456", null, null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, "24631\\d{5}", null, null, null, "2463101234", null, null, null, [7]], "BB", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "246", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "246(?:292|367|4(?:1[7-9]|3[01]|44|67)|7(?:36|53))\\d{4}", null, null, null, "2464301234", null, null, null, [7]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BD: [null, [null, null, "[13469]\\d{9}|8[0-79]\\d{7,8}|[2-7]\\d{8}|[2-9]\\d{7}|[3-689]\\d{6}|[57-9]\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9, 10]],
                            [null, null, "(?:(?:2(?:[45]\\d{3}|7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|[13][1-6]|2[0157-9]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[01367]|7[15]|8[0146-9]))|7(?:02|21\\d|[3-589]1|6[12]|72[24])\\d|8(?:(?:[01]|217|3[12])\\d|4[12]|[5-7](?:1\\d|2)))\\d|3(?:(?:0(?:2[348]\\d|3[2-6])|(?:1(?:2[5-7]|[5-7])|3(?:1|24)|[5-7]1)\\d)\\d|2(?:1\\d\\d|2(?:[35]\\d\\d|4))|4(?:1\\d\\d|2(?:[25]\\d\\d|[47]))|8(?:1\\d\\d|2(?:(?:2\\d|4)\\d|3)))|4(?:0(?:2(?:[09]\\d|7)|33\\d\\d)|(?:1\\d|4(?:2[2-46]|5[25])|8(?:23|54))\\d\\d|2(?:1\\d\\d|2(?:[25]|[67]\\d\\d))|3(?:1\\d\\d(?:\\d{2})?|(?:2[236-9]|32)\\d\\d)|525|6(?:(?:[18]|2[3-6]|62)\\d\\d|5(?:[38]|[5-7]\\d\\d))|9(?:(?:[18]|2[2-5])\\d\\d|53\\d\\d?))|5(?:(?:02[03489]|1|22[2457]|32[35-79]|42[46]|[58]26|724)\\d\\d|6(?:(?:[18]|53)\\d\\d|2))|6(?:(?:(?:[04]2[34]|32[3478]|52[47]|[78]2[2-5]|92[2-6])\\d|6(?:[18]\\d|6(?:2(?:2|[34]\\d)|5[245]\\d)))\\d|2(?:(?:2[2-5]|8)\\d\\d|5(?:[3-5]\\d\\d|7)))|9(?:[24]1\\d\\d|[35]1))\\d{3}|(?:3(?:0(?:2[02-9]\\d|3[56])|(?:22[1-5]|32[2-6]|422)\\d|529)|(?:4(?:22[2-8]|32[02-9]|(?:[48][18]|71)\\d|5(?:1\\d|23)|6(?:2[467]|5[3-57]))|5(?:[2-47-9]1\\d|5(?:1\\d|26))|6(?:0(?:1\\d|24)|[3-589]1\\d|665[35])|81|9(?:[024]2|1\\d|81))\\d|732)\\d{3}|(?:4[46]23|5(?:222|32[37]))\\d{3}", null, null, null, "27111234"],
                            [null, null, "(?:1[13-9]\\d|(?:3[78]|44)[02-9]|6(?:44|6[02-9]))\\d{7}", null, null, null, "1812345678", null, null, [10]],
                            [null, null, "80[03]\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\d{6}", null, null, null, "9604123456", null, null, [10]], "BD", 880, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-7]|[459]1"], "0$1"],
                                [null, "(\\d{3})(\\d{3,7})", "$1-$2", ["3(?:[2-5]1|[67]|8[013-9])|4(?:[235]1|4[01346-9]|6[168]|7|[89][18])|5(?:[2-578]1|6[128]|9)|6(?:[0389]1|28|4[14]|5|6[01346-9])|7(?:[2-589]|61)|8(?:0[014-9]|[12]|[3-7]1)|9(?:[24]1|[358])"], "0$1"],
                                [null, "(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]"], "0$1"],
                                [null, "(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BE: [null, [null, null, "4\\d{8}|[1-9]\\d{7}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|9[2-4])\\d|8(?:0[2-8]|[1-79]\\d))\\d{5}", null, null, null, "12345678", null, null, [8]],
                            [null, null, "4(?:5[56]|6[0135-8]|[79]\\d|8[3-9])\\d{6}", null, null, null, "470123456", null, null, [9]],
                            [null, null, "800[1-9]\\d{4}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "(?:70(?:2[0-57]|3[0457]|44|69|7[0579])|90(?:0[0-35-8]|1[36]|2[0-3568]|3[0135689]|4[2-68]|5[1-68]|6[0-378]|7[23568]|9[34679]))\\d{4}", null, null, null, "90012345", null, null, [8]],
                            [null, null, "7879\\d{4}", null, null, null, "78791234", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BE", 32, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[23]|4[23]|9[2-4]"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-7]|8(?:0[2-8]|[1-79])"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "78(?:0[57]|1[0458]|2[25]|3[5-8]|48|[56]0|7[078])\\d{4}", null, null, null, "78102345", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BF: [null, [null, null, "[25-7]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:0(?:49|5[23]|6[56]|9[016-9])|4(?:4[569]|5[4-6]|6[56]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}", null, null, null, "20491234"],
                            [null, null, "(?:5[124-8]|[67]\\d)\\d{6}", null, null, null, "70123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BF", 226, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[25-7]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BG: [null, [null, null, "[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9],
                                [4, 5]
                            ],
                            [null, null, "(?:(?:[236]\\d|5[1-9]|8[1-6]|9[1-7])\\d|4(?:[124-7]\\d|3[1-6])|7(?:0[1-9]|[1-9]\\d))\\d{4,5}|2\\d{5}", null, null, null, "2123456", null, null, [6, 7, 8],
                                [4, 5]
                            ],
                            [null, null, "(?:4(?:3[07-9]|8\\d)|(?:8[7-9]\\d|9(?:8\\d|9[69]))\\d)\\d{5}", null, null, null, "48123456", null, null, [8, 9]],
                            [null, null, "800\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "90\\d{6}", null, null, null, "90123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "700\\d{5}", null, null, null, "70012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BG", 359, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|70[1-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["7|80"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BH: [null, [null, null, "[136-9]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9])|9[69][69])|7(?:1(?:11|78)|7\\d\\d))\\d{4}", null, null, null, "17001234"],
                            [null, null, "(?:3(?:[1-4679]\\d|5[013-69]|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\d|7[0-6])))\\d{4}", null, null, null, "36001234"],
                            [null, null, "80\\d{6}", null, null, null, "80123456"],
                            [null, null, "(?:87|9[014578])\\d{6}", null, null, null, "90123456"],
                            [null, null, "84\\d{6}", null, null, null, "84123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BH", 973, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[1367]|8[047]|9[014578]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BI: [null, [null, null, "(?:[267]\\d|31)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "22\\d{6}", null, null, null, "22201234"],
                            [null, null, "(?:29|31|6[189]|7[125-9])\\d{6}", null, null, null, "79561234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BI", 257, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[23]|6[189]|7[125-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BJ: [null, [null, null, "[2689]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:02|1[037]|2[45]|3[68])\\d{5}", null, null, null, "20211234"],
                            [null, null, "(?:6\\d|9[03-9])\\d{6}", null, null, null, "90011234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "857[58]\\d{4}", null, null, null, "85751234"], "BJ", 229, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2689]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "81\\d{6}", null, null, null, "81123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BL: [null, [null, null, "(?:590|69\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "590(?:2[7-9]|5[12]|87)\\d{4}", null, null, null, "590271234"],
                            [null, null, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}", null, null, null, "690001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BL", 590, "00", "0", null, null, "0", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BM: [null, [null, null, "(?:441|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "441(?:2(?:02|23|[3479]\\d|61)|[46]\\d\\d|5(?:4\\d|60|89)|824)\\d{4}", null, null, null, "4412345678", null, null, null, [7]],
                            [null, null, "441(?:[37]\\d|5[0-39])\\d{5}", null, null, null, "4413701234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BM", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "441", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BN: [null, [null, null, "[2-578]\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:2(?:[013-9]\\d|2[0-7])|[3-5]\\d\\d)\\d{4}", null, null, null, "2345678"],
                            [null, null, "(?:22[89]|[78]\\d\\d)\\d{4}", null, null, null, "7123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BN", 673, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BO: [null, [null, null, "(?:[2-467]\\d{3}|80017)\\d{4}", null, null, null, null, null, null, [8, 9],
                                [7]
                            ],
                            [null, null, "(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}", null, null, null, "22123456", null, null, [8],
                                [7]
                            ],
                            [null, null, "[67]\\d{7}", null, null, null, "71234567", null, null, [8]],
                            [null, null, "80017\\d{4}", null, null, null, "800171234", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BO", 591, "00(?:1\\d)?", "0", null, null, "0(1\\d)?", null, null, null, [
                                [null, "(\\d)(\\d{7})", "$1 $2", ["[2-4]"], null, "0$CC $1"],
                                [null, "(\\d{8})", "$1", ["[67]"], null, "0$CC $1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"], null, "0$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BQ: [null, [null, null, "(?:[34]1|7\\d)\\d{5}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:318[023]|41(?:6[023]|70)|7(?:1[578]|50)\\d)\\d{3}", null, null, null, "7151234"],
                            [null, null, "(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}", null, null, null, "3181234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BQ", 599, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "[347]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BR: [null, [null, null, "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-24679]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}", null, null, null, null, null, null, [8, 9, 10, 11]],
                            [null, null, "(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}", null, null, null, "1123456789", null, null, [10],
                                [8]
                            ],
                            [null, null, "(?:[189][1-9]|2[12478])(?:7|9\\d)\\d{7}|(?:3[1-578]|[46][1-9]|5[13-5]|7[13-579])(?:[6-9]|9\\d)\\d{7}", null, null, null, "11961234567", null, null, [10, 11],
                                [8]
                            ],
                            [null, null, "800\\d{6,7}", null, null, null, "800123456", null, null, [9, 10]],
                            [null, null, "(?:300|[59]00\\d?)\\d{6}", null, null, null, "300123456", null, null, [9, 10]],
                            [null, null, "(?:300\\d(?:\\d{2})?|4(?:0(?:0\\d|20)|370))\\d{4}", null, null, null, "40041234", null, null, [8, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BR", 55, "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)", "0", null, null, "0(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?", "$2", null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "300|4(?:0(?:0|20)|370)"]],
                                [null, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["[3589]00"], "0$1"],
                                [null, "(\\d{3,5})", "$1", ["1[125689]"]],
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["[2-9](?:0[1-9]|[1-9])"]],
                                [null, "(\\d{5})(\\d{4})", "$1-$2", ["9(?:0[1-9]|[1-9])"]],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["[1-9][1-9]"], "($1)", "0 $CC ($1)"],
                                [null, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[1-9][1-9]9"], "($1)", "0 $CC ($1)"]
                            ],
                            [
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "300|4(?:0(?:0|20)|370)"]],
                                [null, "(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["[3589]00"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["[1-9][1-9]"], "($1)", "0 $CC ($1)"],
                                [null, "(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[1-9][1-9]9"], "($1)", "0 $CC ($1)"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:300\\d|40(?:0\\d|20))\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BS: [null, [null, null, "(?:242|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}", null, null, null, "2423456789", null, null, null, [7]],
                            [null, null, "242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|[89]9))\\d{4}", null, null, null, "2423591234", null, null, null, [7]],
                            [null, null, "(?:242300|8(?:00|33|44|55|66|77|88)[2-9]\\d\\d)\\d{4}", null, null, null, "8002123456", null, null, null, [7]],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BS", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "242", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "242225[0-46-9]\\d{3}", null, null, null, "2422250123"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BT: [null, [null, null, "[17]\\d{7}|[2-8]\\d{6}", null, null, null, null, null, null, [7, 8],
                                [6]
                            ],
                            [null, null, "(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}", null, null, null, "2345678", null, null, [7],
                                [6]
                            ],
                            [null, null, "(?:1[67]|77)\\d{6}", null, null, null, "17123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BT", 975, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[23568]|4[5-7]|7[246]"]],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BW: [null, [null, null, "(?:(?:[2-6]|7\\d)\\d|90)\\d{5}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[01])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[0389]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}", null, null, null, "2401234", null, null, [7]],
                            [null, null, "7(?:[1-6]\\d{3}|7(?:[014-8]\\d\\d|200))\\d{3}", null, null, null, "71123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "90\\d{5}", null, null, null, "9012345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "79(?:1(?:[01]\\d|20)|2[0-2]\\d)\\d{3}", null, null, null, "79101234", null, null, [8]], "BW", 267, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-6]"]],
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["90"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BY: [null, [null, null, "(?:(?:[12]|8[0-7]\\d)\\d|33|44|902)\\d{7}|8(?:[05-79]\\d|1[0-489])\\d{7}|8[0-79]\\d{5,7}|8\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9, 10, 11],
                                [5]
                            ],
                            [null, null, "(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}", null, null, null, "152450911", null, null, [9],
                                [5, 6, 7]
                            ],
                            [null, null, "(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}", null, null, null, "294911911", null, null, [9]],
                            [null, null, "8(?:0[013]|20\\d)\\d{7}|800\\d{3,6}", null, null, null, "8011234567"],
                            [null, null, "(?:810|902)\\d{7}", null, null, null, "9021234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "249\\d{6}", null, null, null, "249123456", null, null, [9]], "BY", 375, "810", "8", null, null, "0|80?", null, "8~10", null, [
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:5[24]|6[235]|7[467])|2(?:1[246]|2[25]|3[26])", "1(?:5[24]|6(?:2|3[04-9]|5[0346-9])|7(?:[46]|7[37-9]))|2(?:1[246]|2[25]|3[26])"], "8 0$1"],
                                [null, "(\\d{4})(\\d{2})(\\d{3})", "$1 $2-$3", ["1(?:[56]|7[179])|2[1-3]", "1(?:[56]|7(?:1[3-9]|7|9[2-7]))|2[1-3]"], "8 0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"],
                                [null, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:8(?:0[013]|10|20\\d)|902)\\d{7}|800\\d{3,6}"],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        BZ: [null, [null, null, "(?:0800\\d|[2-8])\\d{6}", null, null, null, null, null, null, [7, 11]],
                            [null, null, "(?:2(?:[02]\\d|36)|[3-58][02]\\d|7(?:[02]\\d|32))\\d{4}", null, null, null, "2221234", null, null, [7]],
                            [null, null, "6[0-35-7]\\d{5}", null, null, null, "6221234", null, null, [7]],
                            [null, null, "0800\\d{7}", null, null, null, "08001234123", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "BZ", 501, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]],
                                [null, "(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CA: [null, [null, null, "(?:[2-8]\\d|90)\\d{8}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}", null, null, null, "5062345678", null, null, null, [7]],
                            [null, null, "(?:2(?:04|[23]6|[48]9|50)|3(?:06|43|65)|4(?:03|1[68]|3[178]|50)|5(?:06|1[49]|48|79|8[17])|6(?:04|13|39|47)|7(?:0[59]|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}", null, null, null, "5062345678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:5(?:00|2[12]|33|44|66|77|88)|622)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, "600[2-9]\\d{6}", null, null, null, "6002012345"], "CA", 1, "011", "1", null, null, "1", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CC: [null, [null, null, "1\\d{5,9}|(?:[48]\\d\\d|550)\\d{6}", null, null, null, null, null, null, [6, 7, 8, 9, 10]],
                            [null, null, "8(?:51(?:0(?:02|31|60)|118)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}", null, null, null, "891621234", null, null, [9],
                                [8]
                            ],
                            [null, null, "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}", null, null, null, "412345678", null, null, [9]],
                            [null, null, "180(?:0\\d{3}|2)\\d{3}", null, null, null, "1800123456", null, null, [7, 10]],
                            [null, null, "190[0-26]\\d{6}", null, null, null, "1900123456", null, null, [10]],
                            [null, null, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", null, null, null, "1300123456", null, null, [6, 8, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:14(?:5\\d|71)|550\\d)\\d{5}", null, null, null, "550123456", null, null, [9]], "CC", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0", null, null, "0|([59]\\d{7})$", "8$1", "0011", null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CD: [null, [null, null, "[189]\\d{8}|[1-68]\\d{6}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "12\\d{7}|[1-6]\\d{6}", null, null, null, "1234567"],
                            [null, null, "(?:8(?:[0-2459]\\d\\d|8)|9[017-9]\\d\\d)\\d{5}", null, null, null, "991234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CD", 243, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CF: [null, [null, null, "(?:[27]\\d{3}|8776)\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, "2[12]\\d{6}", null, null, null, "21612345"],
                            [null, null, "7[0257]\\d{6}", null, null, null, "70012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8776\\d{4}", null, null, null, "87761234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CF", 236, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CG: [null, [null, null, "(?:(?:0\\d|80)\\d|222)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "222[1-589]\\d{5}", null, null, null, "222123456"],
                            [null, null, "0[14-6]\\d{7}", null, null, null, "061234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "80(?:0\\d\\d|11[0-4])\\d{4}", null, null, null, "800123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CG", 242, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["801"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CH: [null, [null, null, "8\\d{11}|[2-9]\\d{8}", null, null, null, null, null, null, [9, 12]],
                            [null, null, "(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}", null, null, null, "212345678", null, null, [9]],
                            [null, null, "7[35-9]\\d{7}", null, null, null, "781234567", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "90[016]\\d{6}", null, null, null, "900123456", null, null, [9]],
                            [null, null, "84[0248]\\d{6}", null, null, null, "840123456", null, null, [9]],
                            [null, null, "878\\d{6}", null, null, null, "878123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CH", 41, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]|[89]1"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|9"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]
                            ], null, [null, null, "74[0248]\\d{6}", null, null, null, "740123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5[18]\\d{7}", null, null, null, "581234567", null, null, [9]], null, null, [null, null, "860\\d{9}", null, null, null, "860123456789", null, null, [12]]
                        ],
                        CI: [null, [null, null, "[02-8]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:2(?:0[023]|1[02357]|[23][045]|4[03-5])|3(?:0[06]|1[069]|[2-4][07]|5[09]|6[08]))\\d{5}", null, null, null, "21234567"],
                            [null, null, "(?:[07][1-9]|[45]\\d|6[014-9]|8[4-9])\\d{6}", null, null, null, "01234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CI", 225, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[02-8]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CK: [null, [null, null, "[2-8]\\d{4}", null, null, null, null, null, null, [5]],
                            [null, null, "(?:2\\d|3[13-7]|4[1-5])\\d{3}", null, null, null, "21234"],
                            [null, null, "[5-8]\\d{4}", null, null, null, "71234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CK", 682, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})", "$1 $2", ["[2-8]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CL: [null, [null, null, "(?:1230|[2-57-9]\\d|6\\d{1,3})\\d{7}", null, null, null, null, null, null, [9, 10, 11]],
                            [null, null, "(?:2(?:1962|(?:2\\d\\d|32[0-46-8])\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\d|8(?:0[1-9]|[1-9]\\d))\\d\\d)\\d{4}", null, null, null, "221234567", null, null, [9]],
                            [null, null, "(?:2(?:1962|(?:2\\d\\d|32[0-46-8])\\d)|(?:(?:3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|9[2-9])\\d|8(?:0[1-9]|[1-9]\\d))\\d\\d)\\d{4}", null, null, null, "221234567", null, null, [9]],
                            [null, null, "(?:1230\\d|800)\\d{6}", null, null, null, "800123456", null, null, [9, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "600\\d{7,8}", null, null, null, "6001234567", null, null, [10, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "44\\d{7}", null, null, null, "441234567", null, null, [9]], "CL", 56, "(?:0|1(?:1[0-69]|2[0-57]|5[13-58]|69|7[0167]|8[018]))0", null, null, null, null, null, null, 1, [
                                [null, "(\\d{4})", "$1", ["1(?:[03-58]|[29]1)"]],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2(?:2|32)", "2(?:2|32[0-46-8])"], "($1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"],
                                [null, "(\\d{5})(\\d{4})", "$1 $2", ["2"], "($1)"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[68]00"]],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["600"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                            ],
                            [
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2(?:2|32)", "2(?:2|32[0-46-8])"], "($1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"],
                                [null, "(\\d{5})(\\d{4})", "$1 $2", ["2"], "($1)"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[68]00"]],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["600"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "600\\d{7,8}", null, null, null, null, null, null, [10, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CM: [null, [null, null, "(?:[26]\\d\\d|88)\\d{6}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "2(?:22|33|4[23])\\d{6}", null, null, null, "222123456", null, null, [9]],
                            [null, null, "6[5-9]\\d{7}", null, null, null, "671234567", null, null, [9]],
                            [null, null, "88\\d{6}", null, null, null, "88012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CM", 237, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]],
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CN: [null, [null, null, "(?:(?:(?:1[03-68]|2\\d)\\d\\d|[3-79])\\d|8[0-57-9])\\d{7}|[1-579]\\d{10}|8[0-57-9]\\d{8,9}|[1-79]\\d{9}|[1-9]\\d{7}|[12]\\d{6}", null, null, null, null, null, null, [7, 8, 9, 10, 11, 12],
                                [5, 6]
                            ],
                            [null, null, "21(?:100\\d{2}|95\\d{3,4}|\\d{8,10})|(?:10|2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:31|5[457]|6[09]|91)|8(?:[57]1|98))(?:100\\d{2}|95\\d{3,4}|\\d{8})|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[3-9]|5[2-9]|6[4789]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-4689]|6[2368]|9[02-9])|8(?:078|1[236-8]|2[5-7]|3\\d|5[1-9]|7[02-9]|8[3678]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100\\d{2}|95\\d{3,4}|\\d{7})", null, null, null, "1012345678", null, null, null, [5, 6]],
                            [null, null, "1(?:[38]\\d{3}|4[57]\\d{2}|5[0-35-9]\\d{2}|6[267]\\d{2}|7(?:[0-35-8]\\d{2}|40[0-5])|9[189]\\d{2})\\d{6}", null, null, null, "13123456789", null, null, [11]],
                            [null, null, "(?:10)?800\\d{7}", null, null, null, "8001234567", null, null, [10, 12]],
                            [null, null, "16[08]\\d{5}", null, null, null, "16812345", null, null, [8]],
                            [null, null, "400\\d{7}|950\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[4789]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[3678]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}", null, null, null, "4001234567", null, null, [7, 8, 9, 10, 11],
                                [5, 6]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CN", 86, "(?:1(?:[12]\\d{3}|79\\d{2}|9[0-7]\\d{2}))?00", "0", null, null, "0|(1(?:[12]\\d{3}|79\\d{2}|9[0-7]\\d{2}))", null, "00", null, [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[48]00"]],
                                [null, "(\\d{5,6})", "$1", ["100|95"]],
                                [null, "(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2\\d)[19]", "(?:10|2\\d)(?:10|9[56])", "(?:10|2\\d)(?:100|9[56])"], "0$1", "$CC $1"],
                                [null, "(\\d{3})(\\d{5,6})", "$1 $2", ["[3-9]", "[3-9]\\d\\d[19]", "[3-9]\\d\\d(?:10|9[56])"], "0$1", "$CC $1"],
                                [null, "(\\d{3,4})(\\d{4})", "$1 $2", ["[2-9]"]],
                                [null, "(\\d{2})(\\d{4})(\\d{4,6})", "$1 $2 $3", ["21"], "0$1", "$CC $1", 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10[1-9]|2[02-9]", "10[1-9]|2[02-9]", "10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)"], "0$1", "$CC $1", 1],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["807", "8078"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1(?:[3-57-9]|6[267])"], null, "$CC $1"],
                                [null, "(\\d{5})(\\d{3})(\\d{4})", "$1 $2 $3", ["108", "1080", "10800"]],
                                [null, "(\\d{3})(\\d{7,8})", "$1 $2", ["950"]]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[48]00"]],
                                [null, "(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2\\d)[19]", "(?:10|2\\d)(?:10|9[56])", "(?:10|2\\d)(?:100|9[56])"], "0$1", "$CC $1"],
                                [null, "(\\d{3})(\\d{5,6})", "$1 $2", ["[3-9]", "[3-9]\\d\\d[19]", "[3-9]\\d\\d(?:10|9[56])"], "0$1", "$CC $1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4,6})", "$1 $2 $3", ["21"], "0$1", "$CC $1", 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10[1-9]|2[02-9]", "10[1-9]|2[02-9]", "10(?:[1-79]|8(?:0[1-9]|[1-9]))|2[02-9]"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:1[02-9]|35|49|5|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|[35][2-9]|6[47-9]|7|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[04-9]|4[3-6]|6[2368])|8(?:1[236-8]|2[5-7]|3|5[1-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["3(?:11|7[179])|4(?:[15]1|3[1-35])|5(?:1|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[457]|6[09])|8(?:[57]1|98)"], "0$1", "$CC $1", 1],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["807", "8078"], "0$1", "$CC $1", 1],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1(?:[3-57-9]|6[267])"], null, "$CC $1"],
                                [null, "(\\d{5})(\\d{3})(\\d{4})", "$1 $2 $3", ["108", "1080", "10800"]],
                                [null, "(\\d{3})(\\d{7,8})", "$1 $2", ["950"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:4|(?:10)?8)00\\d{7}|950\\d{7,8}", null, null, null, null, null, null, [10, 11, 12]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CO: [null, [null, null, "(?:1\\d|3)\\d{9}|[124-8]\\d{7}", null, null, null, null, null, null, [8, 10, 11],
                                [7]
                            ],
                            [null, null, "[124-8][2-9]\\d{6}", null, null, null, "12345678", null, null, [8],
                                [7]
                            ],
                            [null, null, "3(?:0[0-5]|1\\d|2[0-3]|5[01])\\d{7}", null, null, null, "3211234567", null, null, [10]],
                            [null, null, "1800\\d{7}", null, null, null, "18001234567", null, null, [11]],
                            [null, null, "19(?:0[01]|4[78])\\d{7}", null, null, null, "19001234567", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CO", 57, "00(?:4(?:[14]4|56)|[579])", "0", null, null, "0([3579]|4(?:[14]4|56))?", null, null, null, [
                                [null, "(\\d)(\\d{7})", "$1 $2", ["1(?:[2-79]|8[2-9])|[24-8]"], "($1)", "0$CC $1"],
                                [null, "(\\d{3})(\\d{7})", "$1 $2", ["3"], null, "0$CC $1"],
                                [null, "(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1(?:80|9)", "1(?:800|9)"], "0$1"]
                            ],
                            [
                                [null, "(\\d)(\\d{7})", "$1 $2", ["1(?:[2-79]|8[2-9])|[24-8]"], "($1)", "0$CC $1"],
                                [null, "(\\d{3})(\\d{7})", "$1 $2", ["3"], null, "0$CC $1"],
                                [null, "(\\d)(\\d{3})(\\d{7})", "$1 $2 $3", ["1(?:80|9)", "1(?:800|9)"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CR: [null, [null, null, "(?:8\\d|90)\\d{8}|[24-8]\\d{7}", null, null, null, null, null, null, [8, 10]],
                            [null, null, "2(?:[024-7]\\d\\d|1(?:0[7-9]|[1-9]\\d))\\d{4}", null, null, null, "22123456", null, null, [8]],
                            [null, null, "(?:(?:5(?:0[01]|7[0-3])|(?:7[0-3]|8[3-9])\\d)\\d\\d|6(?:[0-4]\\d{3}|500[01]))\\d{3}", null, null, null, "83123456", null, null, [8]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "90[059]\\d{7}", null, null, null, "9001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:210[0-6]|4\\d{3}|5100)\\d{4}", null, null, null, "40001234", null, null, [8]], "CR", 506, "00", null, null, null, "(19(?:0[0-2468]|1[09]|20|66|77|99))", null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[24-7]|8[3-9]"], null, "$CC $1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"], null, "$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CU: [null, [null, null, "[2-57]\\d{7}|[2-47]\\d{6}|[34]\\d{5}", null, null, null, null, null, null, [6, 7, 8],
                                [4, 5]
                            ],
                            [null, null, "(?:2[1-4]|7\\d)\\d{5,6}|(?:3[1-3]|4[1-35-8])\\d{6}|3[23]\\d{4,5}|4[12578]\\d{5}|4[78]\\d{4}", null, null, null, "71234567", null, null, null, [4, 5]],
                            [null, null, "5\\d{7}", null, null, null, "51234567", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CU", 53, "119", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{4,6})", "$1 $2", ["[2-4]"], "(0$1)"],
                                [null, "(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"],
                                [null, "(\\d)(\\d{7})", "$1 $2", ["5"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CV: [null, [null, null, "[2-59]\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}", null, null, null, "2211234"],
                            [null, null, "(?:[34][36]|5[1-389]|9\\d)\\d{5}", null, null, null, "9911234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CV", 238, "0", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-59]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CW: [null, [null, null, "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "9(?:(?:[48]\\d|50)\\d|7(?:2[0-24]|[34]\\d|6[35-7]|77|8[7-9]))\\d{4}", null, null, null, "94151234"],
                            [null, null, "9(?:5(?:[12467]\\d|3[01])|6(?:[15-9]\\d|3[01]))\\d{4}", null, null, null, "95181234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "60[0-2]\\d{4}", null, null, null, "6001234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CW", 599, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]
                            ], null, [null, null, "955\\d{5}", null, null, null, "95581234", null, null, [8]], 1, "[69]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CX: [null, [null, null, "1\\d{5,9}|(?:[48]\\d\\d|550)\\d{6}", null, null, null, null, null, null, [6, 7, 8, 9, 10]],
                            [null, null, "8(?:51(?:0(?:01|30|59)|117)|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}", null, null, null, "891641234", null, null, [9],
                                [8]
                            ],
                            [null, null, "4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[6-9]|7[02-9]|8[0-2457-9]|9[017-9])\\d{6}", null, null, null, "412345678", null, null, [9]],
                            [null, null, "180(?:0\\d{3}|2)\\d{3}", null, null, null, "1800123456", null, null, [7, 10]],
                            [null, null, "190[0-26]\\d{6}", null, null, null, "1900123456", null, null, [10]],
                            [null, null, "13(?:00\\d{3}|45[0-4])\\d{3}|13\\d{4}", null, null, null, "1300123456", null, null, [6, 8, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:14(?:5\\d|71)|550\\d)\\d{5}", null, null, null, "550123456", null, null, [9]], "CX", 61, "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "0", null, null, "0|([59]\\d{7})$", "8$1", "0011", null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CY: [null, [null, null, "(?:[279]\\d|[58]0)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "2[2-6]\\d{6}", null, null, null, "22345678"],
                            [null, null, "9[4-79]\\d{6}", null, null, null, "96123456"],
                            [null, null, "800\\d{5}", null, null, null, "80001234"],
                            [null, null, "90[09]\\d{5}", null, null, null, "90012345"],
                            [null, null, "80[1-9]\\d{5}", null, null, null, "80112345"],
                            [null, null, "700\\d{5}", null, null, null, "70012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "CY", 357, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:50|77)\\d{6}", null, null, null, "77123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        CZ: [null, [null, null, "(?:[2-578]\\d|60|9\\d{1,4})\\d{7}", null, null, null, null, null, null, [9, 10, 11, 12]],
                            [null, null, "(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}", null, null, null, "212345678", null, null, [9]],
                            [null, null, "(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}", null, null, null, "601123456", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "9(?:0[05689]|76)\\d{6}", null, null, null, "900123456", null, null, [9]],
                            [null, null, "8[134]\\d{7}", null, null, null, "811234567", null, null, [9]],
                            [null, null, "70[01]\\d{6}", null, null, null, "700123456", null, null, [9]],
                            [null, null, "9[17]0\\d{6}", null, null, null, "910123456", null, null, [9]], "CZ", 420, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9[36]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["96"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "9(?:5\\d|7[2-4])\\d{6}", null, null, null, "972123456", null, null, [9]], null, null, [null, null, "9(?:3\\d{9}|6\\d{7,10})", null, null, null, "93123456789"]
                        ],
                        DE: [null, [null, null, "(?:1|[235-9]\\d{11}|4(?:[0-8]\\d{2,10}|9(?:[05]\\d{7}|[46][1-8]\\d{2,6})))\\d{3}|[1-35-9]\\d{6,13}|49(?:(?:[0-25]\\d|3[1-689])\\d{4,8}|4[1-8]\\d{4}|6[0-8]\\d{3,4}|7[1-7]\\d{5,8})|497[0-7]\\d{4}|49(?:[0-2579]\\d|[34][1-9])\\d{3}|[1-9]\\d{5}|[13468]\\d{4}", null, null, null, null, null, null, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                                [3]
                            ],
                            [null, null, "(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-3589]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|[29]\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{4,12}|3(?:(?:[03569]\\d|4[0-79]|7[1-7]|8[1-8])\\d{4,12}|2\\d{9})|4(?:(?:[02-48]\\d|1[02-9]|5[0-6]|6[0-8]|7[0-79])\\d{4,12}|9(?:[0-37]\\d{4,9}|[4-6]\\d{4,10}))|(?:2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:0\\d?|[35-9][15]|4[015])|4(?:0\\d?|[2-9]1)|[57][1-9]1|[68](?:[1-8]1|9\\d?)|9(?:06|[1-9]1))\\d{3}", null, null, null, "30123456", null, null, [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                                [3, 4]
                            ],
                            [null, null, "1(?:5[0-25-9]\\d{8}|(?:6[023]|7\\d)\\d{7,8})", null, null, null, "15123456789", null, null, [10, 11]],
                            [null, null, "800\\d{7,12}", null, null, null, "8001234567890", null, null, [10, 11, 12, 13, 14, 15]],
                            [null, null, "(?:137[7-9]|900(?:[135]|9\\d))\\d{6}", null, null, null, "9001234567", null, null, [10, 11]],
                            [null, null, "1(?:3(?:7[1-6]\\d\\d|8)|80\\d{1,7})\\d{4}", null, null, null, "18012345", null, null, [7, 8, 9, 10, 11, 12, 13, 14]],
                            [null, null, "700\\d{8}", null, null, null, "70012345678", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "DE", 49, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"],
                                [null, "(\\d{3})(\\d{3,12})", "$1 $2", ["2(?:0[1-389]|1[124]|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|(?:4[2-9]|[57][1-9]|[68][1-8])1|9(?:06|[1-9]1)", "2(?:0[1-389]|1(?:[14]|2[0-8])|2[18]|3[14]|[4-9]1)|3(?:[35-9][15]|4[015])|(?:4[2-9]|[57][1-9]|[68][1-8])1|9(?:06|[1-9]1)"], "0$1"],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"],
                                [null, "(\\d{4})(\\d{3,11})", "$1 $2", ["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|7(?:0[2-8]|[1-9])|8(?:0[2-9]|[1-8])|9(?:0[7-9]|[1-9])", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|[46][1246]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|3[1357]|4[13578]|6[1246]|7[1356]|9[1346])|5(?:0[14]|2[1-3589]|3[1357]|[49][1246]|6[1-4]|7[13468]|8[13568])|6(?:0[1356]|2[1-489]|3[124-6]|4[1347]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|3[1357]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|4[1347]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|3[1357]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|7(?:0[2-8]|[1-9])|8(?:0[2-9]|[1-8])|9(?:0[7-9]|[1-9])"], "0$1"],
                                [null, "(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"],
                                [null, "(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"],
                                [null, "(\\d{5})(\\d{3,10})", "$1 $2", ["3"], "0$1"],
                                [null, "(\\d{3})(\\d{7,8})", "$1 $2", ["1(?:6[02-489]|7)"], "0$1"],
                                [null, "(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"],
                                [null, "(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"],
                                [null, "(\\d{5})(\\d{6})", "$1 $2", ["15[0568]"], "0$1"],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                                [null, "(\\d{3})(\\d{8})", "$1 $2", ["18[2-579]", "18[2-579]", "18(?:[2-479]|5(?:0[1-9]|[1-9]))"], "0$1"],
                                [null, "(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"],
                                [null, "(\\d{5})(\\d{6})", "$1 $2", ["18"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15[013-68]"], "0$1"],
                                [null, "(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15"], "0$1"]
                            ], null, [null, null, "16(?:4\\d{1,10}|[89]\\d{1,11})", null, null, null, "16412345", null, null, [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "18(?:1\\d{5,11}|[2-9]\\d{8})", null, null, null, "18500123456", null, null, [8, 9, 10, 11, 12, 13, 14]], null, null, [null, null, "1(?:5(?:(?:[03-68]00|113)\\d|2\\d55|7\\d99|9\\d33)|(?:6(?:013|255|399)|7(?:(?:[015]1|[69]3)3|[2-4]55|[78]99))\\d?)\\d{7}", null, null, null, "177991234567", null, null, [12, 13]]
                        ],
                        DJ: [null, [null, null, "(?:2\\d|77)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:1[2-5]|7[45])\\d{5}", null, null, null, "21360003"],
                            [null, null, "77\\d{6}", null, null, null, "77831001"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "DJ", 253, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        DK: [null, [null, null, "[2-9]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}", null, null, null, "32123456"],
                            [null, null, "(?:[2-7]\\d|8[126-9]|9[1-36-9])\\d{6}", null, null, null, "32123456"],
                            [null, null, "80\\d{6}", null, null, null, "80123456"],
                            [null, null, "90\\d{6}", null, null, null, "90123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "DK", 45, "00", null, null, null, null, null, null, 1, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        DM: [null, [null, null, "(?:[58]\\d\\d|767|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4]|70[1-3])\\d{4}", null, null, null, "7674201234", null, null, null, [7]],
                            [null, null, "767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-7])\\d{4}", null, null, null, "7672251234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "DM", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "767", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        DO: [null, [null, null, "(?:[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}", null, null, null, "8092345678", null, null, null, [7]],
                            [null, null, "8[024]9[2-9]\\d{6}", null, null, null, "8092345678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "DO", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "8[024]9", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        DZ: [null, [null, null, "(?:[1-4]|[5-79]\\d|80)\\d{7}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:(?:1\\d|2[013-79]|3[0-8]|4[0135689])\\d|9619)\\d{5}", null, null, null, "12345678"],
                            [null, null, "(?:(?:5[4-6]|7[7-9])\\d|6(?:[569]\\d|7[0-6]))\\d{6}", null, null, null, "551234567", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "80[3-689]1\\d{5}", null, null, null, "808123456", null, null, [9]],
                            [null, null, "80[12]1\\d{5}", null, null, null, "801123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "98[23]\\d{6}", null, null, null, "983123456", null, null, [9]], "DZ", 213, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        EC: [null, [null, null, "1800\\d{6,7}|(?:[2-7]|9\\d)\\d{7}", null, null, null, null, null, null, [8, 9, 10, 11],
                                [7]
                            ],
                            [null, null, "[2-7][2-7]\\d{6}", null, null, null, "22123456", null, null, [8],
                                [7]
                            ],
                            [null, null, "9(?:(?:39|[57][89]|[89]\\d)\\d|6(?:[0-27-9]\\d|30))\\d{5}", null, null, null, "991234567", null, null, [9]],
                            [null, null, "1800\\d{6,7}", null, null, null, "18001234567", null, null, [10, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "[2-7]890\\d{4}", null, null, null, "28901234", null, null, [8]], "EC", 593, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[2-7]"]],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
                            ],
                            [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-7]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        EE: [null, [null, null, "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d\\d|900)\\d{4}", null, null, null, null, null, null, [7, 8, 10]],
                            [null, null, "(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}", null, null, null, "3212345", null, null, [7]],
                            [null, null, "(?:5\\d|8[1-4])\\d{6}|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}", null, null, null, "51234567", null, null, [7, 8]],
                            [null, null, "800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}", null, null, null, "80012345"],
                            [null, null, "(?:40\\d\\d|900)\\d{4}", null, null, null, "9001234", null, null, [7, 8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70[0-2]\\d{5}", null, null, null, "70012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "EE", 372, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]"]],
                                [null, "(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-4])", "[45]|8(?:00[1-9]|[1-4])"]],
                                [null, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["80"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "800[2-9]\\d{3}", null, null, null, null, null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        EG: [null, [null, null, "(?:[189]\\d?|[24-6])\\d{8}|[13]\\d{7}", null, null, null, null, null, null, [8, 9, 10],
                                [6, 7]
                            ],
                            [null, null, "(?:1(?:3[23]|5\\d?)|(?:2[2-4]|3)\\d|4(?:0[2-5]|[578][23]|64)|5(?:0[2-7]|5\\d|7[23])|6[24-689]3|8(?:2[2-57]|4[26]|6[237]|8[2-4])|9(?:2[27]|3[24]|52|6[2356]|7[2-4]))\\d{6}", null, null, null, "234567890", null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "1[0-25]\\d{8}", null, null, null, "1001234567", null, null, [10]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "900\\d{7}", null, null, null, "9001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "EG", 20, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"],
                                [null, "(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[189]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        EH: [null, [null, null, "[5-8]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "528[89]\\d{5}", null, null, null, "528812345"],
                            [null, null, "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\d{6}", null, null, null, "650123456"],
                            [null, null, "80\\d{7}", null, null, null, "801234567"],
                            [null, null, "89\\d{7}", null, null, null, "891234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5924[01]\\d{4}", null, null, null, "592401234"], "EH", 212, "00", "0", null, null, "0", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "528[89]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ER: [null, [null, null, "[178]\\d{6}", null, null, null, null, null, null, [7],
                                [6]
                            ],
                            [null, null, "(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}", null, null, null, "8370362", null, null, null, [6]],
                            [null, null, "(?:17[1-3]|7\\d\\d)\\d{4}", null, null, null, "7123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ER", 291, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ES: [null, [null, null, "(?:51|[6-9]\\d)\\d{7}", null, null, null, null, null, null, [9]],
                            [null, null, "(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])\\d{4}|9(?:(?:(?:[135]\\d|[28][0-8]|4[1-9])\\d\\d|7(?:[124-9]\\d\\d|3(?:[0-8]\\d|9[1-9])))\\d\\d|6(?:[0-8]\\d{4}|9(?:0(?:[0-57-9]\\d\\d|6(?:0[0-8]|1[1-9]|[2-9]\\d))|[1-9]\\d{3}))))\\d\\d", null, null, null, "810123456"],
                            [null, null, "(?:(?:6\\d|7[1-48])\\d{5}|9(?:6906(?:09|10)|7390\\d\\d))\\d\\d", null, null, null, "612345678"],
                            [null, null, "[89]00\\d{6}", null, null, null, "800123456"],
                            [null, null, "80[367]\\d{6}", null, null, null, "803123456"],
                            [null, null, "90[12]\\d{6}", null, null, null, "901123456"],
                            [null, null, "70\\d{7}", null, null, null, "701234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ES", 34, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[568]|7[0-48]|9(?:0[12]|[1-8])"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "51\\d{7}", null, null, null, "511234567"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ET: [null, [null, null, "(?:11|[2-59]\\d)\\d{7}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:11(?:1(?:1[124]|2[2-57]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:18|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}", null, null, null, "111112345", null, null, null, [7]],
                            [null, null, "9\\d{8}", null, null, null, "911234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ET", 251, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-59]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FI: [null, [null, null, "(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}|[1-35689]\\d{4}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10]],
                            [null, null, "(?:1[3-79][1-8]|[235689][1-8]\\d)\\d{2,6}", null, null, null, "131234567", null, null, [5, 6, 7, 8, 9]],
                            [null, null, "(?:4[0-8]|50)\\d{4,8}", null, null, null, "412345678", null, null, [6, 7, 8, 9, 10]],
                            [null, null, "800\\d{4,6}", null, null, null, "800123456", null, null, [7, 8, 9]],
                            [null, null, "[67]00\\d{5,6}", null, null, null, "600123456", null, null, [8, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "FI", 358, "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "0", null, null, "0", null, "00", null, [
                                [null, "(\\d{5})", "$1", ["7"], "0$1"],
                                [null, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"],
                                [null, "(\\d{2})(\\d{4,8})", "$1 $2", ["1(?:0[1-9]|[3-79][1-8]|8)|2(?:0[1-9]|9)|[45]|7[135]"], "0$1"],
                                [null, "(\\d{3})(\\d{3,7})", "$1 $2", ["(?:1|20)0|[36-8]"], "0$1"]
                            ],
                            [
                                [null, "(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"],
                                [null, "(\\d{2})(\\d{4,8})", "$1 $2", ["1(?:0[1-9]|[3-79][1-8]|8)|2(?:0[1-9]|9)|[45]|7[135]"], "0$1"],
                                [null, "(\\d{3})(\\d{3,7})", "$1 $2", ["(?:1|20)0|[36-8]"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], 1, "1[03-79]|[2-9]", [null, null, "[13]00\\d{3,7}|20(?:0\\d{3,7}|(?:2[023]|9[89])\\d{1,6})|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})"],
                            [null, null, "(?:10|[23][09])\\d{4,8}|60(?:[12]\\d{5,6}|6\\d{7})|7(?:(?:1|3\\d)\\d{7}|5[03-9]\\d{3,7})|20[2-59]\\d\\d", null, null, null, "10112345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FJ: [null, [null, null, "(?:(?:0800\\d|[235-9])\\d|45)\\d{5}", null, null, null, null, null, null, [7, 11]],
                            [null, null, "(?:(?:3[0-5]|8[58])\\d|6(?:03|[25-7]\\d))\\d{4}", null, null, null, "3212345", null, null, [7]],
                            [null, null, "(?:[279]\\d|45|5[01568]|8[034679])\\d{5}", null, null, null, "7012345", null, null, [7]],
                            [null, null, "0800\\d{7}", null, null, null, "08001234567", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "FJ", 679, "0(?:0|52)", null, null, null, null, null, "00", null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FK: [null, [null, null, "[2-7]\\d{4}", null, null, null, null, null, null, [5]],
                            [null, null, "[2-47]\\d{4}", null, null, null, "31234"],
                            [null, null, "[56]\\d{4}", null, null, null, "51234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "FK", 500, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FM: [null, [null, null, "[39]\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:3[2357]0[1-9]|9[2-6]\\d\\d)\\d{3}", null, null, null, "3201234"],
                            [null, null, "(?:3[2357]0[1-9]|9[2-7]\\d\\d)\\d{3}", null, null, null, "3501234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "FM", 691, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["3(?:20|[357])|9", "3(?:20[1-9]|[357])|9"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FO: [null, [null, null, "(?:[2-8]\\d|90)\\d{4}", null, null, null, null, null, null, [6]],
                            [null, null, "(?:20|[34]\\d|8[19])\\d{4}", null, null, null, "201234"],
                            [null, null, "(?:[27][1-9]|5\\d)\\d{4}", null, null, null, "211234"],
                            [null, null, "80[257-9]\\d{3}", null, null, null, "802123"],
                            [null, null, "90(?:[13-5][15-7]|2[125-7]|99)\\d\\d", null, null, null, "901123"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:6[0-36]|88)\\d{4}", null, null, null, "601234"], "FO", 298, "00", null, null, null, "(10(?:01|[12]0|88))", null, null, null, [
                                [null, "(\\d{6})", "$1", ["[2-9]"], null, "$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        FR: [null, [null, null, "[1-9]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "[1-5]\\d{8}", null, null, null, "123456789"],
                            [null, null, "(?:6\\d\\d|7(?:00|[3-9]\\d))\\d{6}", null, null, null, "612345678"],
                            [null, null, "80[0-5]\\d{6}", null, null, null, "801234567"],
                            [null, null, "8[129]\\d{7}", null, null, null, "891123456"],
                            [null, null, "884\\d{6}", null, null, null, "884012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "9\\d{8}", null, null, null, "912345678"], "FR", 33, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["11"]],
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"]
                            ],
                            [
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "80[6-9]\\d{6}", null, null, null, "806123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GA: [null, [null, null, "(?:0\\d|[2-7])\\d{6}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "01\\d{6}", null, null, null, "01441234", null, null, [8]],
                            [null, null, "(?:0[2-7]|[2-7])\\d{6}", null, null, null, "06031234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GA", 241, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GB: [null, [null, null, "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}", null, null, null, null, null, null, [7, 9, 10],
                                [4, 5, 6, 8]
                            ],
                            [null, null, "(?:1(?:1(?:3[0-58]|4[0-5]|5[0-26-9]|6[0-4]|[78][0-49])|2(?:0[024-9]|1[0-7]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)|3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))|2(?:0[01378]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d)\\d{6}|1(?:(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d|7(?:(?:26(?:6[13-9]|7[0-7])|442\\d|50(?:2[0-3]|[3-68]2|76))\\d|6888[2-46-8]))\\d\\d", null, null, null, "1212345678", null, null, [9, 10],
                                [4, 5, 6, 7, 8]
                            ],
                            [null, null, "7(?:(?:[1-3]\\d\\d|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|8(?:[014-9]\\d|[23][0-8]))\\d|4(?:[0-46-9]\\d\\d|5(?:[0-689]\\d|7[0-57-9]))|7(?:0(?:0[01]|[1-9]\\d)|(?:[1-7]\\d|8[02-9]|9[0-689])\\d)|9(?:(?:[024-9]\\d|3[0-689])\\d|1(?:[02-9]\\d|1[028])))\\d{5}", null, null, null, "7400123456", null, null, [10]],
                            [null, null, "80[08]\\d{7}|800\\d{6}|8001111", null, null, null, "8001234567"],
                            [null, null, "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", null, null, null, "9012345678", null, null, [7, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{8}", null, null, null, "7012345678", null, null, [10]],
                            [null, null, "56\\d{8}", null, null, null, "5612345678", null, null, [10]], "GB", 44, "00", "0", " x", null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"],
                                [null, "(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"],
                                [null, "(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-79][02-9]|8)", "1(?:[24][02-9]|3(?:[02-79]|8[0-46-9])|5(?:[04-9]|2[024-9]|3[014-689])|6(?:[02-8]|9[0-24578])|7(?:[02-57-9]|6[013-9])|8|9(?:[0235-9]|4[2-9]))", "1(?:[24][02-9]|3(?:[02-79]|8(?:[0-4689]|7[0-24-9]))|5(?:[04-9]|2(?:[025-9]|4[013-9])|3(?:[014-68]|9[0-37-9]))|6(?:[02-8]|9(?:[0-2458]|7[0-25689]))|7(?:[02-57-9]|6(?:[013-79]|8[0-25689]))|8|9(?:[0235-9]|4(?:[2-57-9]|6[0-689])))"], "0$1"],
                                [null, "(\\d{5})(\\d{4,5})", "$1 $2", ["1(?:38|5[23]|69|7|94)"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[25]|7(?:0|6[024-9])", "[25]|7(?:0|6(?:[04-9]|2[356]))"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"],
                                [null, "(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"]
                            ], null, [null, null, "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}", null, null, null, "7640123456", null, null, [10]], 1, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3[0347]|55)\\d{8}", null, null, null, "5512345678", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GD: [null, [null, null, "(?:473|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}", null, null, null, "4732691234", null, null, null, [7]],
                            [null, null, "473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\d{4}", null, null, null, "4734031234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GD", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "473", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GE: [null, [null, null, "(?:[3-57]\\d\\d|800)\\d{6}", null, null, null, null, null, null, [9],
                                [6]
                            ],
                            [null, null, "(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}", null, null, null, "322123456", null, null, null, [6]],
                            [null, null, "(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\d{6}", null, null, null, "555123456"],
                            [null, null, "800\\d{6}", null, null, null, "800123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "706\\d{6}", null, null, null, "706123456"], "GE", 995, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5|79"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "706\\d{6}"],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GF: [null, [null, null, "[56]94\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "594(?:[023]\\d|1[01]|4[03-9]|5[6-9]|6[0-3]|80|9[014])\\d{4}", null, null, null, "594101234"],
                            [null, null, "694(?:[0-249]\\d|3[0-48])\\d{4}", null, null, null, "694201234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GF", 594, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[56]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GG: [null, [null, null, "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?", null, null, null, null, null, null, [7, 9, 10],
                                [6]
                            ],
                            [null, null, "1481[25-9]\\d{5}", null, null, null, "1481256789", null, null, [10],
                                [6]
                            ],
                            [null, null, "7(?:(?:781|839)\\d|911[17])\\d{5}", null, null, null, "7781123456", null, null, [10]],
                            [null, null, "80[08]\\d{7}|800\\d{6}|8001111", null, null, null, "8001234567"],
                            [null, null, "(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", null, null, null, "9012345678", null, null, [7, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{8}", null, null, null, "7012345678", null, null, [10]],
                            [null, null, "56\\d{8}", null, null, null, "5612345678", null, null, [10]], "GG", 44, "00", "0", null, null, "0|([25-9]\\d{5})$", "1481$1", null, null, null, null, [null, null, "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}", null, null, null, "7640123456", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3[0347]|55)\\d{8}", null, null, null, "5512345678", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GH: [null, [null, null, "(?:[235]\\d{3}|800)\\d{5}", null, null, null, null, null, null, [8, 9],
                                [7]
                            ],
                            [null, null, "3(?:0(?:[237]\\d|80)|[167](?:2[0-6]|7\\d|80)|2(?:2[0-5]|7\\d|80)|3(?:2[0-3]|7\\d|80)|4(?:2[013-9]|3[01]|7\\d|80)|5(?:2[0-7]|7\\d|80)|8(?:2[0-2]|7\\d|80)|9(?:[28]0|7\\d))\\d{5}", null, null, null, "302345678", null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:2[0346-8]\\d|5(?:[0457]\\d|6[01]))\\d{6}", null, null, null, "231234567", null, null, [9]],
                            [null, null, "800\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GH", 233, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[237]|80"]],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
                            ],
                            [
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "800\\d{5}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GI: [null, [null, null, "(?:[25]\\d\\d|629)\\d{5}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:(?:00\\d|2(?:2[2457]|50))\\d|1(?:6[24-7]\\d|90[0-2]))\\d{3}", null, null, null, "20012345"],
                            [null, null, "(?:5[46-8]\\d|629)\\d{5}", null, null, null, "57123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GI", 350, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["2"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GL: [null, [null, null, "(?:19|[2-689]\\d)\\d{4}", null, null, null, null, null, null, [6]],
                            [null, null, "(?:19|3[1-7]|6[14689]|8[14-79]|9\\d)\\d{4}", null, null, null, "321000"],
                            [null, null, "(?:[25][1-9]|4[2-9])\\d{4}", null, null, null, "221234"],
                            [null, null, "80\\d{4}", null, null, null, "801234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3[89]\\d{4}", null, null, null, "381234"], "GL", 299, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-689]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GM: [null, [null, null, "[2-9]\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:54[0-7]|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}", null, null, null, "5661234"],
                            [null, null, "[23679]\\d{6}", null, null, null, "3012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GM", 220, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GN: [null, [null, null, "(?:30|6\\d\\d|722)\\d{6}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "30(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])\\d{4}", null, null, null, "30241234", null, null, [8]],
                            [null, null, "6[02356]\\d{7}", null, null, null, "601123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "722\\d{6}", null, null, null, "722123456", null, null, [9]], "GN", 224, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GP: [null, [null, null, "(?:590|69\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "590(?:0[1-68]|1[0-2]|2[0-68]|3[1289]|4[0-24-9]|5[3-579]|6[0189]|7[08]|8[0-689]|9\\d)\\d{4}", null, null, null, "590201234"],
                            [null, null, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}", null, null, null, "690001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GP", 590, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[56]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], 1, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GQ: [null, [null, null, "(?:222|(?:3\\d|55|[89]0)\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "3(?:3(?:[0-24-9]\\d[46]|3\\d[7-9])|5\\d\\d[7-9])\\d{4}", null, null, null, "333091234"],
                            [null, null, "(?:222|55[015])\\d{6}", null, null, null, "222123456"],
                            [null, null, "80\\d[1-9]\\d{5}", null, null, null, "800123456"],
                            [null, null, "90\\d[1-9]\\d{5}", null, null, null, "900123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GQ", 240, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]],
                                [null, "(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GR: [null, [null, null, "(?:[268]\\d|[79]0)\\d{8}", null, null, null, null, null, null, [10]],
                            [null, null, "2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}", null, null, null, "2123456789"],
                            [null, null, "6(?:8[57-9]|9\\d)\\d{7}", null, null, null, "6912345678"],
                            [null, null, "800\\d{7}", null, null, null, "8001234567"],
                            [null, null, "90[19]\\d{7}", null, null, null, "9091234567"],
                            [null, null, "8(?:0[16]|12|25)\\d{7}", null, null, null, "8011234567"],
                            [null, null, "70\\d{8}", null, null, null, "7012345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GR", 30, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[3-8]1|[689]"]],
                                [null, "(\\d{4})(\\d{6})", "$1 $2", ["2"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GT: [null, [null, null, "(?:1\\d{3}|[2-7])\\d{7}", null, null, null, null, null, null, [8, 11]],
                            [null, null, "[267][2-9]\\d{6}", null, null, null, "22456789", null, null, [8]],
                            [null, null, "[3-5]\\d{7}", null, null, null, "51234567", null, null, [8]],
                            [null, null, "18[01]\\d{8}", null, null, null, "18001112222", null, null, [11]],
                            [null, null, "19\\d{9}", null, null, null, "19001112222", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GT", 502, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GU: [null, [null, null, "(?:[58]\\d\\d|671|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}", null, null, null, "6713001234", null, null, null, [7]],
                            [null, null, "671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}", null, null, null, "6713001234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GU", 1, "011", "1", null, null, "1", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "671", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GW: [null, [null, null, "[49]\\d{8}|4\\d{6}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "443\\d{6}", null, null, null, "443201234", null, null, [9]],
                            [null, null, "9(?:5\\d|6[569]|77)\\d{6}", null, null, null, "955012345", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "40\\d{5}", null, null, null, "4012345", null, null, [7]], "GW", 245, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["40"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        GY: [null, [null, null, "(?:(?:(?:[2-46]\\d|77)\\d|862)\\d|9008)\\d{3}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}", null, null, null, "2201234"],
                            [null, null, "6\\d{6}", null, null, null, "6091234"],
                            [null, null, "(?:289|862)\\d{4}", null, null, null, "2891234"],
                            [null, null, "9008\\d{3}", null, null, null, "9008123"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "GY", 592, "001", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        HK: [null, [null, null, "8[0-46-9]\\d{6,7}|9\\d{4}(?:\\d(?:\\d(?:\\d{4})?)?)?|(?:[235-79]\\d|46)\\d{6}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 11]],
                            [null, null, "(?:2(?:[13-8]\\d|2[013-9]|9[0-24-9])\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\d|8(?:4[04]|9\\d))|58(?:0[1-8]|1[2-9]))\\d{4}", null, null, null, "21234567", null, null, [8]],
                            [null, null, "(?:46(?:0[0-6]|10|4[0-57-9])|5(?:(?:[1-59][0-46-9]|6[0-4689])\\d|7(?:[0-2469]\\d|30))|6(?:(?:0[1-9]|[13-59]\\d|[68][0-57-9]|7[0-79])\\d|2(?:[0-57-9]\\d|6[01]))|707[1-5]|8480|9(?:(?:0[1-9]|1[02-9]|[358][0-8]|[467]\\d)\\d|2(?:[0-8]\\d|9[03-9])))\\d{4}", null, null, null, "51234567", null, null, [8]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "900(?:[0-24-9]\\d{7}|3\\d{1,4})", null, null, null, "90012345678", null, null, [5, 6, 7, 8, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}", null, null, null, "81123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "HK", 852, "00(?:30|5[09]|[126-9]?)", null, null, null, null, null, "00", null, [
                                [null, "(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
                                [null, "(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
                            ], null, [null, null, "7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}", null, null, null, "71123456", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}", null, null, null, "30161234", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        HN: [null, [null, null, "[237-9]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:2(?:0[019]|1[1-36]|[23]\\d|4[04-6]|5[57]|64|7[0135689]|8[01346-9]|9[0-2])|4(?:07|2[3-59]|3[13-689]|4[0-68]|5[1-35])|5(?:08|16|4[03-5]|5\\d|6[4-6]|74|80)|6(?:[056]\\d|17|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034])|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}", null, null, null, "22123456"],
                            [null, null, "[37-9]\\d{7}", null, null, null, "91234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "HN", 504, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        HR: [null, [null, null, "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}", null, null, null, null, null, null, [6, 7, 8, 9]],
                            [null, null, "1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}", null, null, null, "12345678", null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "9(?:(?:01|[12589]\\d)\\d|7(?:[0679]\\d|51))\\d{5}|98\\d{6}", null, null, null, "921234567", null, null, [8, 9]],
                            [null, null, "80[01]\\d{4,6}", null, null, null, "800123456", null, null, [7, 8, 9]],
                            [null, null, "6[01459]\\d{6}|6[01]\\d{4,5}", null, null, null, "611234", null, null, [6, 7, 8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7[45]\\d{6}", null, null, null, "74123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "HR", 385, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-5]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[67]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:62\\d?|72)\\d{6}", null, null, null, "62123456", null, null, [8, 9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        HT: [null, [null, null, "[2-489]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:2\\d|5[1-5]|81|9[149])\\d{5}", null, null, null, "22453300"],
                            [null, null, "[34]\\d{7}", null, null, null, "34101234"],
                            [null, null, "8\\d{7}", null, null, null, "80012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}", null, null, null, "98901234"], "HT", 509, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-489]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        HU: [null, [null, null, "[2357]\\d{8}|[1-9]\\d{7}", null, null, null, null, null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}", null, null, null, "12345678", null, null, [8],
                                [6, 7]
                            ],
                            [null, null, "(?:[257]0|3[01])\\d{7}", null, null, null, "201234567", null, null, [9]],
                            [null, null, "[48]0\\d{6}", null, null, null, "80123456", null, null, [8]],
                            [null, null, "9[01]\\d{6}", null, null, null, "90123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "21\\d{7}", null, null, null, "211234567", null, null, [9]], "HU", 36, "00", "06", null, null, "06", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "($1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "($1)"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "[48]0\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "38\\d{7}", null, null, null, "381234567", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ID: [null, [null, null, "(?:[1-36]|8\\d{5})\\d{6}|[1-9]\\d{8,10}|[2-9]\\d{7}", null, null, null, null, null, null, [7, 8, 9, 10, 11, 12],
                                [5, 6]
                            ],
                            [null, null, "2(?:[124]\\d{7,8}|(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])\\d{5,8})|(?:3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}|6(?:1(?:[0-8]\\d{4,7}|9\\d{4,8})|(?:[25]\\d|3[1-69]|4[1-6])\\d{5,8})|2(?:1(?:14|500)|2\\d{3})\\d{3}", null, null, null, "218350123", null, null, [7, 8, 9, 10, 11],
                                [5, 6]
                            ],
                            [null, null, "8[1-35-9]\\d{7,10}", null, null, null, "812345678", null, null, [9, 10, 11, 12]],
                            [null, null, "(?:177\\d|800)\\d{5,7}", null, null, null, "8001234567", null, null, [8, 9, 10, 11]],
                            [null, null, "809\\d{7}", null, null, null, "8091234567", null, null, [10]],
                            [null, null, "804\\d{7}", null, null, null, "8041234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ID", 62, "0(?:0[17-9]|10(?:00|1[67]))", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]],
                                [null, "(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"],
                                [null, "(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"],
                                [null, "(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"],
                                [null, "(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"],
                                [null, "(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "8071\\d{6}", null, null, null, null, null, null, [10]],
                            [null, null, "(?:1500|8071\\d{3})\\d{3}", null, null, null, "8071123456", null, null, [7, 10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IE: [null, [null, null, "[148]\\d{9}|[124-9]\\d{8}|[124-69]\\d{7}|[24-69]\\d{6}", null, null, null, null, null, null, [7, 8, 9, 10],
                                [5, 6]
                            ],
                            [null, null, "(?:1\\d{2,3}|2(?:[13]\\d\\d|[24-9])|4(?:0[24]|(?:(?:[1-469]|8[0-46-9])\\d|5)\\d|7)|5(?:0[45]|(?:1|[23679]\\d)\\d|8)|6(?:[237-9]|[4-6]\\d\\d)|7[14]\\d\\d|9(?:[04]\\d\\d|[35-9]))\\d{5}|[269]1\\d{6}", null, null, null, "2212345", null, null, null, [5, 6]],
                            [null, null, "8(?:22|[35-9]\\d)\\d{6}", null, null, null, "850123456", null, null, [9]],
                            [null, null, "1800\\d{6}", null, null, null, "1800123456", null, null, [10]],
                            [null, null, "15(?:1[2-8]|[2-8]0|9[089])\\d{6}", null, null, null, "1520123456", null, null, [10]],
                            [null, null, "18[59]0\\d{6}", null, null, null, "1850123456", null, null, [10]],
                            [null, null, "700\\d{6}", null, null, null, "700123456", null, null, [9]],
                            [null, null, "76\\d{7}", null, null, null, "761234567", null, null, [9]], "IE", 353, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"],
                                [null, "(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["76|8[235-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]],
                                [null, "(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "18[59]0\\d{6}", null, null, null, null, null, null, [10]],
                            [null, null, "818\\d{6}", null, null, null, "818123456", null, null, [9]], null, null, [null, null, "8[35-9]5\\d{7}", null, null, null, "8551234567", null, null, [10]]
                        ],
                        IL: [null, [null, null, "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}", null, null, null, null, null, null, [7, 8, 9, 10, 11, 12]],
                            [null, null, "(?:153\\d\\d?|[2-489])\\d{7}", null, null, null, "21234567", null, null, [8, 11, 12],
                                [7]
                            ],
                            [null, null, "5(?:(?:[0-489][2-9]|6\\d)\\d|5(?:01|2[2-5]|3[23]|4[45]|5[05689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}", null, null, null, "502345678", null, null, [9]],
                            [null, null, "1(?:255|80[019]\\d{3})\\d{3}", null, null, null, "1800123456", null, null, [7, 10]],
                            [null, null, "1(?:2(?:00\\d\\d|12)|9(?:0[01]|19)\\d\\d)\\d{4}", null, null, null, "1919123456", null, null, [8, 10]],
                            [null, null, "1700\\d{6}", null, null, null, "1700123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7(?:(?:18|2[23]|3[237]|47|6[58]|7\\d|9[2357-9])\\d|8(?:2\\d|33|55|77|81))\\d{5}", null, null, null, "771234567", null, null, [9]], "IL", 972, "0(?:0|1[2-9])", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{4})(\\d{3})", "$1-$2", ["125"]],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"],
                                [null, "(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]],
                                [null, "(\\d{4})(\\d{6})", "$1-$2", ["159"]],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]],
                                [null, "(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "1700\\d{6}", null, null, null, null, null, null, [10]],
                            [null, null, "1599\\d{6}", null, null, null, "1599123456", null, null, [10]], null, null, [null, null, "151\\d{8,9}", null, null, null, "15112340000", null, null, [11, 12]]
                        ],
                        IM: [null, [null, null, "(?:1624|(?:[3578]\\d|90)\\d\\d)\\d{6}", null, null, null, null, null, null, [10],
                                [6]
                            ],
                            [null, null, "1624[5-8]\\d{5}", null, null, null, "1624756789", null, null, null, [6]],
                            [null, null, "7(?:4576|[59]24\\d|624[0-4689])\\d{5}", null, null, null, "7924123456"],
                            [null, null, "808162\\d{4}", null, null, null, "8081624567"],
                            [null, null, "(?:8(?:4(?:40[49]06|5624\\d)|7(?:0624|2299)\\d)|90[0167]624\\d)\\d{3}", null, null, null, "9016247890"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{8}", null, null, null, "7012345678"],
                            [null, null, "56\\d{8}", null, null, null, "5612345678"], "IM", 44, "00", "0", null, null, "0|([5-8]\\d{5})$", "1624$1", null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3(?:(?:08162|3\\d{4}|7(?:0624|2299))\\d|4(?:40[49]06|5624\\d))|55\\d{5})\\d{3}", null, null, null, "5512345678"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IN: [null, [null, null, "(?:00800|1\\d{0,5}|[2-9]\\d\\d)\\d{7}", null, null, null, null, null, null, [8, 9, 10, 11, 12, 13],
                                [6, 7]
                            ],
                            [null, null, "(?:1(?:1[2-7]\\d\\d|2(?:[0-249][2-7]\\d|[35-8]\\d[2-7])|3(?:[0-25][2-7]\\d|[346-9]\\d[2-7])|4(?:[145][2-7]\\d|[236-9]\\d[2-7])|[59](?:[0235-9]\\d[2-7]|[14][2-7]\\d)|6(?:[014][2-7]\\d|[235-9]\\d[2-7])|7(?:(?:0[24]|[1257][2-7])\\d|[34689]\\d[2-7])|8(?:[01346][2-7]\\d|[257-9]\\d[2-7]))|2(?:[02][2-7]\\d\\d|1(?:[134689]\\d[2-7]|[257][2-7]\\d)|3(?:[013][2-7]\\d|[24-8]\\d[2-7])|4(?:[01][2-7]\\d|[2-8]\\d[2-7])|5(?:[0137][2-7]\\d|[25689]\\d[2-7])|6(?:[0158][2-7]\\d|[2-4679]\\d[2-7])|7(?:[13-79]\\d[2-7]|8[2-7]\\d)|8(?:(?:0[13468]|[1568][2-7])\\d|[2-479]\\d[2-7])|9(?:(?:0\\d|[14][2-7])\\d|[235-9]\\d[2-7]))|3(?:(?:01|1[79])\\d[2-7]|2(?:[1-5]\\d[2-7]|6[2-7]\\d)|3[2-7]\\d\\d|4(?:[13][2-7]\\d|2(?:[0189][2-7]|[2-7]\\d)|[5-8]\\d[2-7])|5(?:[125689]\\d[2-7]|[34][2-7]\\d)|6(?:[01489][2-7]\\d|[235-7]\\d[2-7])|7(?:[02-46][2-7]\\d|[157-9]\\d[2-7])|8(?:(?:0\\d|[159][2-7])\\d|[2-46-8]\\d[2-7]))|4(?:[04][2-7]\\d\\d|1(?:[14578]\\d[2-7]|[36][2-7]\\d)|2(?:(?:0[24]|[1-47][2-7])\\d|[5689]\\d[2-7])|3(?:[15][2-7]\\d|[2-467]\\d[2-7])|5(?:[12][2-7]\\d|[4-7]\\d[2-7])|6(?:[0-26-9][2-7]\\d|[35]\\d[2-7])|7(?:(?:[014-9][2-7]|2[2-8])\\d|3\\d[2-7])|8(?:[013-57][2-7]\\d|[2689]\\d[2-7])|9(?:[014-7][2-7]\\d|[2389]\\d[2-7]))|5(?:1(?:[025][2-7]\\d|[146-9]\\d[2-7])|2(?:[14-8]\\d[2-7]|2[2-7]\\d)|3(?:[1346]\\d[2-7]|[25][2-7]\\d)|4(?:[14-69]\\d[2-7]|[28][2-7]\\d)|5(?:(?:1[2-7]|2[1-7])\\d|[46]\\d[2-7])|6(?:[146-9]\\d[2-7]|[25][2-7]\\d)|7(?:1[2-7]\\d|[2-4]\\d[2-7])|8(?:1[2-7]\\d|[2-8]\\d[2-7])|9(?:[15][2-7]\\d|[246]\\d[2-7]))|6(?:1(?:[1358]\\d[2-7]|2[2-7]\\d)|2(?:1[2-7]\\d|[2457]\\d[2-7])|3(?:1[2-7]\\d|[2-4]\\d[2-7])|4(?:1[2-7]\\d|[235-7]\\d[2-7])|5(?:[17][2-7]\\d|[2-689]\\d[2-7])|6(?:[13][2-7]\\d|[24578]\\d[2-7])|7(?:1[2-7]\\d|[235689]\\d[2-7]|4(?:[0189][2-7]|[2-7]\\d))|8(?:0[2-7]\\d|[1-6]\\d[2-7]))|7(?:1(?:[013-9]\\d[2-7]|2[2-7]\\d)|2(?:[0235-9]\\d[2-7]|[14][2-7]\\d)|3(?:[134][2-7]\\d|[2679]\\d[2-7])|4(?:[1-35689]\\d[2-7]|[47][2-7]\\d)|5(?:[15][2-7]\\d|[2-46-9]\\d[2-7])|[67](?:[02-9]\\d[2-7]|1[2-7]\\d)|8(?:(?:[013-7]\\d|2[0-6])[2-7]|8(?:[0189][2-7]|[2-7]\\d))|9(?:[0189]\\d[2-7]|[2-7]\\d\\d))|8(?:0[2-7]\\d\\d|1(?:[1357-9]\\d[2-7]|6[2-7]\\d)|2(?:[014][2-7]\\d|[235-8]\\d[2-7])|3(?:[03-57-9]\\d[2-7]|[126][2-7]\\d)|(?:4[0-24-9]|5\\d)\\d[2-7]|6(?:[136][2-7]\\d|[2457-9]\\d[2-7])|7(?:[078][2-7]\\d|[1-6]\\d[2-7])|8(?:[1256]\\d[2-7]|[34][2-7]\\d)|9(?:1[2-7]\\d|[2-4]\\d[2-7])))\\d{5}", null, null, null, "7410410123", null, null, [10],
                                [6, 7, 8]
                            ],
                            [null, null, "(?:6(?:(?:0(?:0[0-3569]|26|33)|2(?:[06]\\d|3[02589]|8[0-479]|9[0-79])|9(?:0[019]|13))\\d|1279|3(?:(?:0[0-79]|6[0-4679]|7[0-24-9]|[89]\\d)\\d|5(?:0[0-6]|[1-9]\\d)))|7(?:(?:0\\d\\d|19[0-5])\\d|2(?:(?:[0235-79]\\d|[14][017-9])\\d|8(?:[0-59]\\d|[6-8][089]))|3(?:(?:[05-8]\\d|3[017-9])\\d|1(?:[089]\\d|11|7[02-8])|2(?:[0-49][089]|[5-8]\\d)|4(?:[07-9]\\d|11)|9(?:[016-9]\\d|[2-5][089]))|4(?:0\\d\\d|1(?:[015-9]\\d|[2-4][089])|[29](?:[0-7][089]|[89]\\d)|3(?:[0-8][089]|9\\d)|[47](?:[089]\\d|11|7[02-8])|[56]\\d[089]|8(?:[0-24-7][089]|[389]\\d))|5(?:(?:[0346-8]\\d|5[017-9])\\d|1(?:[07-9]\\d|11)|2(?:[04-9]\\d|[1-3][089])|9(?:[0-6][089]|[7-9]\\d))|6(?:0(?:[0-47]\\d|[5689][089])|(?:1[0-257-9]|[6-9]\\d)\\d|2(?:[0-4]\\d|[5-9][089])|3(?:[02-8][089]|[19]\\d)|4\\d[089]|5(?:[0-367][089]|[4589]\\d))|7(?:0(?:0[02-9]|[13-7][089]|[289]\\d)|[1-9]\\d\\d)|8(?:[0-79]\\d\\d|8(?:[089]\\d|11|7[02-9]))|9(?:[089]\\d\\d|313|7(?:[02-8]\\d|9[07-9])))|8(?:0(?:(?:[01589]\\d|6[67])\\d|7(?:[02-8]\\d|9[04-9]))|1(?:[0-57-9]\\d\\d|6(?:[089]\\d|7[02-8]))|2(?:[014](?:[089]\\d|7[02-8])|[235-9]\\d\\d)|3(?:[03-57-9]\\d\\d|[126](?:[089]\\d|7[02-8]))|[45]\\d{3}|6(?:[02457-9]\\d\\d|[136](?:[089]\\d|7[02-8]))|7(?:(?:0[07-9]|[1-69]\\d)\\d|[78](?:[089]\\d|7[02-8]))|8(?:[0-25-9]\\d\\d|3(?:[089]\\d|7[02-8])|4(?:[0489]\\d|7[02-8]))|9(?:[02-9]\\d\\d|1(?:[0289]\\d|7[02-8])))|9\\d{4})\\d{5}", null, null, null, "8123456789", null, null, [10]],
                            [null, null, "(?:00800\\d|1(?:600|80[03]\\d{3}))\\d{6}|1800\\d{4,8}", null, null, null, "1800123456"],
                            [null, null, "186[12]\\d{9}", null, null, null, "1861123456789", null, null, [13]],
                            [null, null, "1860\\d{7}", null, null, null, "18603451234", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "IN", 91, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{8})", "$1", ["5[0236-8]"], null, null, 1],
                                [null, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], null, null, 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)", "1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12[2-7]|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1[2-7]|[34][2-6])|4[47][2-7]|61[346]|88[0-8])|8(?:(?:16|2[014]|3[126]|6[136])[2-7]|7(?:0[2-6]|[78][2-7])|8(?:3[2-7]|4[235-7])|91[3-7])", "1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12(?:[2-6]|7[0-8])|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1(?:[2-6]|71)|[34][2-6])|4[47](?:[2-6]|7[19])|61[346]|88(?:[01][2-7]|[2-7]|82))|8(?:(?:16|2[014]|3[126]|6[136])(?:[2-6]|7[19])|7(?:0[2-6]|[78](?:[2-6]|7[19]))|8(?:3(?:[2-6]|7[19])|4(?:[2356]|7[19]))|91(?:[3-6]|7[19]))"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|[4-8])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|(?:28[6-8]|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7])[2-7]|3(?:179|(?:2[0-49]|9[2-57])[2-7]))|807(?:1|9[1-3])"], "0$1", null, 1],
                                [null, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["14"], null, null, 1],
                                [null, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], null, null, 1],
                                [null, "(\\d{2})(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3 $4", ["0"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["1"], null, null, 1]
                            ],
                            [
                                [null, "(\\d{8})", "$1", ["5[0236-8]"], null, null, 1],
                                [null, "(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], null, null, 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[59][14]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1|9[15])|6(?:12|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)", "1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12[2-7]|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1[2-7]|[34][2-6])|4[47][2-7]|61[346]|88[0-8])|8(?:(?:16|2[014]|3[126]|6[136])[2-7]|7(?:0[2-6]|[78][2-7])|8(?:3[2-7]|4[235-7])|91[3-7])", "1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6(?:0[2-7]|[1-9])|7[1257]|8(?:[06][2-7]|[1-57-9]))|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5(?:1|2[2-7])|[78]1|9[15])|6(?:12(?:[2-6]|7[0-8])|[2-4]1|5[17]|6[13]|7[14]|80)|7(?:12|(?:2[14]|5[15])[2-6]|3(?:1(?:[2-6]|71)|[34][2-6])|4[47](?:[2-6]|7[19])|61[346]|88(?:[01][2-7]|[2-7]|82))|8(?:(?:16|2[014]|3[126]|6[136])(?:[2-6]|7[19])|7(?:0[2-6]|[78](?:[2-6]|7[19]))|8(?:3(?:[2-6]|7[19])|4(?:[2356]|7[19]))|91(?:[3-6]|7[19]))"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|[4-8])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[23579]|4[236-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|[4-8])|7(?:1(?:[013-8]|9[6-9])|(?:28[6-8]|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7])[2-7]|3(?:179|(?:2[0-49]|9[2-57])[2-7]))|807(?:1|9[1-3])"], "0$1", null, 1],
                                [null, "(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["14"], null, null, 1],
                                [null, "(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], null, null, 1],
                                [null, "(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["1"], null, null, 1]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:00800\\d|1(?:600|8(?:0[03]\\d\\d|6(?:0|[12]\\d\\d))\\d))\\d{6}|1800\\d{4,8}"],
                            [null, null, "140\\d{7}", null, null, null, "1409305260", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IO: [null, [null, null, "3\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "37\\d{5}", null, null, null, "3709100"],
                            [null, null, "38\\d{5}", null, null, null, "3801234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "IO", 246, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["3"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IQ: [null, [null, null, "(?:1|[2-6]\\d?|7\\d\\d)\\d{7}", null, null, null, null, null, null, [8, 9, 10],
                                [6, 7]
                            ],
                            [null, null, "1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}", null, null, null, "12345678", null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "7[3-9]\\d{8}", null, null, null, "7912345678", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "IQ", 964, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IR: [null, [null, null, "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}", null, null, null, null, null, null, [4, 5, 6, 7, 10],
                                [8]
                            ],
                            [null, null, "(?:(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])\\d{4}|94(?:(?:000|(?:11|2\\d)\\d|30[01])\\d|4(?:111|40\\d)))\\d{4}|(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[16]|[289]\\d?)\\d{3}", null, null, null, "2123456789", null, null, [6, 7, 10],
                                [4, 5, 8]
                            ],
                            [null, null, "9(?:(?:0(?:[1-35]\\d|44)|(?:[13]\\d|2[0-2])\\d)\\d|9(?:(?:[01]\\d|44)\\d|510|8(?:1[01]|88)|9(?:0[013]|1[0134]|21|77|9[6-9])))\\d{5}", null, null, null, "9123456789", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "993\\d{7}", null, null, null, "9932123456", null, null, [10]], "IR", 98, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{4,5})", "$1", ["96"], "0$1"],
                                [null, "(\\d{2})(\\d{4,5})", "$1 $2", ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "9(?:4(?:11[1-7]|440)\\d{5}|6(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19]))", null, null, null, null, null, null, [4, 5, 10]],
                            [null, null, "96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])", null, null, null, "9601", null, null, [4, 5]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        IS: [null, [null, null, "(?:38\\d|[4-9])\\d{6}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-245]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|87[23])\\d{4}", null, null, null, "4101234", null, null, [7]],
                            [null, null, "(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[027-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-8]\\d|9[0-3])|8(?:2[0-59]|[3469]\\d|5[1-9]|8[28]))\\d{4}", null, null, null, "6111234"],
                            [null, null, "800\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, "90\\d{5}", null, null, null, "9011234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "49\\d{5}", null, null, null, "4921234", null, null, [7]], "IS", 354, "00|1(?:0(?:01|[12]0)|100)", null, null, null, null, null, "00", null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "809\\d{4}", null, null, null, "8091234", null, null, [7]], null, null, [null, null, "(?:689|8(?:7[0189]|80)|95[48])\\d{4}", null, null, null, "6891234", null, null, [7]]
                        ],
                        IT: [null, [null, null, "0\\d{6}(?:\\d{4})?|3[0-8]\\d{9}|(?:[0138]\\d?|55)\\d{8}|[08]\\d{5}(?:\\d{2})?", null, null, null, null, null, null, [6, 7, 8, 9, 10, 11]],
                            [null, null, "0(?:(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d|6(?:[0-57-9]\\d\\d|6(?:[0-8]\\d|9[0-79])))\\d{1,6}", null, null, null, "0212345678"],
                            [null, null, "33\\d{9}|3[1-9]\\d{8}|3[2-9]\\d{7}", null, null, null, "3123456789", null, null, [9, 10, 11]],
                            [null, null, "80(?:0\\d{3}|3)\\d{3}", null, null, null, "800123456", null, null, [6, 9]],
                            [null, null, "(?:(?:0878|1(?:44|6[346])\\d)\\d\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\d\\d)\\d))\\d{3}|89[45][0-4]\\d\\d", null, null, null, "899123456", null, null, [6, 8, 9, 10]],
                            [null, null, "84(?:[08]\\d{3}|[17])\\d{3}", null, null, null, "848123456", null, null, [6, 9]],
                            [null, null, "1(?:78\\d|99)\\d{6}", null, null, null, "1781234567", null, null, [9, 10]],
                            [null, null, "55\\d{8}", null, null, null, "5512345678", null, null, [10]], "IT", 39, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]],
                                [null, "(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[245])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|[45][0-4]))"]],
                                [null, "(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["894"]],
                                [null, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1(?:44|[67]|99)|[38]"]],
                                [null, "(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]"]],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["3"]],
                                [null, "(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], 1, null, [null, null, "848\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        JE: [null, [null, null, "(?:1534|(?:[3578]\\d|90)\\d\\d)\\d{6}", null, null, null, null, null, null, [10],
                                [6]
                            ],
                            [null, null, "1534[0-24-8]\\d{5}", null, null, null, "1534456789", null, null, null, [6]],
                            [null, null, "7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}", null, null, null, "7797712345"],
                            [null, null, "80(?:07(?:35|81)|8901)\\d{4}", null, null, null, "8007354567"],
                            [null, null, "(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}", null, null, null, "9018105678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "701511\\d{4}", null, null, null, "7015115678"],
                            [null, null, "56\\d{8}", null, null, null, "5612345678"], "JE", 44, "00", "0", null, null, "0|([0-24-8]\\d{5})$", "1534$1", null, null, null, null, [null, null, "76(?:0[0-2]|2[356]|4[0134]|5[49]|6[0-369]|77|81|9[39])\\d{6}", null, null, null, "7640123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}", null, null, null, "5512345678"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        JM: [null, [null, null, "(?:[58]\\d\\d|658|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:658[2-9]\\d\\d|876(?:5(?:0[12]|1[0-468]|2[35]|63)|6(?:0[1-3579]|1[0237-9]|[23]\\d|40|5[06]|6[2-589]|7[05]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}", null, null, null, "8765230123", null, null, null, [7]],
                            [null, null, "876(?:(?:2[14-9]|[348]\\d)\\d|5(?:0[3-9]|[2-57-9]\\d|6[0-24-9])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579]))\\d{4}", null, null, null, "8762101234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "JM", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "658|876", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        JO: [null, [null, null, "(?:(?:(?:[268]|7\\d)\\d|32|53)\\d|900)\\d{5}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[57][023]|6[03])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2[05]0|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:[029]0|7[08]))\\d{4}", null, null, null, "62001234", null, null, [8]],
                            [null, null, "7(?:55[0-49]|(?:7[025-9]|[89][0-25-9])\\d)\\d{5}", null, null, null, "790123456", null, null, [9]],
                            [null, null, "80\\d{6}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "900\\d{5}", null, null, null, "90012345", null, null, [8]],
                            [null, null, "85\\d{6}", null, null, null, "85012345", null, null, [8]],
                            [null, null, "70\\d{7}", null, null, null, "700123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "JO", 962, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"],
                                [null, "(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7[457-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["7"], "0$1"]
                            ], null, [null, null, "74(?:66|77)\\d{5}", null, null, null, "746612345", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8(?:10|8\\d)\\d{5}", null, null, null, "88101234", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        JP: [null, [null, null, "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}", null, null, null, null, null, null, [8, 9, 10, 11, 12, 13, 14, 15, 16, 17]],
                            [null, null, "(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}", null, null, null, "312345678", null, null, [9]],
                            [null, null, "[7-9]0[1-9]\\d{7}", null, null, null, "9012345678", null, null, [10]],
                            [null, null, "(?:00(?:(?:37|66)\\d{4,11}|777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)|(?:120|800\\d)\\d{4})\\d\\d", null, null, null, "120123456"],
                            [null, null, "990\\d{6}", null, null, null, "990123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "60\\d{7}", null, null, null, "601234567", null, null, [9]],
                            [null, null, "50[1-9]\\d{7}", null, null, null, "5012345678", null, null, [10]], "JP", 81, "010", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["007", "0077", "00777", "00777[01]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
                                [null, "(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])", "1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))", "1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["1(?:[2-46]|5[2-8]|7[2-689]|8[2-7]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)", "1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])", "1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["2(?:[34]7|[56]9|74|9[14-79])|82|993"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["2[2-9]|4|7[235-9]|9[49]"], "0$1"],
                                [null, "(\\d{4})(\\d{2})(\\d{3,4})", "$1-$2-$3", ["007"]],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
                                [null, "(\\d{4})(\\d{2})(\\d{4})", "$1-$2-$3", ["008"]],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[2579]|80"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3,4})", "$1-$2-$3", ["0"]],
                                [null, "(\\d{4})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["0"]],
                                [null, "(\\d{4})(\\d{5})(\\d{5,6})", "$1-$2-$3", ["0"]],
                                [null, "(\\d{4})(\\d{6})(\\d{6,7})", "$1-$2-$3", ["0"]]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
                                [null, "(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:49|80|9[16])", "1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[78]|96)|477|51[24]|636)|9(?:496|802|9(?:1[23]|69))", "1(?:267|3(?:7[247]|9[278])|4(?:5[67]|66)|5(?:47|58|64|8[67])|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[78]|96[2457-9])|477|51[24]|636[2-57-9])|9(?:496|802|9(?:1[23]|69))"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["1(?:[2-46]|5[2-8]|7[2-689]|8[2-7]|9[1-578])|2(?:2[03-689]|3[3-58]|4[0-468]|5[04-8]|6[013-8]|7[06-9]|8[02-57-9]|9[13])|4(?:2[28]|3[689]|6[035-7]|7[05689]|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9[4-9])|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9[014-9])|8(?:2[49]|3[3-8]|4[5-8]|5[2-9]|6[35-9]|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9[3-7])", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9[2-8])|3(?:[3-6][2-9]|7[2-6]|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5[4-7]|6[2-9]|8[2-8]|9[236-9])|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3[34]|4[2-69]|[5-7]))", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6[56]))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))", "1(?:[2-46]|5(?:[236-8]|[45][2-69])|7[2-689]|8[2-7]|9[1-578])|2(?:2(?:[04-689]|3[23])|3[3-58]|4[0-468]|5(?:[0468][2-9]|5[78]|7[2-4])|6(?:[0135-8]|4[2-5])|7(?:[0679]|8[2-7])|8(?:[024578]|3[25-9]|9[6-9])|9(?:11|3[2-4]))|4(?:2(?:2[2-9]|8[237-9])|3[689]|6[035-7]|7(?:[059][2-8]|[68])|80|9[3-5])|5(?:3[1-36-9]|4[4578]|5[013-8]|[67]|8[14-7]|9(?:[4-7]|[89][2-8]))|7(?:2[15]|3[5-9]|4|6[135-8]|7[0-4689]|9(?:[017-9]|4[6-8]|5[2-478]|6[2-589]))|8(?:2(?:4[4-8]|9(?:20|[3578]|4[04-9]|6(?:5[25]|60)))|3(?:[3-6][2-9]|7(?:[2-5]|6[0-59])|8[2-5])|4[5-8]|5[2-9]|6(?:[37]|5(?:[467]|5[014-9])|6(?:[2-8]|9[02-69])|8[2-8]|9(?:[236-8]|9[23]))|7[579]|8[03-579]|9[2-8])|9(?:[23]0|4[02-46-9]|5[024-79]|6[4-9]|7[2-47-9]|8[02-7]|9(?:3(?:3[02-9]|4[0-24689])|4[2-69]|[5-7]))"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1|2(?:2[37]|5[5-9]|64|78|8[39]|91)|4(?:2[2689]|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93)", "1|2(?:2[37]|5(?:[57]|[68]0|9[19])|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])", "1|2(?:2[37]|5(?:[57]|[68]0|9(?:17|99))|64|78|8[39]|917)|4(?:2(?:20|[68]|9[178])|64|7[347])|5[2-589]|60|8(?:2[124589]|3[279]|[46-9])|9(?:[235-8]|93[34])"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["2(?:[34]7|[56]9|74|9[14-79])|82|993"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["2[2-9]|4|7[235-9]|9[49]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[2579]|80"], "0$1"]
                            ],
                            [null, null, "20\\d{8}", null, null, null, "2012345678", null, null, [10]], null, null, [null, null, "00(?:(?:37|66)\\d{4,11}|777(?:[01]|(?:5|8\\d)\\d)|882[1245]\\d\\d)\\d\\d"],
                            [null, null, "570\\d{6}", null, null, null, "570123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KE: [null, [null, null, "(?:(?:2|80)0\\d?|[4-7]\\d\\d|900)\\d{6}|[4-6]\\d{6,7}", null, null, null, null, null, null, [7, 8, 9, 10]],
                            [null, null, "20\\d{6,7}|(?:4[0-6]|5\\d|6[0-24-9])\\d{7}|(?:4[0245]|6[014-9])\\d{6}|5[1-79]\\d{5,6}|(?:4[245]|6[01457-9])\\d{5}", null, null, null, "202012345", null, null, [7, 8, 9]],
                            [null, null, "7\\d{8}", null, null, null, "712123456", null, null, [9]],
                            [null, null, "800[24-8]\\d{5,6}", null, null, null, "800223456", null, null, [9, 10]],
                            [null, null, "900[02-9]\\d{5}", null, null, null, "900223456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KE", 254, "000", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"],
                                [null, "(\\d{3})(\\d{6})", "$1 $2", ["7"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KG: [null, [null, null, "(?:[235-7]\\d|99)\\d{7}|800\\d{6,7}", null, null, null, null, null, null, [9, 10],
                                [5, 6]
                            ],
                            [null, null, "(?:3(?:1(?:[256]\\d|3[1-9]|47)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}", null, null, null, "312123456", null, null, [9],
                                [5, 6]
                            ],
                            [null, null, "(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|7(?:[07]\\d|55)|99[69])\\d{6}", null, null, null, "700123456", null, null, [9]],
                            [null, null, "800\\d{6,7}", null, null, null, "800123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KG", 996, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[25-79]|31[25]"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1 $2", ["3"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KH: [null, [null, null, "1\\d{9}|[1-9]\\d{7,8}", null, null, null, null, null, null, [8, 9, 10],
                                [6, 7]
                            ],
                            [null, null, "(?:2(?:3(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)|[4-6](?:4[56]|[56]\\d)\\d)|(?:3[2-6]|4[2-4]|[5-7][2-5])(?:4[56]|[56]\\d)\\d)\\d{4}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])[236-9]\\d{5}", null, null, null, "23756789", null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "(?:(?:(?:1[28]|9[67])\\d|8(?:[013-79]|8\\d))\\d|(?:2[3-6]|4[2-4]|[56][2-5])48|3(?:[18]\\d\\d|[2-6]48)|7(?:(?:[07-9]|[16]\\d)\\d|[2-5]48))\\d{5}|(?:1\\d|6[016-9]|9[0-57-9])\\d{6}", null, null, null, "91234567", null, null, [8, 9]],
                            [null, null, "1800(?:1\\d|2[019])\\d{4}", null, null, null, "1800123456", null, null, [10]],
                            [null, null, "1900(?:1\\d|2[09])\\d{4}", null, null, null, "1900123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KH", 855, "00[14-9]", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KI: [null, [null, null, "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}", null, null, null, null, null, null, [5, 8]],
                            [null, null, "(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}", null, null, null, "31234"],
                            [null, null, "(?:6(?:200[01]|30[01]\\d)|7(?:200[01]|3(?:0[0-5]\\d|140)))\\d{3}", null, null, null, "72001234", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "30(?:0[01]\\d\\d|12(?:11|20))\\d\\d", null, null, null, "30010000", null, null, [8]], "KI", 686, "00", "0", null, null, "0", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KM: [null, [null, null, "[3478]\\d{6}", null, null, null, null, null, null, [7]],
                            [null, null, "7[4-7]\\d{5}", null, null, null, "7712345"],
                            [null, null, "[34]\\d{6}", null, null, null, "3212345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8\\d{6}", null, null, null, "8001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KM", 269, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KN: [null, [null, null, "(?:[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "869(?:2(?:29|36)|302|4(?:6[015-9]|70))\\d{4}", null, null, null, "8692361234", null, null, null, [7]],
                            [null, null, "869(?:5(?:5[6-8]|6[5-7])|66\\d|76[02-7])\\d{4}", null, null, null, "8697652917", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KN", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "869", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KP: [null, [null, null, "(?:(?:19\\d|2)\\d|85)\\d{6}", null, null, null, null, null, null, [8, 10],
                                [6, 7]
                            ],
                            [null, null, "(?:2\\d|85)\\d{6}", null, null, null, "21234567", null, null, [8],
                                [6, 7]
                            ],
                            [null, null, "19[1-3]\\d{7}", null, null, null, "1921234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KP", 850, "00|99", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "2(?:[0-24-9]\\d\\d|3(?:[0-79]\\d|8[02-9]))\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KR: [null, [null, null, "(?:00[1-9]\\d{2,4}|[12]|5\\d{3})\\d{7}|(?:(?:00|[13-6])\\d|70)\\d{8}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}", null, null, null, null, null, null, [5, 6, 8, 9, 10, 11, 12, 13, 14],
                                [3, 7]
                            ],
                            [null, null, "2[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])(?:1\\d{2,3}|[1-9]\\d{6,7})", null, null, null, "22123456", null, null, [5, 6, 8, 9, 10],
                                [3, 7]
                            ],
                            [null, null, "1[0-26-9]\\d{7,8}", null, null, null, "1000000000", null, null, [9, 10]],
                            [null, null, "(?:00(?:3(?:08|68\\d)|798\\d{1,3})|80\\d)\\d{6}", null, null, null, "801234567", null, null, [9, 11, 12, 13, 14]],
                            [null, null, "60[2-9]\\d{6}", null, null, null, "602345678", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "50\\d{8,9}", null, null, null, "5012345678", null, null, [10, 11]],
                            [null, null, "70\\d{8}", null, null, null, "7012345678", null, null, [10]], "KR", 82, "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))", "0", null, null, "0(8[1-46-8]|85\\d{2})?", null, null, null, [
                                [null, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"],
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["1(?:5[246-9]|6[046-8]|8[03579])", "1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))"], "$1", "0$CC-$1"],
                                [null, "(\\d{5})", "$1", ["1[016-9]1", "1[016-9]11", "1[016-9]114"], "0$1", "0$CC-$1"],
                                [null, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2[1-9]"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60[2-9]|80"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]0"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["50"], "0$1", "0$CC-$1"],
                                [null, "(\\d{5})(\\d{3})(\\d{3})", "$1 $2 $3", ["003", "0030", "00308"], "$1", "0$CC-$1"],
                                [null, "(\\d{5})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["00[37]", "00(?:36|79)", "00(?:36|79)8"], "$1", "0$CC-$1"],
                                [null, "(\\d{5})(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["007", "0079", "00798"], "$1", "0$CC-$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1", "0$CC-$1"],
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["1(?:5[246-9]|6[046-8]|8[03579])", "1(?:5(?:22|44|66|77|88|99)|6(?:[07]0|44|6[16]|88)|8(?:00|33|55|77|99))"], "$1", "0$CC-$1"],
                                [null, "(\\d{5})", "$1", ["1[016-9]1", "1[016-9]11", "1[016-9]114"], "0$1", "0$CC-$1"],
                                [null, "(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2[1-9]"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60[2-9]|80"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["1[0-25-9]|(?:3[1-3]|[46][1-4]|5[1-5])[1-9]"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]0"], "0$1", "0$CC-$1"],
                                [null, "(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["50"], "0$1", "0$CC-$1"]
                            ],
                            [null, null, "15\\d{7,8}", null, null, null, "1523456789", null, null, [9, 10]], null, null, [null, null, "00(?:3(?:08|68\\d)|798\\d{1,3})\\d{6}", null, null, null, null, null, null, [11, 12, 13, 14]],
                            [null, null, "1(?:5(?:22|44|66|77|88|99)|6(?:00|44|6[16]|70|88)|8(?:00|33|55|77|99))\\d{4}", null, null, null, "15441234", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KW: [null, [null, null, "(?:18|[2569]\\d\\d)\\d{5}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}", null, null, null, "22345678", null, null, [8]],
                            [null, null, "(?:5(?:(?:[05]\\d|1[0-7]|6[56])\\d|2(?:22|5[25]))|6(?:(?:0[034679]|5[015-9]|6\\d)\\d|222|7(?:0[013-9]|[67]\\d)|9(?:[069]\\d|3[039]))|9(?:(?:0[09]|22|4[01479]|55|6[0679]|8[057-9]|9\\d)\\d|11[01]|7(?:02|[1-9]\\d)))\\d{4}", null, null, null, "50012345", null, null, [8]],
                            [null, null, "18\\d{5}", null, null, null, "1801234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KW", 965, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[25]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KY: [null, [null, null, "(?:345|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "345(?:2(?:22|44)|444|6(?:23|38|40)|7(?:4[35-79]|6[6-9]|77)|8(?:00|1[45]|25|[48]8)|9(?:14|4[035-9]))\\d{4}", null, null, null, "3452221234", null, null, null, [7]],
                            [null, null, "345(?:32[1-9]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|9(?:1[67]|2[2-9]|3[689]))\\d{4}", null, null, null, "3453231234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "(?:345976|900[2-9]\\d\\d)\\d{4}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "KY", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, "345849\\d{4}", null, null, null, "3458491234"], null, "345", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        KZ: [null, [null, null, "(?:33622|(?:7\\d|80)\\d{3})\\d{5}", null, null, null, null, null, null, [10]],
                            [null, null, "(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}", null, null, null, "7123456789"],
                            [null, null, "7(?:0[0-2578]|47|6[02-4]|7[15-8]|85)\\d{7}", null, null, null, "7710009998"],
                            [null, null, "800\\d{7}", null, null, null, "8001234567"],
                            [null, null, "809\\d{7}", null, null, null, "8091234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "808\\d{7}", null, null, null, "8081234567"],
                            [null, null, "751\\d{7}", null, null, null, "7511234567"], "KZ", 7, "810", "8", null, null, "8", null, "8~10", null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "33|7", [null, null, "751\\d{7}"],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LA: [null, [null, null, "(?:2\\d|3)\\d{8}|(?:[235-8]\\d|41)\\d{6}", null, null, null, null, null, null, [8, 9, 10],
                                [6]
                            ],
                            [null, null, "(?:2[13]|[35-7][14]|41|8[1468])\\d{6}", null, null, null, "21212862", null, null, [8],
                                [6]
                            ],
                            [null, null, "20(?:2[2389]|5[24-689]|7[6-8]|9[1-35-9])\\d{6}", null, null, null, "2023123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LA", 856, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["3"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "30\\d{7}", null, null, null, "301234567", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LB: [null, [null, null, "[7-9]\\d{7}|[13-9]\\d{6}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:(?:[14-69]\\d|8[02-9])\\d|7(?:[2-57]\\d|62|8[0-7]|9[04-9]))\\d{4}", null, null, null, "1123456", null, null, [7]],
                            [null, null, "(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[89]|9[1-3]))\\d{5}", null, null, null, "71123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "9[01]\\d{6}", null, null, null, "90123456", null, null, [8]],
                            [null, null, "80\\d{6}", null, null, null, "80123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LB", 961, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LC: [null, [null, null, "(?:[58]\\d\\d|758|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "758(?:4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|638)\\d{4}", null, null, null, "7584305678", null, null, null, [7]],
                            [null, null, "758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[01]))\\d{4}", null, null, null, "7582845678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LC", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "758", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LI: [null, [null, null, "(?:(?:[2378]|6\\d\\d)\\d|90)\\d{5}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "(?:2(?:01|1[27]|3\\d|6[02-578]|96)|3(?:7[0135-7]|8[048]|9[0269]))\\d{4}", null, null, null, "2345678", null, null, [7]],
                            [null, null, "(?:6(?:5(?:09|1\\d|20)|6(?:0[0-6]|10|2[06-9]|39))\\d|7(?:[37-9]\\d|42|56))\\d{4}", null, null, null, "660234567"],
                            [null, null, "80(?:02[28]|9\\d\\d)\\d\\d", null, null, null, "8002222", null, null, [7]],
                            [null, null, "90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d", null, null, null, "9002222", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LI", 423, "00", "0", null, null, "0|(10(?:01|20|66))", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[237-9]"], null, "$CC $1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[56]"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], null, "$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "870(?:28|87)\\d\\d", null, null, null, "8702812", null, null, [7]], null, null, [null, null, "697(?:42|56|[78]\\d)\\d{4}", null, null, null, "697861234", null, null, [9]]
                        ],
                        LK: [null, [null, null, "(?:[1-7]\\d|[89]1)\\d{7}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:[189]1|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}", null, null, null, "112345678", null, null, null, [7]],
                            [null, null, "7[0-25-8]\\d{7}", null, null, null, "712345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LK", 94, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "1973\\d{5}", null, null, null, "197312345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LR: [null, [null, null, "(?:[25]\\d|33|77|88)\\d{7}|(?:2\\d|[45])\\d{6}", null, null, null, null, null, null, [7, 8, 9]],
                            [null, null, "(?:2\\d{3}|33333)\\d{4}", null, null, null, "21234567", null, null, [8, 9]],
                            [null, null, "(?:(?:(?:20|77|88)\\d|330|555)\\d|4[67])\\d{5}|5\\d{6}", null, null, null, "770123456", null, null, [7, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "332(?:02|[34]\\d)\\d{4}", null, null, null, "332021234", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LR", 231, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[45]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23578]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LS: [null, [null, null, "(?:[256]\\d\\d|800)\\d{5}", null, null, null, null, null, null, [8]],
                            [null, null, "2\\d{7}", null, null, null, "22123456"],
                            [null, null, "[56]\\d{7}", null, null, null, "50123456"],
                            [null, null, "800[256]\\d{4}", null, null, null, "80021234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LS", 266, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LT: [null, [null, null, "(?:[3469]\\d|52|[78]0)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:3[1478]|4[124-6]|52)\\d{6}", null, null, null, "31234567"],
                            [null, null, "6\\d{7}", null, null, null, "61234567"],
                            [null, null, "800\\d{5}", null, null, null, "80012345"],
                            [null, null, "9(?:0[0239]|10)\\d{5}", null, null, null, "90012345"],
                            [null, null, "808\\d{5}", null, null, null, "80812345"],
                            [null, null, "700\\d{5}", null, null, null, "70012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LT", 370, "00", "8", null, null, "[08]", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-79]"], "(8-$1)", null, 1],
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(8-$1)", null, 1],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(8-$1)", null, 1],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "8 $1", null, 1]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70[67]\\d{5}", null, null, null, "70712345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LU: [null, [null, null, "[2457-9]\\d{3,10}|3(?:[0-46-9]\\d{2,9}|5(?:[013-9]\\d{1,8}|2\\d{1,3}))|6\\d{8}", null, null, null, null, null, null, [4, 5, 6, 7, 8, 9, 10, 11]],
                            [null, null, "(?:(?:2[2-9]|[457]\\d)\\d|3(?:[0-46-9]\\d|5[013-9])|8(?:0[2-9]|[13-9]\\d)|9(?:0[89]|[2-579]\\d))\\d{1,8}", null, null, null, "27123456"],
                            [null, null, "6(?:[269][18]|5[158]|7[189]|81)\\d{6}", null, null, null, "628123456", null, null, [9]],
                            [null, null, "800\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "90[015]\\d{5}", null, null, null, "90012345", null, null, [8]],
                            [null, null, "801\\d{5}", null, null, null, "80112345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "20(?:1\\d{5}|[2-689]\\d{1,7})", null, null, null, "20201234", null, null, [4, 5, 6, 7, 8, 9, 10]], "LU", 352, "00", null, null, null, "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)", null, null, null, [
                                [null, "(\\d{2})(\\d{3})", "$1 $2", ["2(?:0[2-689]|[2-9])|3(?:[0-46-9]|5[013-9])|[457]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["2(?:0[2-689]|[2-9])|3(?:[0-46-9]|5[013-9])|[457]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:0[1-689]|[367]|4[3-8])"], null, "$CC $1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20[2-689]"], null, "$CC $1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4 $5", ["2(?:0[2-689]|[367]|4[3-8])"], null, "$CC $1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})", "$1 $2 $3 $4", ["2[2-9]|3(?:[0-46-9]|5[013-9])|[457]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"], null, "$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LV: [null, [null, null, "(?:[268]\\d|90)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "6\\d{7}", null, null, null, "63123456"],
                            [null, null, "2\\d{7}", null, null, null, "21234567"],
                            [null, null, "80\\d{6}", null, null, null, "80123456"],
                            [null, null, "90\\d{6}", null, null, null, "90123456"],
                            [null, null, "81\\d{6}", null, null, null, "81123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LV", 371, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        LY: [null, [null, null, "(?:[2569]\\d|71)\\d{7}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:2[13-5]|5[1347]|6[1-479]|71)\\d{7}", null, null, null, "212345678", null, null, null, [7]],
                            [null, null, "9[1-6]\\d{7}", null, null, null, "912345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "LY", 218, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{7})", "$1-$2", ["[25-79]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MA: [null, [null, null, "[5-8]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "5(?:2(?:[015-79]\\d|2[02-9]|3[2-57]|4[2-8]|8[235-7])|3(?:[0-48]\\d|[57][2-9]|6[2-8]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}", null, null, null, "520123456"],
                            [null, null, "(?:6(?:[0-79]\\d|8[0-247-9])|7(?:0[067]|6[1267]|7[017]))\\d{6}", null, null, null, "650123456"],
                            [null, null, "80\\d{7}", null, null, null, "801234567"],
                            [null, null, "89\\d{7}", null, null, null, "891234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5924[01]\\d{4}", null, null, null, "592401234"], "MA", 212, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{6})", "$1-$2", ["5(?:2[015-7]|3[0-4])|[67]"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1-$2", ["5(?:2[2-489]|3[5-9]|9)|892", "5(?:2(?:[2-48]|9[0-7])|3(?:[5-79]|8[0-7])|9)|892"], "0$1"],
                                [null, "(\\d{5})(\\d{4})", "$1-$2", ["5[23]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], 1, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MC: [null, [null, null, "(?:(?:[349]|6\\d)\\d\\d|870)\\d{5}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:870|9[2-47-9]\\d)\\d{5}", null, null, null, "99123456", null, null, [8]],
                            [null, null, "(?:(?:3|6\\d)\\d\\d|4(?:4\\d|5[1-9]))\\d{5}", null, null, null, "612345678"],
                            [null, null, "90\\d{6}", null, null, null, "90123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MC", 377, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["8"]],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[39]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[39]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
                                [null, "(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "870\\d{5}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MD: [null, [null, null, "(?:[235-7]\\d|[89]0)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}", null, null, null, "22212345"],
                            [null, null, "(?:562|6\\d\\d|7(?:[189]\\d|6[07]|7[457-9]))\\d{5}", null, null, null, "62112345"],
                            [null, null, "800\\d{5}", null, null, null, "80012345"],
                            [null, null, "90[056]\\d{5}", null, null, null, "90012345"],
                            [null, null, "808\\d{5}", null, null, null, "80812345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3[08]\\d{6}", null, null, null, "30123456"], "MD", 373, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "803\\d{5}", null, null, null, "80312345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ME: [null, [null, null, "(?:20|[3-79]\\d|80\\d?)\\d{6}", null, null, null, null, null, null, [8, 9],
                                [6]
                            ],
                            [null, null, "(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:[01][2467]|2[2-467]))\\d{5}", null, null, null, "30234567", null, null, [8],
                                [6]
                            ],
                            [null, null, "6(?:00|3[024]|6[0-25]|[7-9]\\d)\\d{5}", null, null, null, "67622901", null, null, [8]],
                            [null, null, "80(?:[0-2578]|9\\d)\\d{5}", null, null, null, "80080002"],
                            [null, null, "9(?:4[1568]|5[178])\\d{5}", null, null, null, "94515151", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "78[1-49]\\d{5}", null, null, null, "78108780", null, null, [8]], "ME", 382, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "77[1-9]\\d{5}", null, null, null, "77273012", null, null, [8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MF: [null, [null, null, "(?:590|69\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}", null, null, null, "590271234"],
                            [null, null, "69(?:0\\d\\d|1(?:2[29]|3[0-5]))\\d{4}", null, null, null, "690001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MF", 590, "00", "0", null, null, "0", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MG: [null, [null, null, "[23]\\d{8}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "20(?:(?:2\\d|4[47]|5[3467]|6[279]|8[268]|9[245])\\d|7(?:2[29]|[35]\\d))\\d{4}", null, null, null, "202123456", null, null, null, [7]],
                            [null, null, "3[2-49]\\d{7}", null, null, null, "321234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "22\\d{7}", null, null, null, "221234567"], "MG", 261, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MH: [null, [null, null, "(?:(?:[256]\\d|45)\\d|329)\\d{4}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:247|528|625)\\d{4}", null, null, null, "2471234"],
                            [null, null, "(?:(?:23|54)5|329|45[56])\\d{4}", null, null, null, "2351234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "635\\d{4}", null, null, null, "6351234"], "MH", 692, "011", "1", null, null, "1", null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MK: [null, [null, null, "[2-578]\\d{7}", null, null, null, null, null, null, [8],
                                [6, 7]
                            ],
                            [null, null, "(?:2(?:[23]\\d|5[0-24578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}", null, null, null, "22012345", null, null, null, [6, 7]],
                            [null, null, "7(?:(?:[0-25-8]\\d|3[2-4]|9[23])\\d|421)\\d{4}", null, null, null, "72345678"],
                            [null, null, "800\\d{5}", null, null, null, "80012345"],
                            [null, null, "5[02-9]\\d{6}", null, null, null, "50012345"],
                            [null, null, "8(?:0[1-9]|[1-9]\\d)\\d{5}", null, null, null, "80123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MK", 389, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"],
                                [null, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ML: [null, [null, null, "(?:[246-9]\\d|50)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:2(?:0(?:2\\d|7[0-8])|1(?:2[67]|[4-689]\\d))|4(?:0[0-4]|4[1-39])\\d)\\d{4}", null, null, null, "20212345"],
                            [null, null, "(?:2(?:079|17\\d)|(?:50|[679]\\d|8[239])\\d\\d)\\d{4}", null, null, null, "65012345"],
                            [null, null, "80\\d{6}", null, null, null, "80012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ML", 223, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})", "$1", ["67[057-9]|74[045]", "67(?:0[09]|[59]9|77|8[89])|74(?:0[02]|44|55)"]],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-79]|8[0239]"]]
                            ],
                            [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-79]|8[0239]"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "80\\d{6}"],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MM: [null, [null, null, "(?:1|[24-7]\\d)\\d{5,7}|8\\d{6,9}|9(?:[0-46-9]\\d{6,8}|5\\d{6})|2\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9, 10],
                                [5]
                            ],
                            [null, null, "(?:1(?:(?:2\\d|3[56]|[89][0-6])\\d|4(?:2[2-469]|39|6[25]|7[01])|6)|2(?:2(?:00|8[34])|4(?:0\\d|2[246]|39|62|7[01])|51\\d\\d)|4(?:2(?:2\\d\\d|480)|3(?:20\\d|470|56)|420\\d|5470)|5(?:2(?:2\\d\\d?|470)|4(?:2(?:1|86)|470)|522\\d|7(?:20\\d|480)|[89](?:20\\d|470))|6(?:0(?:[23]|88\\d)|(?:124|42[04]|[56]2\\d)\\d|3(?:20\\d|470)|7(?:(?:3\\d|8[01459])\\d|4(?:39|[67]0)))|7(?:0470|1(?:20\\d?|470)|4(?:25\\d|470)|5(?:202|470|96\\d))|8(?:[13](?:2\\d\\d|470)|[25]2\\d\\d))\\d{4}|(?:(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4]))\\d|25\\d{2,3}|8(?:[135]2\\d\\d|2(?:2\\d\\d|320)))\\d{3}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:1[2-689]|2[2-8]|3[24]|4[24-7]|5[245]|6[23]))\\d{4}", null, null, null, "1234567", null, null, [6, 7, 8, 9],
                                [5]
                            ],
                            [null, null, "(?:17[01]|9(?:2(?:[0-4]|(?:5\\d|6[0-5])\\d)|(?:3(?:[0-36]|4[069])|[68]9\\d|7(?:3|5[0-2]|[6-9]\\d))\\d|4(?:(?:0[0-4]|[1379]|[25]\\d|4[0-589])\\d|88)|5[0-6]|9(?:[089]|[5-7]\\d\\d))\\d)\\d{4}|9[69]1\\d{6}|9[68]\\d{6}", null, null, null, "92123456", null, null, [7, 8, 9, 10]],
                            [null, null, "80080(?:[01][1-9]|2\\d)\\d{3}", null, null, null, "8008001234", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:1(?:333|468)|2468)\\d{4}", null, null, null, "13331234", null, null, [8]], "MM", 95, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"],
                                [null, "(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MN: [null, [null, null, "[12]\\d{8,9}|[1257-9]\\d{7}", null, null, null, null, null, null, [8, 9, 10],
                                [4, 5, 6]
                            ],
                            [null, null, "(?:[12](?:1|2[1-37]|(?:3[2-8]|4[2-68]|5[1-4689])\\d?)|5[0568])\\d{6}|[12]2[1-3]\\d{5}", null, null, null, "50123456", null, null, null, [4, 5, 6]],
                            [null, null, "(?:8(?:[05689]\\d|3[01])|9[013-9]\\d)\\d{5}", null, null, null, "88123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7[05-8]\\d{6}", null, null, null, "75123456", null, null, [8]], "MN", 976, "001", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[57-9]"]],
                                [null, "(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"],
                                [null, "(\\d{4})(\\d{5,6})", "$1 $2", ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"], "0$1"],
                                [null, "(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MO: [null, [null, null, "(?:28|[68]\\d)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:28[2-57-9]|8(?:11|[2-57-9]\\d))\\d{5}", null, null, null, "28212345"],
                            [null, null, "6(?:[2356]\\d\\d|8(?:[02][5-9]|[1478]\\d|[356][0-4]))\\d{4}", null, null, null, "66123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MO", 853, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MP: [null, [null, null, "(?:[58]\\d\\d|(?:67|90)0)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}", null, null, null, "6702345678", null, null, null, [7]],
                            [null, null, "670(?:2(?:3[3-7]|56|8[5-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}", null, null, null, "6702345678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MP", 1, "011", "1", null, null, "1", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "670", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MQ: [null, [null, null, "(?:596|69\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "596(?:0[0-7]|10|2[7-9]|3[05-9]|4[0-46-8]|[5-7]\\d|8[09]|9[4-8])\\d{4}", null, null, null, "596301234"],
                            [null, null, "69(?:6(?:[0-47-9]\\d|5[0-6]|6[0-4])|727)\\d{4}", null, null, null, "696201234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MQ", 596, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[56]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MR: [null, [null, null, "(?:[2-4]\\d\\d|800)\\d{5}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:25[08]|35\\d|45[1-7])\\d{5}", null, null, null, "35123456"],
                            [null, null, "[2-4][0-46-9]\\d{6}", null, null, null, "22123456"],
                            [null, null, "800\\d{5}", null, null, null, "80012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MR", 222, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MS: [null, [null, null, "(?:(?:[58]\\d\\d|900)\\d\\d|66449)\\d{5}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "664491\\d{4}", null, null, null, "6644912345", null, null, null, [7]],
                            [null, null, "66449[2-6]\\d{4}", null, null, null, "6644923456", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MS", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "664", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MT: [null, [null, null, "(?:(?:[2579]\\d\\d|800)\\d|3550)\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:0(?:[169]\\d|3[1-4])|[1-357]\\d\\d)\\d{4}", null, null, null, "21001234"],
                            [null, null, "(?:7(?:210|[79]\\d\\d)|9(?:2(?:1[01]|31)|69[67]|8(?:1[1-3]|89|97)|9\\d\\d))\\d{4}", null, null, null, "96961234"],
                            [null, null, "800[3467]\\d{4}", null, null, null, "80071234"],
                            [null, null, "5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}", null, null, null, "50037123"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3550\\d{4}", null, null, null, "35501234"], "MT", 356, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]
                            ], null, [null, null, "7117\\d{4}", null, null, null, "71171234"], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "501\\d{5}", null, null, null, "50112345"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MU: [null, [null, null, "(?:[2-468]|5\\d)\\d{6}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:2(?:[03478]\\d|1[0-7]|6[0-79])|4(?:[013568]\\d|2[4-7])|54(?:4\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}", null, null, null, "54480123"],
                            [null, null, "5(?:(?:2[589]|7\\d|9[0-8])\\d|4(?:2[1-389]|[489]\\d|7[1-9])|8(?:[0-689]\\d|7[15-8]))\\d{4}", null, null, null, "52512345", null, null, [8]],
                            [null, null, "80[0-2]\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, "30\\d{5}", null, null, null, "3012345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3(?:20|9\\d)\\d{4}", null, null, null, "3201234", null, null, [7]], "MU", 230, "0(?:0|[24-7]0|3[03])", null, null, null, null, null, "020", null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8(?:0[0-2]|14|3[129])"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["5"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MV: [null, [null, null, "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}", null, null, null, null, null, null, [7, 10]],
                            [null, null, "(?:3(?:0[0-3]|3[0-59])|6(?:[57][02468]|6[024-68]|8[024689]))\\d{4}", null, null, null, "6701234", null, null, [7]],
                            [null, null, "(?:46[46]|(?:7[2-9]|9[14-9])\\d)\\d{4}", null, null, null, "7712345", null, null, [7]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "900\\d{7}", null, null, null, "9001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MV", 960, "0(?:0|19)", null, null, null, null, null, "00", null, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[367]|4(?:00|[56])|9[14-9]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "4[05]0\\d{4}", null, null, null, "4001234", null, null, [7]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MW: [null, [null, null, "1\\d{6}(?:\\d{2})?|(?:[23]1|77|88|99)\\d{7}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "(?:1[2-9]|21\\d\\d)\\d{5}", null, null, null, "1234567"],
                            [null, null, "(?:111|(?:77|88|99)\\d)\\d{6}", null, null, null, "991234567", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "31\\d{7}", null, null, null, "310123456", null, null, [9]], "MW", 265, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[17-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MX: [null, [null, null, "(?:1\\d|[2-9])\\d{9}", null, null, null, null, null, null, [10, 11],
                                [7, 8]
                            ],
                            [null, null, "(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}", null, null, null, "2221234567", null, null, [10],
                                [7, 8]
                            ],
                            [null, null, "1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))\\d{7}", null, null, null, "12221234567", null, null, [11]],
                            [null, null, "8(?:00|88)\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "900\\d{7}", null, null, null, "9001234567", null, null, [10]],
                            [null, null, "300\\d{7}", null, null, null, "3001234567", null, null, [10]],
                            [null, null, "500\\d{7}", null, null, null, "5001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MX", 52, "0[09]", "01", null, null, "0[12]|04[45]([2-9]\\d{9})$", "1$1", "00", null, [
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], "01 $1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], "01 $1", null, 1],
                                [null, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"], "044 $1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"], "044 $1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], "01 $1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], "01 $1", null, 1],
                                [null, "(\\d)(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3 $4", ["1(?:33|5[56]|81)"]],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MY: [null, [null, null, "(?:1\\d\\d?|3\\d|[4-9])\\d{7}", null, null, null, null, null, null, [8, 9, 10],
                                [6, 7]
                            ],
                            [null, null, "(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}", null, null, null, "323856789", null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "1(?:(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d))|(?:[23679][2-9]|59\\d)\\d)\\d|4(?:[235-9]\\d\\d|400)|8(?:(?:1[23]|[236]\\d|5[7-9]|7[016-9]|9[0-8])\\d|4(?:[06]\\d|7[0-4])|8(?:[01]\\d|[27][0-4])))\\d{4}", null, null, null, "123456789", null, null, [9, 10]],
                            [null, null, "1[378]00\\d{6}", null, null, null, "1300123456", null, null, [10]],
                            [null, null, "1600\\d{6}", null, null, null, "1600123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "154(?:6(?:0\\d|1[0-3])|8(?:[25]1|4[0189]|7[0-4679]))\\d{4}", null, null, null, "1546012345", null, null, [10]], "MY", 60, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1-$2 $3", ["1(?:[0249]|[367][2-9]|8[1-9])|8"], "0$1"],
                                [null, "(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["11"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        MZ: [null, [null, null, "(?:2|8\\d)\\d{7}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}", null, null, null, "21123456", null, null, [8]],
                            [null, null, "8[2-7]\\d{7}", null, null, null, "821234567", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "MZ", 258, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-7]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NA: [null, [null, null, "[68]\\d{7,8}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "6(?:1(?:[02-4]\\d\\d|17)|2(?:17|54\\d|69|70)|3(?:17|2[0237]\\d|34|6[289]|7[01]|81)|4(?:17|(?:27|41|5[25])\\d|69|7[01])|5(?:17|2[236-8]\\d|69|7[01])|6(?:17|26\\d|38|42|69|7[01])|7(?:17|(?:2[2-4]|30)\\d|6[89]|7[01]))\\d{4}|6(?:1(?:2[2-7]|3[01378]|4[0-4]|69|7[014])|25[0-46-8]|32\\d|4(?:2[0-27]|4[016]|5[0-357])|52[02-9]|62[56]|7(?:2[2-69]|3[013]))\\d{4}", null, null, null, "61221234"],
                            [null, null, "(?:60|8[1245])\\d{7}", null, null, null, "811234567", null, null, [9]],
                            [null, null, "80\\d{7}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "8701\\d{5}", null, null, null, "870123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8(?:3\\d\\d|86)\\d{5}", null, null, null, "88612345"], "NA", 264, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8[0-5]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NC: [null, [null, null, "[2-57-9]\\d{5}", null, null, null, null, null, null, [6]],
                            [null, null, "(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}", null, null, null, "201234"],
                            [null, null, "(?:5[0-4]|[79]\\d|8[0-79])\\d{4}", null, null, null, "751234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "36\\d{4}", null, null, null, "366711"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NC", 687, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[247-9]|3[0-6]|5[0-4]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NE: [null, [null, null, "[0289]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:0(?:20|3[1-7]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}", null, null, null, "20201234"],
                            [null, null, "(?:8[04589]|9\\d)\\d{6}", null, null, null, "93123456"],
                            [null, null, "08\\d{6}", null, null, null, "08123456"],
                            [null, null, "09\\d{6}", null, null, null, "09123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NE", 227, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["09|2[01]|8[04589]|9"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NF: [null, [null, null, "[13]\\d{5}", null, null, null, null, null, null, [6],
                                [5]
                            ],
                            [null, null, "(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}", null, null, null, "106609", null, null, null, [5]],
                            [null, null, "3[58]\\d{4}", null, null, null, "381234", null, null, null, [5]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NF", 672, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{4})", "$1 $2", ["1"]],
                                [null, "(\\d)(\\d{5})", "$1 $2", ["3"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NG: [null, [null, null, "[78]\\d{10,13}|[7-9]\\d{9}|[1-9]\\d{7}|[124-7]\\d{6}", null, null, null, null, null, null, [7, 8, 10, 11, 12, 13, 14],
                                [5, 6]
                            ],
                            [null, null, "(?:(?:[1-356]\\d|4[02-8]|7[0-79]|8[2-9])\\d|9(?:0[3-9]|[1-9]\\d))\\d{5}|(?:[12]\\d|4[147]|5[14579]|6[1578]|7[0-3578])\\d{5}", null, null, null, "18040123", null, null, [7, 8],
                                [5, 6]
                            ],
                            [null, null, "(?:1(?:(?:7[34]|95)\\d|8(?:04|[124579]\\d|8[0-3]))|287[0-7]|3(?:18[1-8]|88[0-7]|9(?:6[1-5]|8[5-9]))|4(?:[28]8[0-2]|6(?:7[1-9]|8[02-47]))|5(?:2(?:7[7-9]|8\\d)|38[1-79]|48[0-7]|68[4-7])|6(?:2(?:7[7-9]|8\\d)|4(?:3[7-9]|[68][129]|7[04-69]|9[1-8])|58[0-2]|98[7-9])|7(?:0(?:[1-689]\\d|7[0-3])\\d\\d|38[0-7]|69[1-8]|78[2-4])|8(?:(?:0(?:1[01]|[2-9]\\d)|1(?:[0-8]\\d|9[01]))\\d\\d|28[3-9]|38[0-2]|4(?:2[12]|3[147-9]|5[346]|7[4-9]|8[014-689]|90)|58[1-8]|78[2-9]|88[5-7])|9(?:0[235-9]\\d\\d|8[07])\\d)\\d{4}", null, null, null, "8021234567", null, null, [8, 10],
                                [6, 7]
                            ],
                            [null, null, "800\\d{7,11}", null, null, null, "80017591759", null, null, [10, 11, 12, 13, 14]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NG", 234, "009", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["78"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|9(?:0[3-9]|[1-9])"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[3-7]|8[2-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"],
                                [null, "(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "700\\d{7,11}", null, null, null, "7001234567", null, null, [10, 11, 12, 13, 14]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NI: [null, [null, null, "(?:1800|[25-8]\\d{3})\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, "2\\d{7}", null, null, null, "21234567"],
                            [null, null, "(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}", null, null, null, "81234567"],
                            [null, null, "1800\\d{4}", null, null, null, "18001234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NI", 505, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NL: [null, [null, null, "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8])|[89]\\d{0,3})\\d{6}|1\\d{4,5}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10]],
                            [null, null, "(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}", null, null, null, "101234567", null, null, [9]],
                            [null, null, "6[1-58]\\d{7}", null, null, null, "612345678", null, null, [9]],
                            [null, null, "800\\d{4,7}", null, null, null, "8001234", null, null, [7, 8, 9, 10]],
                            [null, null, "90[069]\\d{4,7}", null, null, null, "9061234", null, null, [7, 8, 9, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:85|91)\\d{7}", null, null, null, "851234567", null, null, [9]], "NL", 31, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3,4})", "$1 $2", ["14"]],
                                [null, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1[035]|2[0346]|3[03568]|4[0356]|5[0358]|[7-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-5]"], "0$1"],
                                [null, "(\\d)(\\d{8})", "$1 $2", ["6[1-58]"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["6"], "0$1"]
                            ],
                            [
                                [null, "(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1[035]|2[0346]|3[03568]|4[0356]|5[0358]|[7-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-5]"], "0$1"],
                                [null, "(\\d)(\\d{8})", "$1 $2", ["6[1-58]"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["6"], "0$1"]
                            ],
                            [null, null, "66\\d{7}", null, null, null, "662345678", null, null, [9]], null, null, [null, null, "140(?:1(?:[035]|[16-8]\\d)|2(?:[0346]|[259]\\d)|3(?:[03568]|[124]\\d)|4(?:[0356]|[17-9]\\d)|5(?:[0358]|[124679]\\d)|7\\d|8[458])", null, null, null, null, null, null, [5, 6]],
                            [null, null, "140(?:1(?:[035]|[16-8]\\d)|2(?:[0346]|[259]\\d)|3(?:[03568]|[124]\\d)|4(?:[0356]|[17-9]\\d)|5(?:[0358]|[124679]\\d)|7\\d|8[458])|8[478]\\d{7}", null, null, null, "14020", null, null, [5, 6, 9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NO: [null, [null, null, "(?:0|[2-9]\\d{3})\\d{4}", null, null, null, null, null, null, [5, 8]],
                            [null, null, "(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}", null, null, null, "21234567", null, null, [8]],
                            [null, null, "(?:4[015-8]|5[89]|9\\d)\\d{6}", null, null, null, "40612345", null, null, [8]],
                            [null, null, "80[01]\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "82[09]\\d{5}", null, null, null, "82012345", null, null, [8]],
                            [null, null, "810(?:0[0-6]|[2-8]\\d)\\d{3}", null, null, null, "81021234", null, null, [8]],
                            [null, null, "880\\d{5}", null, null, null, "88012345", null, null, [8]],
                            [null, null, "85[0-5]\\d{5}", null, null, null, "85012345", null, null, [8]], "NO", 47, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-7]"]],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[489]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], 1, "[02-689]|7[0-8]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:0\\d|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}", null, null, null, "01234"], null, null, [null, null, "81[23]\\d{5}", null, null, null, "81212345", null, null, [8]]
                        ],
                        NP: [null, [null, null, "9\\d{9}|[1-9]\\d{7}", null, null, null, null, null, null, [8, 10],
                                [6, 7]
                            ],
                            [null, null, "(?:1[0-6]\\d|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-79])[2-6])\\d{5}", null, null, null, "14567890", null, null, [8],
                                [6, 7]
                            ],
                            [null, null, "9(?:6[0-3]|7[245]|8[0-24-68])\\d{7}", null, null, null, "9841234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NP", 977, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"],
                                [null, "(\\d{2})(\\d{6})", "$1-$2", ["[1-8]|9(?:[1-579]|6[2-6])"], "0$1"],
                                [null, "(\\d{3})(\\d{7})", "$1-$2", ["9"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NR: [null, [null, null, "(?:444|55\\d|888)\\d{4}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:444|888)\\d{4}", null, null, null, "4441234"],
                            [null, null, "55[4-9]\\d{4}", null, null, null, "5551234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NR", 674, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[458]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NU: [null, [null, null, "(?:[47]|888\\d)\\d{3}", null, null, null, null, null, null, [4, 7]],
                            [null, null, "[47]\\d{3}", null, null, null, "7012", null, null, [4]],
                            [null, null, "888[4-9]\\d{3}", null, null, null, "8884012", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NU", 683, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        NZ: [null, [null, null, "[28]\\d{7,9}|[346]\\d{7}|(?:508|[79]\\d)\\d{6,7}", null, null, null, null, null, null, [8, 9, 10],
                                [7]
                            ],
                            [null, null, "(?:24099|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{3})\\d{3}", null, null, null, "32345678", null, null, [8],
                                [7]
                            ],
                            [null, null, "2(?:[0-28]\\d?|[79])\\d{7}|21\\d{6}", null, null, null, "211234567"],
                            [null, null, "508\\d{6,7}|80\\d{6,8}", null, null, null, "800123456"],
                            [null, null, "90\\d{6,7}", null, null, null, "900123456", null, null, [8, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{7}", null, null, null, "701234567", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "NZ", 64, "0(?:0|161)", "0", null, null, "0", null, "00", null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80|9"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[59]|80"], "0$1"],
                                [null, "(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["2[028]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["[278]"], "0$1"]
                            ], null, [null, null, "[28]6\\d{6,7}", null, null, null, "26123456", null, null, [8, 9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        OM: [null, [null, null, "(?:[279]\\d{3}|500|8007\\d?)\\d{4}", null, null, null, null, null, null, [7, 8, 9]],
                            [null, null, "2[2-6]\\d{6}", null, null, null, "23123456", null, null, [8]],
                            [null, null, "(?:7[129]\\d|9(?:0[1-9]|[1-9]\\d))\\d{5}", null, null, null, "92123456", null, null, [8]],
                            [null, null, "(?:500|8007\\d?)\\d{4}", null, null, null, "80071234"],
                            [null, null, "900\\d{5}", null, null, null, "90012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "OM", 968, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]],
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["2"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[79]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PA: [null, [null, null, "(?:[1-57-9]|6\\d)\\d{6}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|[68][58]|7[0167]|9[39])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[026-9])|3(?:[089]\\d|1[014-7]|2[0-35]|33|4[0-579]|55|6[068]|7[06-8])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[05]|7[0-24-9]|8[7-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}", null, null, null, "2001234", null, null, [7]],
                            [null, null, "(?:1[16]1|21[89]|6(?:[02-9]\\d|1[0-5])\\d|8(?:1[01]|7[23]))\\d{4}", null, null, null, "61234567"],
                            [null, null, "800\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, "(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}", null, null, null, "8601234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PA", 507, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]],
                                [null, "(\\d{4})(\\d{4})", "$1-$2", ["6"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PE: [null, [null, null, "(?:[14-8]|9\\d)\\d{7}", null, null, null, null, null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "(?:1\\d|4[1-4]|5[1-46]|6[1-7]|7[2-46]|8[2-4])\\d{6}", null, null, null, "11234567", null, null, [8],
                                [6, 7]
                            ],
                            [null, null, "9\\d{8}", null, null, null, "912345678", null, null, [9]],
                            [null, null, "800\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "805\\d{5}", null, null, null, "80512345", null, null, [8]],
                            [null, null, "801\\d{5}", null, null, null, "80112345", null, null, [8]],
                            [null, null, "80[24]\\d{5}", null, null, null, "80212345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PE", 51, "19(?:1[124]|77|90)00", "0", " Anexo ", null, "0", null, null, null, [
                                [null, "(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"],
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["[4-7]|8[2-4]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["8"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PF: [null, [null, null, "[48]\\d{7}|4\\d{5}", null, null, null, null, null, null, [6, 8]],
                            [null, null, "4(?:[09][4-689]\\d|4)\\d{4}", null, null, null, "40412345"],
                            [null, null, "8[79]\\d{6}", null, null, null, "87123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PF", 689, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]],
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[48]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "44\\d{4}", null, null, null, null, null, null, [6]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PG: [null, [null, null, "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:(?:3[0-2]|4[257]|5[34]|9[78])\\d|64[1-9]|77(?:[0-24]\\d|30)|85[02-46-9])\\d{4}", null, null, null, "3123456"],
                            [null, null, "(?:7(?:[0-689]\\d|75)|81\\d)\\d{5}", null, null, null, "70123456", null, null, [8]],
                            [null, null, "180\\d{4}", null, null, null, "1801234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "2(?:0[0-47]|7[568])\\d{4}", null, null, null, "2751234", null, null, [7]], "PG", 675, "00|140[1-3]", null, null, null, null, null, "00", null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PH: [null, [null, null, "(?:1800\\d{2,4}|2|[89]\\d{4})\\d{5}|[3-8]\\d{8}|[28]\\d{7}", null, null, null, null, null, null, [6, 8, 9, 10, 11, 12, 13],
                                [4, 5, 7]
                            ],
                            [null, null, "(?:2\\d(?:\\d{2})?|(?:3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|8[2-8]\\d{7}", null, null, null, "21234567", null, null, [6, 8, 9, 10],
                                [4, 5, 7]
                            ],
                            [null, null, "(?:81[37]|9(?:0[5-9]|1[024-9]|2[0-35-9]|3[02-9]|4[235-9]|5[056]|6[5-7]|7[3-79]|89|9[4-9]))\\d{7}", null, null, null, "9051234567", null, null, [10]],
                            [null, null, "1800\\d{7,9}", null, null, null, "180012345678", null, null, [11, 12, 13]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PH", 63, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"],
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"],
                                [null, "(\\d{4})(\\d{4,6})", "$1 $2", ["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|5(?:22|44)|642|8(?:62|8[245])", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-68]|4[2-9]|[5-7]|8[2-8]", "3(?:[23568]|4(?:[0-57-9]|6[02-8]))|4(?:2(?:[0-689]|7[0-8])|[3-8]|9(?:[0-246-9]|3[1-9]|5[0-57-9]))|[5-7]|8(?:[2-7]|8(?:[0-24-9]|3[0-35-9]))"], "(0$1)"],
                                [null, "(\\d{5})(\\d{4})", "$1 $2", ["[34]|88"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
                                [null, "(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PK: [null, [null, null, "(?:122|[24-8]\\d{4,5}|9(?:[013-9]\\d{2,4}|2(?:[01]\\d\\d|2(?:[025-8]\\d|1[01]))\\d))\\d{6}|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}", null, null, null, null, null, null, [8, 9, 10, 11, 12],
                                [5, 6, 7]
                            ],
                            [null, null, "2(?:(?:1[2-9]\\d|[25][2-9])\\d{6}|(?:3[2358]|4[2-4]|9[2-8])[2-9]\\d{5,6})|4(?:(?:[0146-9][2-9]|2[2-9]\\d)\\d{6}|5[3479][2-9]\\d{5,6})|5(?:(?:[1-35-7][2-9]|8[126]\\d)\\d{6}|4[2-467][2-9]\\d{5,6})|6(?:0[468][2-9]\\d{5,6}|[1-8][2-9]\\d{6})|7(?:[14][2-9]\\d{6}|2[236][2-9]\\d{5,6})|8(?:[16][2-9]\\d{6}|(?:2[2-689]|3[23578]|4[3478]|5[2356])[2-9]\\d{5,6})|9(?:1[2-9]\\d{6}|(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])[2-9]\\d{5,6})", null, null, null, "2123456789", null, null, [9, 10],
                                [5, 6, 7, 8]
                            ],
                            [null, null, "3(?:[014]\\d|2[0-5]|3[0-7]|55|64)\\d{7}", null, null, null, "3012345678", null, null, [10]],
                            [null, null, "800\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "900\\d{5}", null, null, null, "90012345", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "122\\d{6}", null, null, null, "122044444", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PK", 92, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["[89]0"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1 $2", ["1"]],
                                [null, "(\\d{2})(\\d{7,8})", "$1 $2", ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{6,7})", "$1 $2", ["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356]))[2-9]|9(?:2(?:2[2-9]|[3-8])|(?:3[27-9]|4[2-6]|6[3569])[2-9]|9(?:[25-7][2-9]|8))"], "(0$1)"],
                                [null, "(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"],
                                [null, "(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}", null, null, null, "21111825888", null, null, [11, 12]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PL: [null, [null, null, "[1-9]\\d{6}(?:\\d{2})?|6\\d{5}(?:\\d{2})?", null, null, null, null, null, null, [6, 7, 8, 9]],
                            [null, null, "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\\d{3}", null, null, null, "123456789", null, null, [7, 9]],
                            [null, null, "(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}", null, null, null, "512345678", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "70[01346-8]\\d{6}", null, null, null, "701234567", null, null, [9]],
                            [null, null, "801\\d{6}", null, null, null, "801234567", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "39\\d{7}", null, null, null, "391234567", null, null, [9]], "PL", 48, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{5})", "$1", ["19"]],
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["11|64"]],
                                [null, "(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|2|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3-8]"]]
                            ], null, [null, null, "64\\d{4,7}", null, null, null, "641234567"], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "804\\d{6}", null, null, null, "804123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PM: [null, [null, null, "[45]\\d{5}", null, null, null, null, null, null, [6]],
                            [null, null, "(?:4[1-3]|50)\\d{4}", null, null, null, "430123"],
                            [null, null, "(?:4[02-4]|5[05])\\d{4}", null, null, null, "551234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PM", 508, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PR: [null, [null, null, "(?:[589]\\d\\d|787)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:787|939)[2-9]\\d{6}", null, null, null, "7872345678", null, null, null, [7]],
                            [null, null, "(?:787|939)[2-9]\\d{6}", null, null, null, "7872345678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PR", 1, "011", "1", null, null, "1", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "787|939", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PS: [null, [null, null, "(?:(?:1\\d|5)\\d\\d|[2489]2)\\d{6}", null, null, null, null, null, null, [8, 9, 10],
                                [7]
                            ],
                            [null, null, "(?:22[2-47-9]|42[45]|82[01458]|92[369])\\d{5}", null, null, null, "22234567", null, null, [8],
                                [7]
                            ],
                            [null, null, "5[69]\\d{7}", null, null, null, "599123456", null, null, [9]],
                            [null, null, "1800\\d{6}", null, null, null, "1800123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "1700\\d{6}", null, null, null, "1700123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PS", 970, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PT: [null, [null, null, "(?:[26-9]\\d|30)\\d{7}", null, null, null, null, null, null, [9]],
                            [null, null, "2(?:[12]\\d|[35][1-689]|4[1-59]|6[1-35689]|7[1-9]|8[1-69]|9[1256])\\d{6}", null, null, null, "212345678"],
                            [null, null, "9(?:[1-36]\\d\\d|480)\\d{5}", null, null, null, "912345678"],
                            [null, null, "80[02]\\d{6}", null, null, null, "800123456"],
                            [null, null, "(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}", null, null, null, "760123456"],
                            [null, null, "80(?:8\\d|9[1579])\\d{5}", null, null, null, "808123456"],
                            [null, null, "884[0-4689]\\d{5}", null, null, null, "884123456"],
                            [null, null, "30\\d{7}", null, null, null, "301234567"], "PT", 351, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[236-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70(?:7\\d|8[17])\\d{5}", null, null, null, "707123456"], null, null, [null, null, "600\\d{6}", null, null, null, "600110000"]
                        ],
                        PW: [null, [null, null, "(?:[25-8]\\d\\d|345|488|900)\\d{4}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}", null, null, null, "2771234"],
                            [null, null, "(?:6[2-4689]0|77\\d|88[0-4])\\d{4}", null, null, null, "6201234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "PW", 680, "01[12]", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        PY: [null, [null, null, "(?:[2-46-9]\\d|5[0-8])\\d{7}|[2-9]\\d{5,7}", null, null, null, null, null, null, [6, 7, 8, 9],
                                [5]
                            ],
                            [null, null, "(?:2(?:1\\d|2[4-68]|7[15]|9[1-5])|5(?:[1-4]\\d|5[02-4])|6(?:1\\d|3[1-3]|44|7[1-46-8]))\\d{5,6}|3(?:(?:18|3[167]|4[2357]|51)\\d{5,6}|[289]\\d{5,7})|4(?:[1246-8]\\d{5,7}|(?:3[12]|5[13]|9[1-47])\\d{5,6})|7(?:[1-3]\\d{5,7}|(?:4[0-4]|6[1-578]|75|8[0-8])\\d{5,6})|8(?:[1-36]\\d{5,7}|58\\d{5,6})|[26]1\\d{5}", null, null, null, "212345678", null, null, [7, 8, 9],
                                [5, 6]
                            ],
                            [null, null, "9(?:51|6[129]|[78][1-6]|9[1-5])\\d{6}", null, null, null, "961456789", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "8700[0-4]\\d{4}", null, null, null, "870012345", null, null, [9]], "PY", 595, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"],
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{4,5})", "$1 $2", ["2[279]|3[13-5]|4[359]|5|6[347]|7[46-8]|85"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-7]|85"], "0$1"],
                                [null, "(\\d{3})(\\d{6})", "$1 $2", ["9"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "[2-9]0\\d{4,7}", null, null, null, "201234567"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        QA: [null, [null, null, "(?:(?:2|[3-7]\\d)\\d\\d|800)\\d{4}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "4[04]\\d{6}", null, null, null, "44123456", null, null, [8]],
                            [null, null, "[35-7]\\d{7}", null, null, null, "33123456", null, null, [8]],
                            [null, null, "800\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "QA", 974, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["2[126]|8"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[3-7]"]]
                            ], null, [null, null, "2(?:[12]\\d|61)\\d{4}", null, null, null, "2123456", null, null, [7]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        RE: [null, [null, null, "(?:26|[68]\\d)\\d{7}", null, null, null, null, null, null, [9]],
                            [null, null, "262\\d{6}", null, null, null, "262161234"],
                            [null, null, "69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[05]|6[0-26]|7[0-27]|8[0-38]|9[0-479]))\\d{4}", null, null, null, "692123456"],
                            [null, null, "80\\d{7}", null, null, null, "801234567"],
                            [null, null, "89[1-37-9]\\d{6}", null, null, null, "891123456"],
                            [null, null, "8(?:1[019]|2[0156]|84|90)\\d{6}", null, null, null, "810123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "RE", 262, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[268]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], 1, "262|69|8", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        RO: [null, [null, null, "(?:[237]\\d|[89]0)\\d{7}|[23]\\d{5}", null, null, null, null, null, null, [6, 9]],
                            [null, null, "[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d", null, null, null, "211234567"],
                            [null, null, "7(?:(?:[02-7]\\d|8[03-8]|99)\\d|1(?:[01]\\d|20))\\d{5}", null, null, null, "712034567", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "90[036]\\d{6}", null, null, null, "900123456", null, null, [9]],
                            [null, null, "801\\d{6}", null, null, null, "801123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "RO", 40, "00", "0", " int ", null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"],
                                [null, "(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[237-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "37\\d{7}", null, null, null, "372123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        RS: [null, [null, null, "[127]\\d{6,11}|3(?:[0-79]\\d{5,10}|8(?:[02-9]\\d{4,9}|1\\d{4,5}))|6\\d{7,9}|800\\d{3,9}|90\\d{4,8}|7\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9, 10, 11, 12],
                                [4, 5]
                            ],
                            [null, null, "(?:1(?:[02-9][2-9]|1[1-9])\\d|2(?:[0-24-7][2-9]\\d|[389](?:0[2-9]|[2-9]\\d))|3(?:[0-8][2-9]\\d|9(?:0[2-9]|[2-9]\\d)))\\d{3,8}", null, null, null, "10234567", null, null, [7, 8, 9, 10, 11, 12],
                                [4, 5, 6]
                            ],
                            [null, null, "6(?:[0-689]|7\\d)\\d{6,7}", null, null, null, "601234567", null, null, [8, 9, 10]],
                            [null, null, "800\\d{3,9}", null, null, null, "80012345"],
                            [null, null, "(?:78\\d|90[0169])\\d{3,7}", null, null, null, "90012345", null, null, [6, 7, 8, 9, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "RS", 381, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7[06]\\d{4,10}", null, null, null, "700123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        RU: [null, [null, null, "[347-9]\\d{9}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}", null, null, null, "3011234567", null, null, null, [7]],
                            [null, null, "9\\d{9}", null, null, null, "9123456789"],
                            [null, null, "80[04]\\d{7}", null, null, null, "8001234567"],
                            [null, null, "80[39]\\d{7}", null, null, null, "8091234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "808\\d{7}", null, null, null, "8081234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "RU", 7, "810", "8", null, null, "8", null, "8~10", null, [
                                [null, "(\\d{3})(\\d{2})(\\d{2})", "$1-$2-$3"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)", null, 1]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[3489]"], "8 ($1)", null, 1]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], 1, "3[04-689]|[489]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        RW: [null, [null, null, "(?:06|[27]\\d\\d|[89]00)\\d{6}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:06|2[258]\\d)\\d{6}", null, null, null, "250123456"],
                            [null, null, "7[238]\\d{7}", null, null, null, "720123456", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "900\\d{6}", null, null, null, "900123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "RW", 250, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SA: [null, [null, null, "(?:(?:[15]|8\\d)\\d|92)\\d{7}", null, null, null, null, null, null, [9, 10],
                                [7]
                            ],
                            [null, null, "1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}", null, null, null, "112345678", null, null, [9],
                                [7]
                            ],
                            [null, null, "5(?:[013-689]\\d|7[0-36-8])\\d{6}", null, null, null, "512345678", null, null, [9]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "925\\d{6}", null, null, null, "925012345", null, null, [9]],
                            [null, null, "920\\d{6}", null, null, null, "920012345", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SA", 966, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1 $2", ["9"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "811\\d{7}", null, null, null, "8110123456", null, null, [10]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SB: [null, [null, null, "(?:[1-6]|[7-9]\\d\\d)\\d{4}", null, null, null, null, null, null, [5, 7]],
                            [null, null, "(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}", null, null, null, "40123", null, null, [5]],
                            [null, null, "(?:48|(?:(?:7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d)\\d{3}", null, null, null, "7421234"],
                            [null, null, "1[38]\\d{3}", null, null, null, "18123", null, null, [5]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5[12]\\d{3}", null, null, null, "51123", null, null, [5]], "SB", 677, "0[01]", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["7[1-9]|8[4-9]|9(?:1[2-9]|2[013-9]|3[0-2]|[46]|5[0-46-9]|7[0-689]|8[0-79]|9[0-8])"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SC: [null, [null, null, "(?:(?:(?:[24]\\d|64)\\d|971)\\d|8000)\\d{3}", null, null, null, null, null, null, [7]],
                            [null, null, "4[2-46]\\d{5}", null, null, null, "4217123"],
                            [null, null, "2[5-8]\\d{5}", null, null, null, "2510123"],
                            [null, null, "8000\\d{3}", null, null, null, "8000000"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:64\\d|971)\\d{4}", null, null, null, "6412345"], "SC", 248, "0(?:[02]|10?)", null, null, null, null, null, "00", null, [
                                [null, "(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SD: [null, [null, null, "[19]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "1(?:5\\d|8[35-7])\\d{6}", null, null, null, "151231234"],
                            [null, null, "(?:1[0-2]|9[0-3569])\\d{7}", null, null, null, "911231234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SD", 249, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SE: [null, [null, null, "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9, 10, 12]],
                            [null, null, "1(?:0[1-8]\\d{6}|(?:[13689]\\d|2[0-35]|4[0-4]|5[0-25-9]|7[13-6])\\d{5,6})|(?:2(?:[136]\\d|2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|[1356]\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01]))\\d{5,6}|4(?:[0246]\\d{5,7}|(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])\\d{5,6})|6(?:[03]\\d{5,7}|(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])\\d{5,6})|8\\d{6,8}|9(?:0[1-9]\\d{4,6}|(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8])\\d{5,6})|(?:[12][136]|3[356])\\d{5}", null, null, null, "8123456", null, null, [7, 8, 9]],
                            [null, null, "7[02369]\\d{7}", null, null, null, "701234567", null, null, [9]],
                            [null, null, "20\\d{4,7}", null, null, null, "20123456", null, null, [6, 7, 8, 9]],
                            [null, null, "649\\d{6}|9(?:00|39|44)[1-8]\\d{3,6}", null, null, null, "9001234567", null, null, [7, 8, 9, 10]],
                            [null, null, "77[0-7]\\d{6}", null, null, null, "771234567", null, null, [9]],
                            [null, null, "75[1-8]\\d{6}", null, null, null, "751234567", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SE", 46, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44)"], "0$1"],
                                [null, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"],
                                [null, "(\\d{3})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1"],
                                [null, "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"], "0$1"],
                                [null, "(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:0|39|44)"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["7"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1"]
                            ],
                            [
                                [null, "(\\d{2})(\\d{2,3})(\\d{2})", "$1 $2 $3", ["20"]],
                                [null, "(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"]],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["9(?:00|39|44)"]],
                                [null, "(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]],
                                [null, "(\\d{3})(\\d{2,3})(\\d{2})", "$1 $2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"]],
                                [null, "(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[013689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"]],
                                [null, "(\\d{3})(\\d{2,3})(\\d{3})", "$1 $2 $3", ["9(?:0|39|44)"]],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["8"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"]],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["9"]],
                                [null, "(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]"]]
                            ],
                            [null, null, "74[02-9]\\d{6}", null, null, null, "740123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:25[245]|67[3-68])\\d{9}", null, null, null, "254123456789", null, null, [12]]
                        ],
                        SG: [null, [null, null, "(?:1\\d{3}|[369]|7000|8(?:\\d{2})?)\\d{7}", null, null, null, null, null, null, [8, 10, 11]],
                            [null, null, "6[1-9]\\d{6}", null, null, null, "61234567", null, null, [8]],
                            [null, null, "(?:8[1-8]|9[0-8])\\d{6}", null, null, null, "81234567", null, null, [8]],
                            [null, null, "(?:18|8)00\\d{7}", null, null, null, "18001234567", null, null, [10, 11]],
                            [null, null, "1900\\d{7}", null, null, null, "19001234567", null, null, [11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "3[12]\\d{6}", null, null, null, "31234567", null, null, [8]], "SG", 65, "0[0-3]\\d", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[369]|8[1-8]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]],
                                [null, "(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1[89]"]],
                                [null, "(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["70"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7000\\d{7}", null, null, null, "70001234567", null, null, [11]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SH: [null, [null, null, "(?:[256]\\d|8)\\d{3}", null, null, null, null, null, null, [4, 5]],
                            [null, null, "2(?:[0-57-9]\\d|6[4-9])\\d\\d", null, null, null, "22158"],
                            [null, null, "[56]\\d{4}", null, null, null, "51234", null, null, [5]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "262\\d\\d", null, null, null, "26212", null, null, [5]], "SH", 290, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], 1, "[256]", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SI: [null, [null, null, "[1-8]\\d{7}|90\\d{4,6}|8\\d{4,6}", null, null, null, null, null, null, [5, 6, 7, 8]],
                            [null, null, "(?:[1-357][2-8]|4[24-8])\\d{6}", null, null, null, "12345678", null, null, [8],
                                [7]
                            ],
                            [null, null, "(?:(?:[37][01]|4[0139]|51)\\d\\d|6(?:[48]\\d\\d|5(?:1\\d|55|[67]0)|9(?:10|[69]\\d)))\\d{4}", null, null, null, "31234567", null, null, [8]],
                            [null, null, "80\\d{4,6}", null, null, null, "80123456", null, null, [6, 7, 8]],
                            [null, null, "89[1-3]\\d{2,5}|90\\d{4,6}", null, null, null, "90123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:59\\d\\d|8(?:1(?:[67]\\d|8[01389])|2(?:0\\d|2[0378]|8[0-2489])|3[389]\\d))\\d{4}", null, null, null, "59012345", null, null, [8]], "SI", 386, "00|10(?:22|66|88|99)", "0", null, null, "0", null, "00", null, [
                                [null, "(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[12]|[357][2-8]|4[24-8]"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3467]|51"], "0$1"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[58]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SJ: [null, [null, null, "(?:0|(?:[4589]\\d|79)\\d\\d)\\d{4}", null, null, null, null, null, null, [5, 8]],
                            [null, null, "79\\d{6}", null, null, null, "79123456", null, null, [8]],
                            [null, null, "(?:4[015-8]|5[89]|9\\d)\\d{6}", null, null, null, "41234567", null, null, [8]],
                            [null, null, "80[01]\\d{5}", null, null, null, "80012345", null, null, [8]],
                            [null, null, "82[09]\\d{5}", null, null, null, "82012345", null, null, [8]],
                            [null, null, "810(?:0[0-6]|[2-8]\\d)\\d{3}", null, null, null, "81021234", null, null, [8]],
                            [null, null, "880\\d{5}", null, null, null, "88012345", null, null, [8]],
                            [null, null, "85[0-5]\\d{5}", null, null, null, "85012345", null, null, [8]], "SJ", 47, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "79", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:0\\d|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}", null, null, null, "01234"], null, null, [null, null, "81[23]\\d{5}", null, null, null, "81212345", null, null, [8]]
                        ],
                        SK: [null, [null, null, "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}", null, null, null, null, null, null, [6, 7, 9]],
                            [null, null, "(?:2(?:16|[2-9]\\d{3})|[3-5][1-8]\\d{3})\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d", null, null, null, "221234567"],
                            [null, null, "9(?:0(?:[1-8]\\d|9[1-9])|(?:1[0-24-9]|[45]\\d)\\d)\\d{5}", null, null, null, "912123456", null, null, [9]],
                            [null, null, "800\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "9(?:00|[78]\\d)\\d{6}", null, null, null, "900123456", null, null, [9]],
                            [null, null, "8[5-9]\\d{7}", null, null, null, "850123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "6(?:02|5[0-4]|9[0-6])\\d{6}", null, null, null, "690123456", null, null, [9]], "SK", 421, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})", "$1 $2", ["909", "9090"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"]
                            ],
                            [
                                [null, "(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
                                [null, "(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
                                [null, "(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"]
                            ],
                            [null, null, "9090\\d{3}", null, null, null, "9090123", null, null, [7]], null, null, [null, null, "(?:(?:602|8(?:00|[5-9]\\d))\\d{3}|9(?:0(?:0\\d{3}|90)|[78]\\d{4}))\\d{3}", null, null, null, null, null, null, [7, 9]],
                            [null, null, "96\\d{7}", null, null, null, "961234567", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SL: [null, [null, null, "(?:[2-578]\\d|66|99)\\d{6}", null, null, null, null, null, null, [8],
                                [6]
                            ],
                            [null, null, "[235]2[2-4][2-9]\\d{4}", null, null, null, "22221234", null, null, null, [6]],
                            [null, null, "(?:2[15]|3[013-5]|4[04]|5[05]|66|7[5-9]|8[08]|99)\\d{6}", null, null, null, "25123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SL", 232, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["[2-9]"], "(0$1)"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SM: [null, [null, null, "(?:0549|[5-7]\\d)\\d{6}", null, null, null, null, null, null, [8, 10],
                                [6]
                            ],
                            [null, null, "0549(?:8[0157-9]|9\\d)\\d{4}", null, null, null, "0549886377", null, null, [10],
                                [6]
                            ],
                            [null, null, "6[16]\\d{6}", null, null, null, "66661212", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "7[178]\\d{6}", null, null, null, "71123456", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5[158]\\d{6}", null, null, null, "58001110", null, null, [8]], "SM", 378, "00", null, null, null, "([89]\\d{5})$", "0549$1", null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]],
                                [null, "(\\d{4})(\\d{6})", "$1 $2", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SN: [null, [null, null, "(?:[378]\\d{4}|93330)\\d{4}", null, null, null, null, null, null, [9]],
                            [null, null, "3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}", null, null, null, "301012345"],
                            [null, null, "7(?:[06-8]\\d|21|90)\\d{6}", null, null, null, "701234567"],
                            [null, null, "800\\d{6}", null, null, null, "800123456"],
                            [null, null, "88[4689]\\d{6}", null, null, null, "884123456"],
                            [null, null, "81[02468]\\d{6}", null, null, null, "810123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3(?:392|9[01]\\d)\\d|93330)\\d{4}", null, null, null, "933301234"], "SN", 221, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]],
                                [null, "(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SO: [null, [null, null, "[346-9]\\d{8}|[12679]\\d{7}|(?:[1-4]\\d|59)\\d{5}|[1348]\\d{5}", null, null, null, null, null, null, [6, 7, 8, 9]],
                            [null, null, "(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|59)\\d{5}|(?:[134]\\d|8[125])\\d{4}", null, null, null, "4012345", null, null, [6, 7]],
                            [null, null, "(?:(?:15|(?:3[59]|4[89]|6[1-9]|79|8[08])\\d|9(?:0[67]|[2-9]))\\d|2(?:4\\d|8))\\d{5}|(?:6\\d|7[1-9])\\d{6}", null, null, null, "71123456", null, null, [7, 8, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SO", 252, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]],
                                [null, "(\\d{6})", "$1", ["[134]"]],
                                [null, "(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],
                                [null, "(\\d)(\\d{7})", "$1 $2", ["24|[67]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[348]|64|79[0-8]|90"]],
                                [null, "(\\d{2})(\\d{5,7})", "$1 $2", ["[12679]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SR: [null, [null, null, "(?:[2-5]|68|[78]\\d)\\d{5}", null, null, null, null, null, null, [6, 7]],
                            [null, null, "(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}", null, null, null, "211234"],
                            [null, null, "(?:7[124-7]|8[125-9])\\d{5}", null, null, null, "7412345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "56\\d{4}", null, null, null, "561234", null, null, [6]], "SR", 597, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{3})", "$1-$2", ["[2-4]|5[2-58]"]],
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["5"]],
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SS: [null, [null, null, "[19]\\d{8}", null, null, null, null, null, null, [9]],
                            [null, null, "18\\d{7}", null, null, null, "181234567"],
                            [null, null, "(?:12|9[1257])\\d{7}", null, null, null, "977123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SS", 211, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ST: [null, [null, null, "(?:22|9\\d)\\d{5}", null, null, null, null, null, null, [7]],
                            [null, null, "22\\d{5}", null, null, null, "2221234"],
                            [null, null, "9(?:0(?:0[5-9]|[1-9]\\d)|[89]\\d\\d)\\d{3}", null, null, null, "9812345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ST", 239, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SV: [null, [null, null, "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?", null, null, null, null, null, null, [7, 8, 11]],
                            [null, null, "2[1-6]\\d{6}", null, null, null, "21234567", null, null, [8]],
                            [null, null, "[67]\\d{7}", null, null, null, "70123456", null, null, [8]],
                            [null, null, "800\\d{4}(?:\\d{4})?", null, null, null, "8001234", null, null, [7, 11]],
                            [null, null, "900\\d{4}(?:\\d{4})?", null, null, null, "9001234", null, null, [7, 11]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SV", 503, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[89]"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[267]"]],
                                [null, "(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SX: [null, [null, null, "(?:(?:[58]\\d\\d|900)\\d|7215)\\d{6}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "7215(?:4[2-8]|8[239]|9[056])\\d{4}", null, null, null, "7215425678", null, null, null, [7]],
                            [null, null, "7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}", null, null, null, "7215205678", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002123456"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SX", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "721", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SY: [null, [null, null, "[1-39]\\d{8}|[1-5]\\d{7}", null, null, null, null, null, null, [8, 9],
                                [6, 7]
                            ],
                            [null, null, "(?:1[14]\\d|2(?:1\\d?|[235])|3(?:[13]\\d|4)|4[13]|5[1-3])\\d{6}|1[1-356]\\d{6}", null, null, null, "112345678", null, null, null, [6, 7]],
                            [null, null, "9(?:22|[3-589]\\d|6[024-9])\\d{6}", null, null, null, "944567890", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "SY", 963, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-5]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1", null, 1]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        SZ: [null, [null, null, "(?:0800|(?:[237]\\d|900)\\d\\d)\\d{4}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "[23][2-5]\\d{6}", null, null, null, "22171234", null, null, [8]],
                            [null, null, "7[6-9]\\d{6}", null, null, null, "76123456", null, null, [8]],
                            [null, null, "0800\\d{4}", null, null, null, "08001234", null, null, [8]],
                            [null, null, "900\\d{6}", null, null, null, "900012345", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{6}", null, null, null, "70012345", null, null, [8]], "SZ", 268, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]],
                                [null, "(\\d{5})(\\d{4})", "$1 $2", ["9"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "0800\\d{4}", null, null, null, null, null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TA: [null, [null, null, "8\\d{3}", null, null, null, null, null, null, [4]],
                            [null, null, "8\\d{3}", null, null, null, "8999"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TA", 290, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "8", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TC: [null, [null, null, "(?:[58]\\d\\d|649|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "649(?:712|9(?:4\\d|50))\\d{4}", null, null, null, "6497121234", null, null, null, [7]],
                            [null, null, "649(?:2(?:3[129]|4[1-7])|3(?:3[1-389]|4[1-8])|4[34][1-3])\\d{4}", null, null, null, "6492311234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, "64971[01]\\d{4}", null, null, null, "6497101234", null, null, null, [7]], "TC", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "649", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TD: [null, [null, null, "(?:22|[69]\\d|77)\\d{6}", null, null, null, null, null, null, [8]],
                            [null, null, "22(?:[37-9]0|5[0-5]|6[89])\\d{4}", null, null, null, "22501234"],
                            [null, null, "(?:6[023568]|77|9\\d)\\d{6}", null, null, null, "63012345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TD", 235, "00|16", null, null, null, null, null, "00", null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2679]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TG: [null, [null, null, "[279]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}", null, null, null, "22212345"],
                            [null, null, "(?:7[09]|9[0-36-9])\\d{6}", null, null, null, "90112345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TG", 228, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TH: [null, [null, null, "(?:1\\d\\d?|[2-57]|[689]\\d)\\d{7}", null, null, null, null, null, null, [8, 9, 10]],
                            [null, null, "(?:2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}", null, null, null, "21234567", null, null, [8]],
                            [null, null, "(?:14|6[1-6]|[89]\\d)\\d{7}", null, null, null, "812345678", null, null, [9]],
                            [null, null, "1800\\d{6}", null, null, null, "1800123456", null, null, [10]],
                            [null, null, "1900\\d{6}", null, null, null, "1900123456", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "6[08]\\d{7}", null, null, null, "601234567", null, null, [9]], "TH", 66, "00[1-9]", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["14|[3-9]"], "0$1"],
                                [null, "(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TJ: [null, [null, null, "(?:[3-59]\\d|77|88)\\d{7}", null, null, null, null, null, null, [9],
                                [3, 5, 6, 7]
                            ],
                            [null, null, "(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}", null, null, null, "372123456", null, null, null, [3, 5, 6, 7]],
                            [null, null, "(?:41[18]|(?:5[05]|77|88|9[0-35-9])\\d)\\d{6}", null, null, null, "917123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TJ", 992, "810", "8", null, null, "8", null, "8~10", null, [
                                [null, "(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3(?:[1245]|3[12])", "3(?:[1245]|3(?:1[0-689]|2))"], null, null, 1],
                                [null, "(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["33"], null, null, 1],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["4[148]|[578]|9(?:[0235-9]|1[0-69])"], null, null, 1],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[349]"], null, null, 1]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TK: [null, [null, null, "[2-47]\\d{3,6}", null, null, null, null, null, null, [4, 5, 6, 7]],
                            [null, null, "(?:2[2-4]|[34]\\d)\\d{2,5}", null, null, null, "3101"],
                            [null, null, "7[2-4]\\d{2,5}", null, null, null, "7290"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TK", 690, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TL: [null, [null, null, "(?:[2-4]\\d|7\\d\\d?|[89]0)\\d{5}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:2[1-5]|3[1-9]|4[1-4])\\d{5}", null, null, null, "2112345", null, null, [7]],
                            [null, null, "7[3-8]\\d{6}", null, null, null, "77212345", null, null, [8]],
                            [null, null, "80\\d{5}", null, null, null, "8012345", null, null, [7]],
                            [null, null, "90\\d{5}", null, null, null, "9012345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "70\\d{5}", null, null, null, "7012345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TL", 670, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["7"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TM: [null, [null, null, "[1-6]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}", null, null, null, "12345678"],
                            [null, null, "6[1-9]\\d{6}", null, null, null, "66123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TM", 993, "810", "8", null, null, "8", null, "8~10", null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"],
                                [null, "(\\d{2})(\\d{6})", "$1 $2", ["6"], "8 $1"],
                                [null, "(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TN: [null, [null, null, "[2-57-9]\\d{7}", null, null, null, null, null, null, [8]],
                            [null, null, "(?:(?:3[0-2]|7\\d)\\d{3}|81200)\\d{3}", null, null, null, "30010123"],
                            [null, null, "(?:(?:[259]\\d|4[0-6])\\d\\d|3(?:001|1(?:[1-35]\\d|40)|240|(?:6[0-4]|91)\\d))\\d{4}", null, null, null, "20123456"],
                            [null, null, "8010\\d{4}", null, null, null, "80101234"],
                            [null, null, "88\\d{6}", null, null, null, "88123456"],
                            [null, null, "8[12]10\\d{4}", null, null, null, "81101234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TN", 216, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TO: [null, [null, null, "(?:(?:080|[56])0|[2-4]\\d|[78]\\d(?:\\d{2})?)\\d{3}", null, null, null, null, null, null, [5, 7]],
                            [null, null, "(?:2\\d|3[1-8]|4[1-4]|[56]0|7[0149]|8[05])\\d{3}", null, null, null, "20123", null, null, [5]],
                            [null, null, "(?:7[578]|8[46-9])\\d{5}", null, null, null, "7715123", null, null, [7]],
                            [null, null, "0800\\d{3}", null, null, null, "0800222", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TO", 676, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{3})", "$1-$2", ["[2-6]|7[014]|8[05]"]],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["7[578]|8"]],
                                [null, "(\\d{4})(\\d{3})", "$1 $2", ["0"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TR: [null, [null, null, "(?:[2-58]\\d\\d|900)\\d{7}|4\\d{6}", null, null, null, null, null, null, [7, 10]],
                            [null, null, "(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}", null, null, null, "2123456789", null, null, [10]],
                            [null, null, "5(?:(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d\\d|6161)\\d{5}", null, null, null, "5012345678", null, null, [10]],
                            [null, null, "800\\d{7}", null, null, null, "8001234567", null, null, [10]],
                            [null, null, "(?:8[89]8|900)\\d{7}", null, null, null, "9001234567", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "592(?:21[12]|461)\\d{4}", null, null, null, "5922121234", null, null, [10]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TR", 90, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d)(\\d{3})", "$1 $2 $3", ["444"], null, null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-4]"], "(0$1)", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|[89]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5"], "0$1", null, 1]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-4]"], "(0$1)", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|[89]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5"], "0$1", null, 1]
                            ],
                            [null, null, "512\\d{7}", null, null, null, "5123456789", null, null, [10]], null, null, [null, null, "444\\d{4}", null, null, null, null, null, null, [7]],
                            [null, null, "(?:444|850\\d{3})\\d{4}", null, null, null, "4441444"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TT: [null, [null, null, "(?:[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "868(?:2(?:01|[23]\\d)|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}", null, null, null, "8682211234", null, null, null, [7]],
                            [null, null, "868(?:2(?:6[6-9]|[7-9]\\d)|[37](?:0[1-9]|1[02-9]|[2-9]\\d)|4[6-9]\\d|6(?:20|78|8\\d))\\d{4}", null, null, null, "8682911234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TT", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "868", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "868619\\d{4}", null, null, null, "8686191234", null, null, null, [7]]
                        ],
                        TV: [null, [null, null, "(?:2|7\\d\\d|90)\\d{4}", null, null, null, null, null, null, [5, 6, 7]],
                            [null, null, "2[02-9]\\d{3}", null, null, null, "20123", null, null, [5]],
                            [null, null, "(?:7[01]\\d|90)\\d{4}", null, null, null, "901234", null, null, [6, 7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "TV", 688, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TW: [null, [null, null, "(?:[24589]|7\\d)\\d{8}|[2-8]\\d{7}|2\\d{6}", null, null, null, null, null, null, [7, 8, 9, 10]],
                            [null, null, "(?:(?:2[2-8]\\d|3[2-9]|4(?:[239]\\d|[78])|5[2-8]|6[235-79]|7[1-9])\\d\\d|8(?:2(?:3\\d|66)|[7-9]\\d\\d))\\d{4}|24\\d{6}", null, null, null, "221234567", null, null, [8, 9]],
                            [null, null, "9[0-8]\\d{7}", null, null, null, "912345678", null, null, [9]],
                            [null, null, "80[0-79]\\d{6}", null, null, null, "800123456", null, null, [9]],
                            [null, null, "20(?:[013-9]\\d\\d|2)\\d{4}", null, null, null, "203123456", null, null, [7, 9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "99\\d{7}", null, null, null, "990123456", null, null, [9]],
                            [null, null, "70\\d{8}", null, null, null, "7012345678", null, null, [10]], "TW", 886, "0(?:0[25-79]|19)", "0", "#", null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"],
                                [null, "(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[25][2-8]|[346]|7[1-9]|8[27-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[258]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "50[0-46-9]\\d{6}", null, null, null, "500123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        TZ: [null, [null, null, "(?:[26-8]\\d|41|90)\\d{7}", null, null, null, null, null, null, [9]],
                            [null, null, "2[2-8]\\d{7}", null, null, null, "222345678"],
                            [null, null, "(?:6[2-9]|7[13-9])\\d{7}", null, null, null, "621234567"],
                            [null, null, "80[08]\\d{6}", null, null, null, "800123456"],
                            [null, null, "90\\d{7}", null, null, null, "900123456"],
                            [null, null, "8(?:40|6[01])\\d{6}", null, null, null, "840123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "41\\d{7}", null, null, null, "412345678"], "TZ", 255, "00[056]", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"],
                                [null, "(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:8(?:[04]0|6[01])|90\\d)\\d{6}"],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        UA: [null, [null, null, "[3-9]\\d{8}", null, null, null, null, null, null, [9],
                                [5, 6, 7]
                            ],
                            [null, null, "(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}", null, null, null, "311234567", null, null, null, [5, 6, 7]],
                            [null, null, "(?:39|50|6[36-8]|7[1-3]|9[1-9])\\d{7}", null, null, null, "391234567"],
                            [null, null, "800\\d{6}", null, null, null, "800123456"],
                            [null, null, "900[2-49]\\d{5}", null, null, null, "900212345"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "89[1-579]\\d{6}", null, null, null, "891234567"], "UA", 380, "00", "0", null, null, "0", null, "0~0", null, [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["(?:3[1-8]|4[136-8])2|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|[89]0", "3(?:[1-46-8]2[013-9]|52)|4(?:[1378]2|62[013-9])|5(?:[12457]2|6[24])|6(?:[12][29]|[49]2|5[24])|[89]0"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1 $2", ["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])", "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        UG: [null, [null, null, "(?:(?:[29]0|[347]\\d)\\d|800)\\d{6}", null, null, null, null, null, null, [9],
                                [5, 6, 7]
                            ],
                            [null, null, "(?:20(?:(?:(?:[0147]\\d|5[0-4]|8[0-2])\\d|2(?:40|[5-9]\\d)|3(?:0[0-4]|[2367]\\d))\\d|6(?:00[0-2]|30[0-4]|[5-9]\\d\\d))|[34]\\d{5})\\d{3}", null, null, null, "312345678", null, null, null, [5, 6, 7]],
                            [null, null, "7(?:(?:[0157-9]\\d|30|4[0-4])\\d|2(?:[03]\\d|60))\\d{5}", null, null, null, "712345678"],
                            [null, null, "800[1-3]\\d{5}", null, null, null, "800123456"],
                            [null, null, "90[1-3]\\d{6}", null, null, null, "901123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "UG", 256, "00[057]", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["3|4(?:[0-5]|6[0-36-9])"], "0$1"],
                                [null, "(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"],
                                [null, "(\\d{3})(\\d{6})", "$1 $2", ["[247-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        US: [null, [null, null, "[2-9]\\d{9}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}", null, null, null, "2015550123", null, null, null, [7]],
                            [null, null, "(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[0135]|3[0-24679]|4[67]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[0235]|58|6[39]|7[0589]|8[04])|5(?:0[1-57-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[013-5]|8[056])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[017]|6[0-279]|78|8[0-2])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[02-59]|8[156])|8(?:0[1-68]|1[02-8]|2[08]|3[0-28]|4[3578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[0179]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}", null, null, null, "2015550123", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "US", 1, "011", "1", null, null, "1", null, null, 1, [
                                [null, "(\\d{3})(\\d{4})", "$1-$2", ["[2-9]"]],
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"], null, null, 1]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-9]"]]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], 1, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "710[2-9]\\d{6}", null, null, null, "7102123456"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        UY: [null, [null, null, "(?:[249]\\d\\d|80)\\d{5}|9\\d{6}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:2\\d|4[2-7])\\d{6}", null, null, null, "21231234", null, null, [8],
                                [7]
                            ],
                            [null, null, "9[1-9]\\d{6}", null, null, null, "94231234", null, null, [8]],
                            [null, null, "80[05]\\d{4}", null, null, null, "8001234", null, null, [7]],
                            [null, null, "90[0-8]\\d{4}", null, null, null, "9001234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "UY", 598, "0(?:0|1[3-9]\\d)", "0", " int. ", null, "0", null, "00", null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["8|90"], "0$1"],
                                [null, "(\\d{4})(\\d{4})", "$1 $2", ["[24]"]],
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        UZ: [null, [null, null, "[679]\\d{8}", null, null, null, null, null, null, [9],
                                [7]
                            ],
                            [null, null, "(?:6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d\\d|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|1[12]\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}", null, null, null, "669050123", null, null, null, [7]],
                            [null, null, "(?:6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\d|7[0-4])|(?:5[67]|7\\d)\\d|6(?:2[0-26]|8\\d)))|7(?:0\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07])))|9[0-57-9]\\d{3})\\d{4}", null, null, null, "912345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "UZ", 998, "810", "8", null, null, "8", null, "8~10", null, [
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[679]"], "8 $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VA: [null, [null, null, "0\\d{6}(?:\\d{4})?|3[0-8]\\d{9}|(?:[0138]\\d?|55)\\d{8}|[08]\\d{5}(?:\\d{2})?", null, null, null, null, null, null, [6, 7, 8, 9, 10, 11]],
                            [null, null, "06698\\d{1,6}", null, null, null, "0669812345"],
                            [null, null, "33\\d{9}|3[1-9]\\d{8}|3[2-9]\\d{7}", null, null, null, "3123456789", null, null, [9, 10, 11]],
                            [null, null, "80(?:0\\d{3}|3)\\d{3}", null, null, null, "800123456", null, null, [6, 9]],
                            [null, null, "(?:(?:0878|1(?:44|6[346])\\d)\\d\\d|89(?:2|(?:4[5-9]|(?:5[5-9]|9)\\d\\d)\\d))\\d{3}|89[45][0-4]\\d\\d", null, null, null, "899123456", null, null, [6, 8, 9, 10]],
                            [null, null, "84(?:[08]\\d{3}|[17])\\d{3}", null, null, null, "848123456", null, null, [6, 9]],
                            [null, null, "1(?:78\\d|99)\\d{6}", null, null, null, "1781234567", null, null, [9, 10]],
                            [null, null, "55\\d{8}", null, null, null, "5512345678", null, null, [10]], "VA", 39, "00", null, null, null, null, null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "06698", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VC: [null, [null, null, "(?:[58]\\d\\d|784|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "784(?:266|3(?:6[6-9]|7\\d|8[0-24-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}", null, null, null, "7842661234", null, null, null, [7]],
                            [null, null, "784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4]))\\d{4}", null, null, null, "7844301234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "VC", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "784", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VE: [null, [null, null, "(?:(?:[24]\\d|50)\\d|[89]00)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|50[01])\\d{7}", null, null, null, "2121234567", null, null, null, [7]],
                            [null, null, "4(?:1[24-8]|2[46])\\d{7}", null, null, null, "4121234567"],
                            [null, null, "800\\d{7}", null, null, null, "8001234567"],
                            [null, null, "900\\d{7}", null, null, null, "9001234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "VE", 58, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{7})", "$1-$2", ["[24589]"], "0$1", "$CC $1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VG: [null, [null, null, "(?:284|[58]\\d\\d|900)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "284(?:(?:229|774|8(?:52|6[459]))\\d|4(?:22\\d|9(?:[45]\\d|6[0-5])))\\d{3}", null, null, null, "2842291234", null, null, null, [7]],
                            [null, null, "284(?:(?:3(?:0[0-3]|4[0-7]|68|9[34])|54[0-57])\\d|4(?:(?:4[0-6]|68)\\d|9(?:6[6-9]|9\\d)))\\d{3}", null, null, null, "2843001234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "VG", 1, "011", "1", null, null, "1", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "284", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VI: [null, [null, null, "(?:(?:34|90)0|[58]\\d\\d)\\d{7}", null, null, null, null, null, null, [10],
                                [7]
                            ],
                            [null, null, "340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}", null, null, null, "3406421234", null, null, null, [7]],
                            [null, null, "340(?:2(?:01|2[06-8]|44|77)|3(?:32|44)|4(?:22|7[34])|5(?:1[34]|55)|6(?:26|4[23]|77|9[023])|7(?:1[2-57-9]|27|7\\d)|884|998)\\d{4}", null, null, null, "3406421234", null, null, null, [7]],
                            [null, null, "8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", null, null, null, "8002345678"],
                            [null, null, "900[2-9]\\d{6}", null, null, null, "9002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "5(?:00|2[12]|33|44|66|77|88)[2-9]\\d{6}", null, null, null, "5002345678"],
                            [null, null, null, null, null, null, null, null, null, [-1]], "VI", 1, "011", "1", null, null, "1", null, null, 1, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "340", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VN: [null, [null, null, "[12]\\d{9}|[135-9]\\d{8}|(?:[16]\\d?|[78])\\d{6}", null, null, null, null, null, null, [7, 8, 9, 10]],
                            [null, null, "2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-7]|9[0-4679])\\d{7}", null, null, null, "2101234567", null, null, [10]],
                            [null, null, "(?:(?:3\\d|7[06-9])\\d|5(?:2[238]|[689]\\d)|8(?:[1-58]\\d|6[5689]|9[689])|9(?:[0-8]\\d|9[013-9]))\\d{6}", null, null, null, "912345678", null, null, [9]],
                            [null, null, "1800\\d{4,6}", null, null, null, "1800123456", null, null, [8, 9, 10]],
                            [null, null, "1900\\d{4,6}", null, null, null, "1900123456", null, null, [8, 9, 10]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:67|99)2\\d{6}", null, null, null, "992012345", null, null, [9]], "VN", 84, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[17]99"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{4,5})", "$1 $2", ["69"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"], null, null, 1],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", null, 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", null, 1]
                            ],
                            [
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", null, 1],
                                [null, "(\\d{4})(\\d{4,6})", "$1 $2", ["1"], null, null, 1],
                                [null, "(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", null, 1],
                                [null, "(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", null, 1],
                                [null, "(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", null, 1]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "(?:[17]99|69\\d\\d?)\\d{4}", null, null, null, null, null, null, [7, 8]],
                            [null, null, "(?:[17]99|69\\d\\d?|80\\d)\\d{4}", null, null, null, "1992000", null, null, [7, 8]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        VU: [null, [null, null, "(?:(?:[23]|(?:[57]\\d|90)\\d)\\d|[48]8)\\d{3}", null, null, null, null, null, null, [5, 7]],
                            [null, null, "(?:(?:2[02-9]|88)\\d|3(?:[5-7]\\d|8[0-8])|48[4-9])\\d\\d", null, null, null, "22123", null, null, [5]],
                            [null, null, "(?:5(?:[0-689]\\d|7[2-5])|7[013-7]\\d)\\d{4}", null, null, null, "5912345", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "90[1-9]\\d{4}", null, null, null, "9010123", null, null, [7]], "VU", 678, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["[579]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "(?:3[03]|900\\d)\\d{3}", null, null, null, "30123"], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        WF: [null, [null, null, "(?:[45]0|68|72|8\\d)\\d{4}", null, null, null, null, null, null, [6]],
                            [null, null, "(?:50|68|72)\\d{4}", null, null, null, "501234"],
                            [null, null, "(?:50|68|72|8[23])\\d{4}", null, null, null, "501234"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "WF", 681, "00", null, null, null, null, null, null, null, [
                                [null, "(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[4-8]"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, "[48]0\\d{4}", null, null, null, "401234"]
                        ],
                        WS: [null, [null, null, "(?:[2-6]|8\\d(?:\\d{4})?)\\d{4}|[78]\\d{6}", null, null, null, null, null, null, [5, 6, 7, 10]],
                            [null, null, "(?:[2-5]\\d|6[1-9])\\d{3}", null, null, null, "22123", null, null, [5]],
                            [null, null, "(?:7[25-7]|8(?:[3-7]|9\\d{3}))\\d{5}", null, null, null, "7212345", null, null, [7, 10]],
                            [null, null, "800\\d{3}", null, null, null, "800123", null, null, [6]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "WS", 685, "0", null, null, null, null, null, null, null, [
                                [null, "(\\d{5})", "$1", ["[2-6]"]],
                                [null, "(\\d{3})(\\d{3,7})", "$1 $2", ["8"]],
                                [null, "(\\d{2})(\\d{5})", "$1 $2", ["7"]]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        XK: [null, [null, null, "(?:[23]\\d{2,3}|4\\d\\d|[89]00)\\d{5}", null, null, null, null, null, null, [8, 9]],
                            [null, null, "(?:2[89]|39)0\\d{6}|[23][89]\\d{6}", null, null, null, "28012345"],
                            [null, null, "4[3-79]\\d{6}", null, null, null, "43201234", null, null, [8]],
                            [null, null, "800\\d{5}", null, null, null, "80001234", null, null, [8]],
                            [null, null, "900\\d{5}", null, null, null, "90001234", null, null, [8]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "XK", 383, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"],
                                [null, "(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[23]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        YE: [null, [null, null, "(?:1|7\\d)\\d{7}|[1-7]\\d{6}", null, null, null, null, null, null, [7, 8, 9],
                                [6]
                            ],
                            [null, null, "17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-68])\\d{5}", null, null, null, "1234567", null, null, [7, 8],
                                [6]
                            ],
                            [null, null, "7[0137]\\d{7}", null, null, null, "712345678", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "YE", 967, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7[24-68]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        YT: [null, [null, null, "(?:(?:26|63)9|80\\d)\\d{6}", null, null, null, null, null, null, [9]],
                            [null, null, "269(?:0[67]|5[01]|6\\d|[78]0)\\d{4}", null, null, null, "269601234"],
                            [null, null, "639(?:0[0-79]|1[019]|[267]\\d|3[09]|[45]0|9[04-79])\\d{4}", null, null, null, "639012345"],
                            [null, null, "80\\d{7}", null, null, null, "801234567"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "YT", 262, "00", "0", null, null, "0", null, null, null, null, null, [null, null, null, null, null, null, null, null, null, [-1]], null, "269|63", [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ZA: [null, [null, null, "[1-9]\\d{8}|8\\d{4,7}", null, null, null, null, null, null, [5, 6, 7, 8, 9]],
                            [null, null, "(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}", null, null, null, "101234567", null, null, [9]],
                            [null, null, "(?:6\\d|7[0-46-9]|8[1-5])\\d{7}|8[1-4]\\d{3,6}", null, null, null, "711234567"],
                            [null, null, "80\\d{7}", null, null, null, "801234567", null, null, [9]],
                            [null, null, "(?:86[2-9]|9[0-2]\\d)\\d{6}", null, null, null, "862345678", null, null, [9]],
                            [null, null, "860\\d{6}", null, null, null, "860123456", null, null, [9]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "87\\d{7}", null, null, null, "871234567", null, null, [9]], "ZA", 27, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "861\\d{6}", null, null, null, "861123456", null, null, [9]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ZM: [null, [null, null, "(?:(?:21|76|9\\d)\\d|800)\\d{6}", null, null, null, null, null, null, [9],
                                [6]
                            ],
                            [null, null, "21[1-8]\\d{6}", null, null, null, "211234567", null, null, null, [6]],
                            [null, null, "(?:76|9[5-8])\\d{7}", null, null, null, "955123456"],
                            [null, null, "800\\d{6}", null, null, null, "800123456"],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], "ZM", 260, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d{3})(\\d{3})", "$1 $2"],
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]
                            ],
                            [
                                [null, "(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]
                            ],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ],
                        ZW: [null, [null, null, "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}", null, null, null, null, null, null, [5, 6, 7, 8, 9, 10],
                                [3, 4]
                            ],
                            [null, null, "(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|(?:4\\d\\d|9[2-9])\\d\\d?|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}", null, null, null, "1312345", null, null, null, [3, 4]],
                            [null, null, "(?:7(?:1\\d|3[2-9]|7[1-9]|8[2-5])|8644)\\d{6}", null, null, null, "712345678", null, null, [9, 10]],
                            [null, null, "80(?:[01]\\d|20|8[0-8])\\d{3}", null, null, null, "8001234", null, null, [7]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, "86(?:1[12]|30|55|77|8[368])\\d{6}", null, null, null, "8686123456", null, null, [10]], "ZW", 263, "00", "0", null, null, "0", null, null, null, [
                                [null, "(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"],
                                [null, "(\\d{3})(\\d{3,5})", "$1 $2", ["2(?:0[45]|2[278]|[49]8|[78])|3(?:[09]8|17|3[78]|[78])|5[15][78]|6(?:[29]8|37|[68][78]|75)"], "0$1"],
                                [null, "(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"],
                                [null, "(\\d{2})(\\d{7})", "$1 $2", ["2(?:[05-79]2|4)|(?:39|5[45]|6[15-8])2|8[13-59]", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"], "(0$1)"],
                                [null, "(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                                [null, "(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"], "0$1"],
                                [null, "(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"],
                                [null, "(\\d{2})(\\d{3,5})", "$1 $2", ["[16]|2(?:[0-256]|9[0-79])|3(?:[09][0-79]|1[0-689]|[24-6]|3[0-69])|5[0-35-9]"], "0$1"],
                                [null, "(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29|3|54"], "0$1"],
                                [null, "(\\d{4})(\\d{3,5})", "$1 $2", ["[25]"], "0$1"]
                            ], null, [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]],
                            [null, null, null, null, null, null, null, null, null, [-1]], null, null, [null, null, null, null, null, null, null, null, null, [-1]]
                        ]
                    };
                _.b = function() {
                    return _.a ? _.a : _.a = new _
                };
                var q = {
                        0: "0",
                        1: "1",
                        2: "2",
                        3: "3",
                        4: "4",
                        5: "5",
                        6: "6",
                        7: "7",
                        8: "8",
                        9: "9",
                        "\uff10": "0",
                        "\uff11": "1",
                        "\uff12": "2",
                        "\uff13": "3",
                        "\uff14": "4",
                        "\uff15": "5",
                        "\uff16": "6",
                        "\uff17": "7",
                        "\uff18": "8",
                        "\uff19": "9",
                        "\u0660": "0",
                        "\u0661": "1",
                        "\u0662": "2",
                        "\u0663": "3",
                        "\u0664": "4",
                        "\u0665": "5",
                        "\u0666": "6",
                        "\u0667": "7",
                        "\u0668": "8",
                        "\u0669": "9",
                        "\u06f0": "0",
                        "\u06f1": "1",
                        "\u06f2": "2",
                        "\u06f3": "3",
                        "\u06f4": "4",
                        "\u06f5": "5",
                        "\u06f6": "6",
                        "\u06f7": "7",
                        "\u06f8": "8",
                        "\u06f9": "9"
                    },
                    ll = RegExp("[+\uff0b]+"),
                    nl = RegExp("([0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9])"),
                    ul = /^\(?\$1\)?$/,
                    dl = new g;
                p(dl, 11, "NA");
                var tl = /\[([^\[\]])*\]/g,
                    el = /\d(?=[^,}][^,}])/g,
                    rl = RegExp("^[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \xa0\xad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e]*(\\$\\d[-x\u2010-\u2015\u2212\u30fc\uff0d-\uff0f \xa0\xad\u200b\u2060\u3000()\uff08\uff09\uff3b\uff3d.\\[\\]/~\u2053\u223c\uff5e]*)+$"),
                    il = /[- ]/;
                S.prototype.K = function() {
                    this.C = "", d(this.i), d(this.u), d(this.m), this.s = 0, this.w = "", d(this.b), this.h = "", d(this.a), this.l = !0, this.A = this.o = this.F = !1, this.f = [], this.B = !1, this.g != this.J && (this.g = A(this, this.D))
                }, S.prototype.L = function(l) {
                    return this.C = function(l, n) {
                        l.i.a(n);
                        var u, t = n;
                        if (nl.test(t) || 1 == l.i.b.length && ll.test(t) ? ("+" == (t = n) ? (u = t, l.u.a(t)) : (u = q[t], l.u.a(u), l.a.a(u)), n = u) : (l.l = !1, l.F = !0), !l.l) {
                            if (!l.F)
                                if (k(l)) {
                                    if (D(l)) return P(l)
                                } else if (0 < l.h.length && (t = l.a.toString(), d(l.a), l.a.a(l.h), l.a.a(t), u = (t = l.b.toString()).lastIndexOf(l.h), d(l.b), l.b.a(t.substring(0, u))), l.h != R(l)) return l.b.a(" "), P(l);
                            return l.i.toString()
                        }
                        switch (l.u.b.length) {
                            case 0:
                            case 1:
                            case 2:
                                return l.i.toString();
                            case 3:
                                if (!k(l)) return l.h = R(l), N(l);
                                l.A = !0;
                            default:
                                return l.A ? (D(l) && (l.A = !1), l.b.toString() + l.a.toString()) : 0 < l.f.length ? (t = L(l, n), 0 < (u = F(l)).length ? u : (O(l, l.a.toString()), M(l) ? I(l) : l.l ? T(l, t) : l.i.toString())) : N(l)
                        }
                    }(this, l)
                }, l("Cleave.AsYouTypeFormatter", S), l("Cleave.AsYouTypeFormatter.prototype.inputDigit", S.prototype.L), l("Cleave.AsYouTypeFormatter.prototype.clear", S.prototype.K)
            }).call("object" == typeof u.g && u.g ? u.g : window)
        },
        613038: function(l, n, u) {
            var d;
            d = function(l) {
                return function(l) {
                    var n = {};

                    function u(d) {
                        if (n[d]) return n[d].exports;
                        var t = n[d] = {
                            exports: {},
                            id: d,
                            loaded: !1
                        };
                        return l[d].call(t.exports, t, t.exports, u), t.loaded = !0, t.exports
                    }
                    return u.m = l, u.c = n, u.p = "", u(0)
                }([function(l, n, u) {
                    "use strict";
                    var d = Object.assign || function(l) {
                            for (var n = 1; n < arguments.length; n++) {
                                var u = arguments[n];
                                for (var d in u) Object.prototype.hasOwnProperty.call(u, d) && (l[d] = u[d])
                            }
                            return l
                        },
                        t = u(1),
                        e = u(2),
                        r = u(9),
                        i = u(10),
                        o = u(11),
                        a = u(12),
                        $ = u(13),
                        c = u(14),
                        s = u(15),
                        f = e({
                            componentDidMount: function() {
                                this.init()
                            },
                            componentDidUpdate: function(l) {
                                var n = this,
                                    u = (n.props.options || {}).phoneRegionCode,
                                    d = n.props.value,
                                    t = n.properties;
                                n.updateRegisteredEvents(n.props), l.value !== d && void 0 !== d && null !== d && (d = d.toString()) !== n.properties.result && (n.properties.initValue = d, n.onInput(d, !0)), (l.options || {}).phoneRegionCode !== u && u && u !== n.properties.phoneRegionCode && (n.properties.phoneRegionCode = u, n.initPhoneFormatter(), n.onInput(n.properties.result)), c.setSelection(n.element, n.state.cursorPosition, t.document)
                            },
                            updateRegisteredEvents: function(l) {
                                var n = this,
                                    u = n.registeredEvents,
                                    d = u.onKeyDown,
                                    t = u.onChange,
                                    e = u.onFocus,
                                    r = u.onBlur,
                                    i = u.onInit;
                                l.onInit && l.onInit !== i && (n.registeredEvents.onInit = l.onInit), l.onChange && l.onChange !== t && (n.registeredEvents.onChange = l.onChange), l.onFocus && l.onFocus !== e && (n.registeredEvents.onFocus = l.onFocus), l.onBlur && l.onBlur !== r && (n.registeredEvents.onBlur = l.onBlur), l.onKeyDown && l.onKeyDown !== d && (n.registeredEvents.onKeyDown = l.onKeyDown)
                            },
                            getInitialState: function() {
                                var l = this,
                                    n = l.props,
                                    u = n.value,
                                    d = n.options,
                                    t = n.onKeyDown,
                                    e = n.onChange,
                                    r = n.onFocus,
                                    i = n.onBlur,
                                    o = n.onInit;
                                return l.registeredEvents = {
                                    onInit: o || c.noop,
                                    onChange: e || c.noop,
                                    onFocus: r || c.noop,
                                    onBlur: i || c.noop,
                                    onKeyDown: t || c.noop
                                }, d || (d = {}), d.initValue = u, l.properties = s.assign({}, d), {
                                    value: l.properties.result,
                                    cursorPosition: 0
                                }
                            },
                            init: function() {
                                var l = this,
                                    n = l.properties;
                                if (!n.numeral && !n.phone && !n.creditCard && !n.time && !n.date && 0 === n.blocksLength && !n.prefix) return l.onInput(n.initValue), void l.registeredEvents.onInit(l);
                                n.maxLength = c.getMaxLength(n.blocks), l.isAndroid = c.isAndroid(), l.initPhoneFormatter(), l.initDateFormatter(), l.initTimeFormatter(), l.initNumeralFormatter(), (n.initValue || n.prefix && !n.noImmediatePrefix) && l.onInput(n.initValue), l.registeredEvents.onInit(l)
                            },
                            initNumeralFormatter: function() {
                                var l = this.properties;
                                l.numeral && (l.numeralFormatter = new r(l.numeralDecimalMark, l.numeralIntegerScale, l.numeralDecimalScale, l.numeralThousandsGroupStyle, l.numeralPositiveOnly, l.stripLeadingZeroes, l.prefix, l.signBeforePrefix, l.tailPrefix, l.delimiter))
                            },
                            initTimeFormatter: function() {
                                var l = this.properties;
                                l.time && (l.timeFormatter = new o(l.timePattern, l.timeFormat), l.blocks = l.timeFormatter.getBlocks(), l.blocksLength = l.blocks.length, l.maxLength = c.getMaxLength(l.blocks))
                            },
                            initDateFormatter: function() {
                                var l = this.properties;
                                l.date && (l.dateFormatter = new i(l.datePattern, l.dateMin, l.dateMax), l.blocks = l.dateFormatter.getBlocks(), l.blocksLength = l.blocks.length, l.maxLength = c.getMaxLength(l.blocks))
                            },
                            initPhoneFormatter: function() {
                                var l = this.properties;
                                if (l.phone) try {
                                    l.phoneFormatter = new a(new l.root.Cleave.AsYouTypeFormatter(l.phoneRegionCode), l.delimiter)
                                } catch (l) {
                                    throw new Error("Please include phone-type-formatter.{country}.js lib")
                                }
                            },
                            setRawValue: function(l) {
                                var n = this.properties;
                                l = void 0 !== l && null !== l ? l.toString() : "", n.numeral && (l = l.replace(".", n.numeralDecimalMark)), n.postDelimiterBackspace = !1, this.onChange({
                                    target: {
                                        value: l
                                    },
                                    stopPropagation: c.noop,
                                    preventDefault: c.noop,
                                    persist: c.noop
                                })
                            },
                            getRawValue: function() {
                                var l = this.properties,
                                    n = l.result;
                                return l.rawValueTrimPrefix && (n = c.getPrefixStrippedValue(n, l.prefix, l.prefixLength, l.result, l.delimiter, l.delimiters, l.noImmediatePrefix, l.tailPrefix, l.signBeforePrefix)), n = l.numeral ? l.numeralFormatter ? l.numeralFormatter.getRawValue(n) : "" : c.stripDelimiters(n, l.delimiter, l.delimiters)
                            },
                            getISOFormatDate: function() {
                                var l = this.properties;
                                return l.date ? l.dateFormatter.getISOFormatDate() : ""
                            },
                            getISOFormatTime: function() {
                                var l = this.properties;
                                return l.time ? l.timeFormatter.getISOFormatTime() : ""
                            },
                            onInit: function(l) {
                                return l
                            },
                            onKeyDown: function(l) {
                                var n = this,
                                    u = n.properties,
                                    d = l.which || l.keyCode;
                                n.lastInputValue = u.result, n.isBackward = 8 === d, n.registeredEvents.onKeyDown(l)
                            },
                            onFocus: function(l) {
                                var n = this,
                                    u = n.properties;
                                u.prefix && u.noImmediatePrefix && !l.target.value && n.onInput(u.prefix), l.target.rawValue = n.getRawValue(), l.target.value = u.result, n.registeredEvents.onFocus(l), c.fixPrefixCursor(n.element, u.prefix, u.delimiter, u.delimiters)
                            },
                            onBlur: function(l) {
                                var n = this,
                                    u = n.properties;
                                l.target.rawValue = n.getRawValue(), l.target.value = u.result, n.registeredEvents.onBlur(l)
                            },
                            onChange: function(l) {
                                var n = this,
                                    u = n.properties;
                                n.isBackward = n.isBackward || "deleteContentBackward" === l.inputType;
                                var d = c.getPostDelimiter(n.lastInputValue, u.delimiter, u.delimiters);
                                n.isBackward && d ? u.postDelimiterBackspace = d : u.postDelimiterBackspace = !1, n.onInput(l.target.value), l.target.rawValue = n.getRawValue(), l.target.value = u.result, n.registeredEvents.onChange(l)
                            },
                            onInput: function(l, n) {
                                var u = this,
                                    d = u.properties,
                                    t = c.getPostDelimiter(l, d.delimiter, d.delimiters);
                                return n || d.numeral || !d.postDelimiterBackspace || t || (l = c.headStr(l, l.length - d.postDelimiterBackspace.length)), d.phone ? (!d.prefix || d.noImmediatePrefix && !l.length ? d.result = d.phoneFormatter.format(l) : d.result = d.prefix + d.phoneFormatter.format(l).slice(d.prefix.length), void u.updateValueState()) : d.numeral ? (d.prefix && d.noImmediatePrefix && 0 === l.length ? d.result = "" : d.result = d.numeralFormatter.format(l), void u.updateValueState()) : (d.date && (l = d.dateFormatter.getValidatedDate(l)), d.time && (l = d.timeFormatter.getValidatedTime(l)), l = c.stripDelimiters(l, d.delimiter, d.delimiters), l = c.getPrefixStrippedValue(l, d.prefix, d.prefixLength, d.result, d.delimiter, d.delimiters, d.noImmediatePrefix, d.tailPrefix, d.signBeforePrefix), l = d.numericOnly ? c.strip(l, /[^\d]/g) : l, l = d.uppercase ? l.toUpperCase() : l, l = d.lowercase ? l.toLowerCase() : l, d.prefix && (d.tailPrefix ? l += d.prefix : l = d.prefix + l, 0 === d.blocksLength) ? (d.result = l, void u.updateValueState()) : (d.creditCard && u.updateCreditCardPropsByValue(l), l = d.maxLength > 0 ? c.headStr(l, d.maxLength) : l, d.result = c.getFormattedValue(l, d.blocks, d.blocksLength, d.delimiter, d.delimiters, d.delimiterLazyShow), void u.updateValueState()))
                            },
                            updateCreditCardPropsByValue: function(l) {
                                var n, u = this.properties;
                                c.headStr(u.result, 4) !== c.headStr(l, 4) && (n = $.getInfo(l, u.creditCardStrictMode), u.blocks = n.blocks, u.blocksLength = u.blocks.length, u.maxLength = c.getMaxLength(u.blocks), u.creditCardType !== n.type && (u.creditCardType = n.type, u.onCreditCardTypeChanged.call(this, u.creditCardType)))
                            },
                            updateValueState: function() {
                                var l = this,
                                    n = l.properties;
                                if (l.element) {
                                    var u = l.element.selectionEnd,
                                        d = l.element.value,
                                        t = n.result;
                                    l.lastInputValue = t, u = c.getNextCursorPosition(u, d, t, n.delimiter, n.delimiters), l.isAndroid ? window.setTimeout((function() {
                                        l.setState({
                                            value: t,
                                            cursorPosition: u
                                        })
                                    }), 1) : l.setState({
                                        value: t,
                                        cursorPosition: u
                                    })
                                } else l.setState({
                                    value: n.result
                                })
                            },
                            render: function() {
                                var l = this,
                                    n = l.props,
                                    u = (n.value, n.options, n.onKeyDown, n.onFocus, n.onBlur, n.onChange, n.onInit, n.htmlRef),
                                    e = function(l, n) {
                                        var u = {};
                                        for (var d in l) n.indexOf(d) >= 0 || Object.prototype.hasOwnProperty.call(l, d) && (u[d] = l[d]);
                                        return u
                                    }(n, ["value", "options", "onKeyDown", "onFocus", "onBlur", "onChange", "onInit", "htmlRef"]);
                                return t.createElement("input", d({
                                    type: "text",
                                    ref: function(n) {
                                        l.element = n, u && u.apply(this, arguments)
                                    },
                                    value: l.state.value,
                                    onKeyDown: l.onKeyDown,
                                    onChange: l.onChange,
                                    onFocus: l.onFocus,
                                    onBlur: l.onBlur
                                }, e))
                            }
                        });
                    l.exports = f
                }, function(n, u) {
                    n.exports = l
                }, function(l, n, u) {
                    "use strict";
                    var d = u(1),
                        t = u(3);
                    if ("undefined" === typeof d) throw Error("create-react-class could not find the React object. If you are using script tags, make sure that React is being loaded before create-react-class.");
                    var e = (new d.Component).updater;
                    l.exports = t(d.Component, d.isValidElement, e)
                }, function(l, n, u) {
                    "use strict";
                    var d = u(4),
                        t = u(5),
                        e = u(6),
                        r = "mixins";
                    l.exports = function(l, n, u) {
                        var i = [],
                            o = {
                                mixins: "DEFINE_MANY",
                                statics: "DEFINE_MANY",
                                propTypes: "DEFINE_MANY",
                                contextTypes: "DEFINE_MANY",
                                childContextTypes: "DEFINE_MANY",
                                getDefaultProps: "DEFINE_MANY_MERGED",
                                getInitialState: "DEFINE_MANY_MERGED",
                                getChildContext: "DEFINE_MANY_MERGED",
                                render: "DEFINE_ONCE",
                                componentWillMount: "DEFINE_MANY",
                                componentDidMount: "DEFINE_MANY",
                                componentWillReceiveProps: "DEFINE_MANY",
                                shouldComponentUpdate: "DEFINE_ONCE",
                                componentWillUpdate: "DEFINE_MANY",
                                componentDidUpdate: "DEFINE_MANY",
                                componentWillUnmount: "DEFINE_MANY",
                                UNSAFE_componentWillMount: "DEFINE_MANY",
                                UNSAFE_componentWillReceiveProps: "DEFINE_MANY",
                                UNSAFE_componentWillUpdate: "DEFINE_MANY",
                                updateComponent: "OVERRIDE_BASE"
                            },
                            a = {
                                getDerivedStateFromProps: "DEFINE_MANY_MERGED"
                            },
                            $ = {
                                displayName: function(l, n) {
                                    l.displayName = n
                                },
                                mixins: function(l, n) {
                                    if (n)
                                        for (var u = 0; u < n.length; u++) s(l, n[u])
                                },
                                childContextTypes: function(l, n) {
                                    l.childContextTypes = d({}, l.childContextTypes, n)
                                },
                                contextTypes: function(l, n) {
                                    l.contextTypes = d({}, l.contextTypes, n)
                                },
                                getDefaultProps: function(l, n) {
                                    l.getDefaultProps ? l.getDefaultProps = p(l.getDefaultProps, n) : l.getDefaultProps = n
                                },
                                propTypes: function(l, n) {
                                    l.propTypes = d({}, l.propTypes, n)
                                },
                                statics: function(l, n) {
                                    ! function(l, n) {
                                        if (n)
                                            for (var u in n) {
                                                var d = n[u];
                                                if (n.hasOwnProperty(u)) {
                                                    if (e(!(u in $), 'ReactClass: You are attempting to define a reserved property, `%s`, that shouldn\'t be on the "statics" key. Define it as an instance property instead; it will still be accessible on the constructor.', u), u in l) {
                                                        var t = a.hasOwnProperty(u) ? a[u] : null;
                                                        return e("DEFINE_MANY_MERGED" === t, "ReactClass: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", u), void(l[u] = p(l[u], d))
                                                    }
                                                    l[u] = d
                                                }
                                            }
                                    }(l, n)
                                },
                                autobind: function() {}
                            };

                        function c(l, n) {
                            var u = o.hasOwnProperty(n) ? o[n] : null;
                            y.hasOwnProperty(n) && e("OVERRIDE_BASE" === u, "ReactClassInterface: You are attempting to override `%s` from your class specification. Ensure that your method names do not overlap with React methods.", n), l && e("DEFINE_MANY" === u || "DEFINE_MANY_MERGED" === u, "ReactClassInterface: You are attempting to define `%s` on your component more than once. This conflict may be due to a mixin.", n)
                        }

                        function s(l, u) {
                            if (u) {
                                e("function" !== typeof u, "ReactClass: You're attempting to use a component class or function as a mixin. Instead, just use a regular object."), e(!n(u), "ReactClass: You're attempting to use a component as a mixin. Instead, just use a regular object.");
                                var d = l.prototype,
                                    t = d.__reactAutoBindPairs;
                                for (var i in u.hasOwnProperty(r) && $.mixins(l, u.mixins), u)
                                    if (u.hasOwnProperty(i) && i !== r) {
                                        var a = u[i],
                                            s = d.hasOwnProperty(i);
                                        if (c(s, i), $.hasOwnProperty(i)) $[i](l, a);
                                        else {
                                            var f = o.hasOwnProperty(i);
                                            if ("function" !== typeof a || f || s || !1 === u.autobind)
                                                if (s) {
                                                    var v = o[i];
                                                    e(f && ("DEFINE_MANY_MERGED" === v || "DEFINE_MANY" === v), "ReactClass: Unexpected spec policy %s for key %s when mixing in component specs.", v, i), "DEFINE_MANY_MERGED" === v ? d[i] = p(d[i], a) : "DEFINE_MANY" === v && (d[i] = h(d[i], a))
                                                } else d[i] = a;
                                            else t.push(i, a), d[i] = a
                                        }
                                    }
                            }
                        }

                        function f(l, n) {
                            for (var u in e(l && n && "object" === typeof l && "object" === typeof n, "mergeIntoWithNoDuplicateKeys(): Cannot merge non-objects."), n) n.hasOwnProperty(u) && (e(void 0 === l[u], "mergeIntoWithNoDuplicateKeys(): Tried to merge two objects with the same key: `%s`. This conflict may be due to a mixin; in particular, this may be caused by two getInitialState() or getDefaultProps() methods returning objects with clashing keys.", u), l[u] = n[u]);
                            return l
                        }

                        function p(l, n) {
                            return function() {
                                var u = l.apply(this, arguments),
                                    d = n.apply(this, arguments);
                                if (null == u) return d;
                                if (null == d) return u;
                                var t = {};
                                return f(t, u), f(t, d), t
                            }
                        }

                        function h(l, n) {
                            return function() {
                                l.apply(this, arguments), n.apply(this, arguments)
                            }
                        }

                        function v(l, n) {
                            return n.bind(l)
                        }
                        var m = {
                                componentDidMount: function() {
                                    this.__isMounted = !0
                                }
                            },
                            g = {
                                componentWillUnmount: function() {
                                    this.__isMounted = !1
                                }
                            },
                            y = {
                                replaceState: function(l, n) {
                                    this.updater.enqueueReplaceState(this, l, n)
                                },
                                isMounted: function() {
                                    return !!this.__isMounted
                                }
                            },
                            b = function() {};
                        return d(b.prototype, l.prototype, y),
                            function(l) {
                                var n = function(l, d, r) {
                                    this.__reactAutoBindPairs.length && function(l) {
                                        for (var n = l.__reactAutoBindPairs, u = 0; u < n.length; u += 2) {
                                            var d = n[u],
                                                t = n[u + 1];
                                            l[d] = v(l, t)
                                        }
                                    }(this), this.props = l, this.context = d, this.refs = t, this.updater = r || u, this.state = null;
                                    var i = this.getInitialState ? this.getInitialState() : null;
                                    e("object" === typeof i && !Array.isArray(i), "%s.getInitialState(): must return an object or null", n.displayName || "ReactCompositeComponent"), this.state = i
                                };
                                for (var d in n.prototype = new b, n.prototype.constructor = n, n.prototype.__reactAutoBindPairs = [], i.forEach(s.bind(null, n)), s(n, m), s(n, l), s(n, g), n.getDefaultProps && (n.defaultProps = n.getDefaultProps()), e(n.prototype.render, "createClass(...): Class specification must implement a `render` method."), o) n.prototype[d] || (n.prototype[d] = null);
                                return n
                            }
                    }
                }, function(l, n) {
                    "use strict";
                    var u = Object.getOwnPropertySymbols,
                        d = Object.prototype.hasOwnProperty,
                        t = Object.prototype.propertyIsEnumerable;

                    function e(l) {
                        if (null === l || void 0 === l) throw new TypeError("Object.assign cannot be called with null or undefined");
                        return Object(l)
                    }
                    l.exports = function() {
                        try {
                            if (!Object.assign) return !1;
                            var l = new String("abc");
                            if (l[5] = "de", "5" === Object.getOwnPropertyNames(l)[0]) return !1;
                            for (var n = {}, u = 0; u < 10; u++) n["_" + String.fromCharCode(u)] = u;
                            if ("0123456789" !== Object.getOwnPropertyNames(n).map((function(l) {
                                    return n[l]
                                })).join("")) return !1;
                            var d = {};
                            return "abcdefghijklmnopqrst".split("").forEach((function(l) {
                                d[l] = l
                            })), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, d)).join("")
                        } catch (l) {
                            return !1
                        }
                    }() ? Object.assign : function(l, n) {
                        for (var r, i, o = e(l), a = 1; a < arguments.length; a++) {
                            for (var $ in r = Object(arguments[a])) d.call(r, $) && (o[$] = r[$]);
                            if (u) {
                                i = u(r);
                                for (var c = 0; c < i.length; c++) t.call(r, i[c]) && (o[i[c]] = r[i[c]])
                            }
                        }
                        return o
                    }
                }, function(l, n) {
                    "use strict";
                    l.exports = {}
                }, function(l, n) {
                    "use strict";
                    l.exports = function(l, n, u, d, t, e, r, i) {
                        if (!l) {
                            var o;
                            if (void 0 === n) o = new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");
                            else {
                                var a = [u, d, t, e, r, i],
                                    $ = 0;
                                (o = new Error(n.replace(/%s/g, (function() {
                                    return a[$++]
                                })))).name = "Invariant Violation"
                            }
                            throw o.framesToPop = 1, o
                        }
                    }
                }, function(l, n, u) {
                    "use strict";
                    var d = u(8);
                    l.exports = d
                }, function(l, n) {
                    "use strict";

                    function u(l) {
                        return function() {
                            return l
                        }
                    }
                    var d = function() {};
                    d.thatReturns = u, d.thatReturnsFalse = u(!1), d.thatReturnsTrue = u(!0), d.thatReturnsNull = u(null), d.thatReturnsThis = function() {
                        return this
                    }, d.thatReturnsArgument = function(l) {
                        return l
                    }, l.exports = d
                }, function(l, n) {
                    "use strict";
                    var u = function l(n, u, d, t, e, r, i, o, a, $) {
                        var c = this;
                        c.numeralDecimalMark = n || ".", c.numeralIntegerScale = u > 0 ? u : 0, c.numeralDecimalScale = d >= 0 ? d : 2, c.numeralThousandsGroupStyle = t || l.groupStyle.thousand, c.numeralPositiveOnly = !!e, c.stripLeadingZeroes = !1 !== r, c.prefix = i || "" === i ? i : "", c.signBeforePrefix = !!o, c.tailPrefix = !!a, c.delimiter = $ || "" === $ ? $ : ",", c.delimiterRE = $ ? new RegExp("\\" + $, "g") : ""
                    };
                    u.groupStyle = {
                        thousand: "thousand",
                        lakh: "lakh",
                        wan: "wan",
                        none: "none"
                    }, u.prototype = {
                        getRawValue: function(l) {
                            return l.replace(this.delimiterRE, "").replace(this.numeralDecimalMark, ".")
                        },
                        format: function(l) {
                            var n, d, t, e, r = this,
                                i = "";
                            switch (l = l.replace(/[A-Za-z]/g, "").replace(r.numeralDecimalMark, "M").replace(/[^\dM-]/g, "").replace(/^\-/, "N").replace(/\-/g, "").replace("N", r.numeralPositiveOnly ? "" : "-").replace("M", r.numeralDecimalMark), r.stripLeadingZeroes && (l = l.replace(/^(-)?0+(?=\d)/, "$1")), d = "-" === l.slice(0, 1) ? "-" : "", t = "undefined" != typeof r.prefix ? r.signBeforePrefix ? d + r.prefix : r.prefix + d : d, e = l, l.indexOf(r.numeralDecimalMark) >= 0 && (e = (n = l.split(r.numeralDecimalMark))[0], i = r.numeralDecimalMark + n[1].slice(0, r.numeralDecimalScale)), "-" === d && (e = e.slice(1)), r.numeralIntegerScale > 0 && (e = e.slice(0, r.numeralIntegerScale)), r.numeralThousandsGroupStyle) {
                                case u.groupStyle.lakh:
                                    e = e.replace(/(\d)(?=(\d\d)+\d$)/g, "$1" + r.delimiter);
                                    break;
                                case u.groupStyle.wan:
                                    e = e.replace(/(\d)(?=(\d{4})+$)/g, "$1" + r.delimiter);
                                    break;
                                case u.groupStyle.thousand:
                                    e = e.replace(/(\d)(?=(\d{3})+$)/g, "$1" + r.delimiter)
                            }
                            return r.tailPrefix ? d + e.toString() + (r.numeralDecimalScale > 0 ? i.toString() : "") + r.prefix : t + e.toString() + (r.numeralDecimalScale > 0 ? i.toString() : "")
                        }
                    }, l.exports = u
                }, function(l, n) {
                    "use strict";
                    var u = function(l, n, u) {
                        var d = this;
                        d.date = [], d.blocks = [], d.datePattern = l, d.dateMin = n.split("-").reverse().map((function(l) {
                            return parseInt(l, 10)
                        })), 2 === d.dateMin.length && d.dateMin.unshift(0), d.dateMax = u.split("-").reverse().map((function(l) {
                            return parseInt(l, 10)
                        })), 2 === d.dateMax.length && d.dateMax.unshift(0), d.initBlocks()
                    };
                    u.prototype = {
                        initBlocks: function() {
                            var l = this;
                            l.datePattern.forEach((function(n) {
                                "Y" === n ? l.blocks.push(4) : l.blocks.push(2)
                            }))
                        },
                        getISOFormatDate: function() {
                            var l = this,
                                n = l.date;
                            return n[2] ? n[2] + "-" + l.addLeadingZero(n[1]) + "-" + l.addLeadingZero(n[0]) : ""
                        },
                        getBlocks: function() {
                            return this.blocks
                        },
                        getValidatedDate: function(l) {
                            var n = this,
                                u = "";
                            return l = l.replace(/[^\d]/g, ""), n.blocks.forEach((function(d, t) {
                                if (l.length > 0) {
                                    var e = l.slice(0, d),
                                        r = e.slice(0, 1),
                                        i = l.slice(d);
                                    switch (n.datePattern[t]) {
                                        case "d":
                                            "00" === e ? e = "01" : parseInt(r, 10) > 3 ? e = "0" + r : parseInt(e, 10) > 31 && (e = "31");
                                            break;
                                        case "m":
                                            "00" === e ? e = "01" : parseInt(r, 10) > 1 ? e = "0" + r : parseInt(e, 10) > 12 && (e = "12")
                                    }
                                    u += e, l = i
                                }
                            })), this.getFixedDateString(u)
                        },
                        getFixedDateString: function(l) {
                            var n, u, d, t = this,
                                e = t.datePattern,
                                r = [],
                                i = 0,
                                o = 0,
                                a = 0,
                                $ = 0,
                                c = 0,
                                s = 0,
                                f = !1;
                            return 4 === l.length && "y" !== e[0].toLowerCase() && "y" !== e[1].toLowerCase() && (c = 2 - ($ = "d" === e[0] ? 0 : 2), n = parseInt(l.slice($, $ + 2), 10), u = parseInt(l.slice(c, c + 2), 10), r = this.getFixedDate(n, u, 0)), 8 === l.length && (e.forEach((function(l, n) {
                                switch (l) {
                                    case "d":
                                        i = n;
                                        break;
                                    case "m":
                                        o = n;
                                        break;
                                    default:
                                        a = n
                                }
                            })), s = 2 * a, $ = i <= a ? 2 * i : 2 * i + 2, c = o <= a ? 2 * o : 2 * o + 2, n = parseInt(l.slice($, $ + 2), 10), u = parseInt(l.slice(c, c + 2), 10), d = parseInt(l.slice(s, s + 4), 10), f = 4 === l.slice(s, s + 4).length, r = this.getFixedDate(n, u, d)), 4 !== l.length || "y" !== e[0] && "y" !== e[1] || (s = 2 - (c = "m" === e[0] ? 0 : 2), u = parseInt(l.slice(c, c + 2), 10), d = parseInt(l.slice(s, s + 2), 10), f = 2 === l.slice(s, s + 2).length, r = [0, u, d]), 6 !== l.length || "Y" !== e[0] && "Y" !== e[1] || (s = 2 - .5 * (c = "m" === e[0] ? 0 : 4), u = parseInt(l.slice(c, c + 2), 10), d = parseInt(l.slice(s, s + 4), 10), f = 4 === l.slice(s, s + 4).length, r = [0, u, d]), r = t.getRangeFixedDate(r), t.date = r, 0 === r.length ? l : e.reduce((function(l, n) {
                                switch (n) {
                                    case "d":
                                        return l + (0 === r[0] ? "" : t.addLeadingZero(r[0]));
                                    case "m":
                                        return l + (0 === r[1] ? "" : t.addLeadingZero(r[1]));
                                    case "y":
                                        return l + (f ? t.addLeadingZeroForYear(r[2], !1) : "");
                                    case "Y":
                                        return l + (f ? t.addLeadingZeroForYear(r[2], !0) : "")
                                }
                            }), "")
                        },
                        getRangeFixedDate: function(l) {
                            var n = this,
                                u = n.datePattern,
                                d = n.dateMin || [],
                                t = n.dateMax || [];
                            return !l.length || d.length < 3 && t.length < 3 || u.find((function(l) {
                                return "y" === l.toLowerCase()
                            })) && 0 === l[2] ? l : t.length && (t[2] < l[2] || t[2] === l[2] && (t[1] < l[1] || t[1] === l[1] && t[0] < l[0])) ? t : d.length && (d[2] > l[2] || d[2] === l[2] && (d[1] > l[1] || d[1] === l[1] && d[0] > l[0])) ? d : l
                        },
                        getFixedDate: function(l, n, u) {
                            return l = Math.min(l, 31), n = Math.min(n, 12), u = parseInt(u || 0, 10), (n < 7 && n % 2 === 0 || n > 8 && n % 2 === 1) && (l = Math.min(l, 2 === n ? this.isLeapYear(u) ? 29 : 28 : 30)), [l, n, u]
                        },
                        isLeapYear: function(l) {
                            return l % 4 === 0 && l % 100 !== 0 || l % 400 === 0
                        },
                        addLeadingZero: function(l) {
                            return (l < 10 ? "0" : "") + l
                        },
                        addLeadingZeroForYear: function(l, n) {
                            return n ? (l < 10 ? "000" : l < 100 ? "00" : l < 1e3 ? "0" : "") + l : (l < 10 ? "0" : "") + l
                        }
                    }, l.exports = u
                }, function(l, n) {
                    "use strict";
                    var u = function(l, n) {
                        var u = this;
                        u.time = [], u.blocks = [], u.timePattern = l, u.timeFormat = n, u.initBlocks()
                    };
                    u.prototype = {
                        initBlocks: function() {
                            var l = this;
                            l.timePattern.forEach((function() {
                                l.blocks.push(2)
                            }))
                        },
                        getISOFormatTime: function() {
                            var l = this,
                                n = l.time;
                            return n[2] ? l.addLeadingZero(n[0]) + ":" + l.addLeadingZero(n[1]) + ":" + l.addLeadingZero(n[2]) : ""
                        },
                        getBlocks: function() {
                            return this.blocks
                        },
                        getTimeFormatOptions: function() {
                            return "12" === String(this.timeFormat) ? {
                                maxHourFirstDigit: 1,
                                maxHours: 12,
                                maxMinutesFirstDigit: 5,
                                maxMinutes: 60
                            } : {
                                maxHourFirstDigit: 2,
                                maxHours: 23,
                                maxMinutesFirstDigit: 5,
                                maxMinutes: 60
                            }
                        },
                        getValidatedTime: function(l) {
                            var n = this,
                                u = "";
                            l = l.replace(/[^\d]/g, "");
                            var d = n.getTimeFormatOptions();
                            return n.blocks.forEach((function(t, e) {
                                if (l.length > 0) {
                                    var r = l.slice(0, t),
                                        i = r.slice(0, 1),
                                        o = l.slice(t);
                                    switch (n.timePattern[e]) {
                                        case "h":
                                            parseInt(i, 10) > d.maxHourFirstDigit ? r = "0" + i : parseInt(r, 10) > d.maxHours && (r = d.maxHours + "");
                                            break;
                                        case "m":
                                        case "s":
                                            parseInt(i, 10) > d.maxMinutesFirstDigit ? r = "0" + i : parseInt(r, 10) > d.maxMinutes && (r = d.maxMinutes + "")
                                    }
                                    u += r, l = o
                                }
                            })), this.getFixedTimeString(u)
                        },
                        getFixedTimeString: function(l) {
                            var n, u, d, t = this,
                                e = t.timePattern,
                                r = [],
                                i = 0,
                                o = 0,
                                a = 0,
                                $ = 0,
                                c = 0,
                                s = 0;
                            return 6 === l.length && (e.forEach((function(l, n) {
                                switch (l) {
                                    case "s":
                                        i = 2 * n;
                                        break;
                                    case "m":
                                        o = 2 * n;
                                        break;
                                    case "h":
                                        a = 2 * n
                                }
                            })), s = a, c = o, $ = i, n = parseInt(l.slice($, $ + 2), 10), u = parseInt(l.slice(c, c + 2), 10), d = parseInt(l.slice(s, s + 2), 10), r = this.getFixedTime(d, u, n)), 4 === l.length && t.timePattern.indexOf("s") < 0 && (e.forEach((function(l, n) {
                                switch (l) {
                                    case "m":
                                        o = 2 * n;
                                        break;
                                    case "h":
                                        a = 2 * n
                                }
                            })), s = a, c = o, n = 0, u = parseInt(l.slice(c, c + 2), 10), d = parseInt(l.slice(s, s + 2), 10), r = this.getFixedTime(d, u, n)), t.time = r, 0 === r.length ? l : e.reduce((function(l, n) {
                                switch (n) {
                                    case "s":
                                        return l + t.addLeadingZero(r[2]);
                                    case "m":
                                        return l + t.addLeadingZero(r[1]);
                                    case "h":
                                        return l + t.addLeadingZero(r[0])
                                }
                            }), "")
                        },
                        getFixedTime: function(l, n, u) {
                            return u = Math.min(parseInt(u || 0, 10), 60), n = Math.min(n, 60), [l = Math.min(l, 60), n, u]
                        },
                        addLeadingZero: function(l) {
                            return (l < 10 ? "0" : "") + l
                        }
                    }, l.exports = u
                }, function(l, n) {
                    "use strict";
                    var u = function(l, n) {
                        var u = this;
                        u.delimiter = n || "" === n ? n : " ", u.delimiterRE = n ? new RegExp("\\" + n, "g") : "", u.formatter = l
                    };
                    u.prototype = {
                        setFormatter: function(l) {
                            this.formatter = l
                        },
                        format: function(l) {
                            var n = this;
                            n.formatter.clear();
                            for (var u, d = "", t = !1, e = 0, r = (l = (l = (l = l.replace(/[^\d+]/g, "")).replace(/^\+/, "B").replace(/\+/g, "").replace("B", "+")).replace(n.delimiterRE, "")).length; e < r; e++) u = n.formatter.inputDigit(l.charAt(e)), /[\s()-]/g.test(u) ? (d = u, t = !0) : t || (d = u);
                            return d = (d = d.replace(/[()]/g, "")).replace(/[\s-]/g, n.delimiter)
                        }
                    }, l.exports = u
                }, function(l, n) {
                    "use strict";
                    var u = {
                        blocks: {
                            uatp: [4, 5, 6],
                            amex: [4, 6, 5],
                            diners: [4, 6, 4],
                            discover: [4, 4, 4, 4],
                            mastercard: [4, 4, 4, 4],
                            dankort: [4, 4, 4, 4],
                            instapayment: [4, 4, 4, 4],
                            jcb15: [4, 6, 5],
                            jcb: [4, 4, 4, 4],
                            maestro: [4, 4, 4, 4],
                            visa: [4, 4, 4, 4],
                            mir: [4, 4, 4, 4],
                            unionPay: [4, 4, 4, 4],
                            general: [4, 4, 4, 4]
                        },
                        re: {
                            uatp: /^(?!1800)1\d{0,14}/,
                            amex: /^3[47]\d{0,13}/,
                            discover: /^(?:6011|65\d{0,2}|64[4-9]\d?)\d{0,12}/,
                            diners: /^3(?:0([0-5]|9)|[689]\d?)\d{0,11}/,
                            mastercard: /^(5[1-5]\d{0,2}|22[2-9]\d{0,1}|2[3-7]\d{0,2})\d{0,12}/,
                            dankort: /^(5019|4175|4571)\d{0,12}/,
                            instapayment: /^63[7-9]\d{0,13}/,
                            jcb15: /^(?:2131|1800)\d{0,11}/,
                            jcb: /^(?:35\d{0,2})\d{0,12}/,
                            maestro: /^(?:5[0678]\d{0,2}|6304|67\d{0,2})\d{0,12}/,
                            mir: /^220[0-4]\d{0,12}/,
                            visa: /^4\d{0,15}/,
                            unionPay: /^(62|81)\d{0,14}/
                        },
                        getStrictBlocks: function(l) {
                            var n = l.reduce((function(l, n) {
                                return l + n
                            }), 0);
                            return l.concat(19 - n)
                        },
                        getInfo: function(l, n) {
                            var d = u.blocks,
                                t = u.re;
                            for (var e in n = !!n, t)
                                if (t[e].test(l)) {
                                    var r = d[e];
                                    return {
                                        type: e,
                                        blocks: n ? this.getStrictBlocks(r) : r
                                    }
                                }
                            return {
                                type: "unknown",
                                blocks: n ? this.getStrictBlocks(d.general) : d.general
                            }
                        }
                    };
                    l.exports = u
                }, function(l, n) {
                    "use strict";
                    var u = {
                        noop: function() {},
                        strip: function(l, n) {
                            return l.replace(n, "")
                        },
                        getPostDelimiter: function(l, n, u) {
                            if (0 === u.length) return l.slice(-n.length) === n ? n : "";
                            var d = "";
                            return u.forEach((function(n) {
                                l.slice(-n.length) === n && (d = n)
                            })), d
                        },
                        getDelimiterREByDelimiter: function(l) {
                            return new RegExp(l.replace(/([.?*+^$[\]\\(){}|-])/g, "\\$1"), "g")
                        },
                        getNextCursorPosition: function(l, n, u, d, t) {
                            return n.length === l ? u.length : l + this.getPositionOffset(l, n, u, d, t)
                        },
                        getPositionOffset: function(l, n, u, d, t) {
                            var e, r, i;
                            return e = this.stripDelimiters(n.slice(0, l), d, t), r = this.stripDelimiters(u.slice(0, l), d, t), 0 !== (i = e.length - r.length) ? i / Math.abs(i) : 0
                        },
                        stripDelimiters: function(l, n, u) {
                            var d = this;
                            if (0 === u.length) {
                                var t = n ? d.getDelimiterREByDelimiter(n) : "";
                                return l.replace(t, "")
                            }
                            return u.forEach((function(n) {
                                n.split("").forEach((function(n) {
                                    l = l.replace(d.getDelimiterREByDelimiter(n), "")
                                }))
                            })), l
                        },
                        headStr: function(l, n) {
                            return l.slice(0, n)
                        },
                        getMaxLength: function(l) {
                            return l.reduce((function(l, n) {
                                return l + n
                            }), 0)
                        },
                        getPrefixStrippedValue: function(l, n, u, d, t, e, r, i, o) {
                            if (0 === u) return l;
                            if (l === n && "" !== l) return "";
                            if (o && "-" == l.slice(0, 1)) {
                                var a = "-" == d.slice(0, 1) ? d.slice(1) : d;
                                return "-" + this.getPrefixStrippedValue(l.slice(1), n, u, a, t, e, r, i, o)
                            }
                            if (d.slice(0, u) !== n && !i) return r && !d && l ? l : "";
                            if (d.slice(-u) !== n && i) return r && !d && l ? l : "";
                            var $ = this.stripDelimiters(d, t, e);
                            return l.slice(0, u) === n || i ? l.slice(-u) !== n && i ? $.slice(0, -u - 1) : i ? l.slice(0, -u) : l.slice(u) : $.slice(u)
                        },
                        getFirstDiffIndex: function(l, n) {
                            for (var u = 0; l.charAt(u) === n.charAt(u);)
                                if ("" === l.charAt(u++)) return -1;
                            return u
                        },
                        getFormattedValue: function(l, n, u, d, t, e) {
                            var r = "",
                                i = t.length > 0,
                                o = "";
                            return 0 === u ? l : (n.forEach((function(n, a) {
                                if (l.length > 0) {
                                    var $ = l.slice(0, n),
                                        c = l.slice(n);
                                    o = i ? t[e ? a - 1 : a] || o : d, e ? (a > 0 && (r += o), r += $) : (r += $, $.length === n && a < u - 1 && (r += o)), l = c
                                }
                            })), r)
                        },
                        fixPrefixCursor: function(l, n, u, d) {
                            if (l) {
                                var t = l.value,
                                    e = u || d[0] || " ";
                                if (l.setSelectionRange && n && !(n.length + e.length <= t.length)) {
                                    var r = 2 * t.length;
                                    setTimeout((function() {
                                        l.setSelectionRange(r, r)
                                    }), 1)
                                }
                            }
                        },
                        checkFullSelection: function(l) {
                            try {
                                return (window.getSelection() || document.getSelection() || {}).toString().length === l.length
                            } catch (l) {}
                            return !1
                        },
                        setSelection: function(l, n, u) {
                            if (l === this.getActiveElement(u) && !(l && l.value.length <= n))
                                if (l.createTextRange) {
                                    var d = l.createTextRange();
                                    d.move("character", n), d.select()
                                } else try {
                                    l.setSelectionRange(n, n)
                                } catch (l) {
                                    console.warn("The input element type does not support selection")
                                }
                        },
                        getActiveElement: function(l) {
                            var n = l.activeElement;
                            return n && n.shadowRoot ? this.getActiveElement(n.shadowRoot) : n
                        },
                        isAndroid: function() {
                            return navigator && /android/i.test(navigator.userAgent)
                        },
                        isAndroidBackspaceKeydown: function(l, n) {
                            return !!(this.isAndroid() && l && n) && n === l.slice(0, -1)
                        }
                    };
                    l.exports = u
                }, function(l, n) {
                    "use strict";
                    var d = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(l) {
                            return typeof l
                        } : function(l) {
                            return l && "function" === typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                        },
                        t = {
                            assign: function(l, n) {
                                return n = n || {}, (l = l || {}).creditCard = !!n.creditCard, l.creditCardStrictMode = !!n.creditCardStrictMode, l.creditCardType = "", l.onCreditCardTypeChanged = n.onCreditCardTypeChanged || function() {}, l.phone = !!n.phone, l.phoneRegionCode = n.phoneRegionCode || "AU", l.phoneFormatter = {}, l.time = !!n.time, l.timePattern = n.timePattern || ["h", "m", "s"], l.timeFormat = n.timeFormat || "24", l.timeFormatter = {}, l.date = !!n.date, l.datePattern = n.datePattern || ["d", "m", "Y"], l.dateMin = n.dateMin || "", l.dateMax = n.dateMax || "", l.dateFormatter = {}, l.numeral = !!n.numeral, l.numeralIntegerScale = n.numeralIntegerScale > 0 ? n.numeralIntegerScale : 0, l.numeralDecimalScale = n.numeralDecimalScale >= 0 ? n.numeralDecimalScale : 2, l.numeralDecimalMark = n.numeralDecimalMark || ".", l.numeralThousandsGroupStyle = n.numeralThousandsGroupStyle || "thousand", l.numeralPositiveOnly = !!n.numeralPositiveOnly, l.stripLeadingZeroes = !1 !== n.stripLeadingZeroes, l.signBeforePrefix = !!n.signBeforePrefix, l.tailPrefix = !!n.tailPrefix, l.swapHiddenInput = !!n.swapHiddenInput, l.numericOnly = l.creditCard || l.date || !!n.numericOnly, l.uppercase = !!n.uppercase, l.lowercase = !!n.lowercase, l.prefix = l.creditCard || l.date ? "" : n.prefix || "", l.noImmediatePrefix = !!n.noImmediatePrefix, l.prefixLength = l.prefix.length, l.rawValueTrimPrefix = !!n.rawValueTrimPrefix, l.copyDelimiter = !!n.copyDelimiter, l.initValue = void 0 !== n.initValue && null !== n.initValue ? n.initValue.toString() : "", l.delimiter = n.delimiter || "" === n.delimiter ? n.delimiter : n.date ? "/" : n.time ? ":" : n.numeral ? "," : (n.phone, " "), l.delimiterLength = l.delimiter.length, l.delimiterLazyShow = !!n.delimiterLazyShow, l.delimiters = n.delimiters || [], l.blocks = n.blocks || [], l.blocksLength = l.blocks.length, l.root = "object" === ("undefined" === typeof u.g ? "undefined" : d(u.g)) && u.g ? u.g : window, l.document = n.document || l.root.document, l.maxLength = 0, l.backspace = !1, l.result = "", l.onValueChanged = n.onValueChanged || function() {}, l
                            }
                        };
                    l.exports = t
                }])
            }, l.exports = d(u(184481))
        },
        552034: (l, n, u) => {
            l.exports = u(613038)
        },
        904799: function(l, n) {
            var u, d, t;
            d = [n], u = function(l) {
                Array.prototype.map || (Array.prototype.map = function(l) {
                    "use strict";
                    if (void 0 === this || null === this) throw new TypeError;
                    var n = Object(this),
                        u = n.length >>> 0;
                    if ("function" !== typeof l) throw new TypeError;
                    for (var d = new Array(u), t = arguments.length >= 2 ? arguments[1] : void 0, e = 0; e < u; e++) e in n && (d[e] = l.call(t, n[e], e, n));
                    return d
                });
                var n = "A".charCodeAt(0),
                    u = "Z".charCodeAt(0);

                function d(l) {
                    return (l = (l = l.toUpperCase()).substr(4) + l.substr(0, 4)).split("").map((function(l) {
                        var d = l.charCodeAt(0);
                        return d >= n && d <= u ? d - n + 10 : l
                    })).join("")
                }

                function t(l) {
                    for (var n, u = l; u.length > 2;) n = u.slice(0, 9), u = parseInt(n, 10) % 97 + u.slice(n.length);
                    return parseInt(u, 10) % 97
                }

                function e(l) {
                    var n = l.match(/(.{3})/g).map((function(l) {
                        var n, u = l.slice(0, 1),
                            d = parseInt(l.slice(1), 10);
                        switch (u) {
                            case "A":
                                n = "0-9A-Za-z";
                                break;
                            case "B":
                                n = "0-9A-Z";
                                break;
                            case "C":
                                n = "A-Za-z";
                                break;
                            case "F":
                                n = "0-9";
                                break;
                            case "L":
                                n = "a-z";
                                break;
                            case "U":
                                n = "A-Z";
                                break;
                            case "W":
                                n = "0-9a-z"
                        }
                        return "([" + n + "]{" + d + "})"
                    }));
                    return new RegExp("^" + n.join("") + "$")
                }

                function r(l) {
                    return l.replace($, "").toUpperCase()
                }

                function i(l, n, u, d) {
                    this.countryCode = l, this.length = n, this.structure = u, this.example = d
                }
                i.prototype._regex = function() {
                    return this._cachedRegex || (this._cachedRegex = e(this.structure))
                }, i.prototype.isValid = function(l) {
                    return this.length == l.length && this.countryCode === l.slice(0, 2) && this._regex().test(l.slice(4)) && 1 == t(d(l))
                }, i.prototype.toBBAN = function(l, n) {
                    return this._regex().exec(l.slice(4)).slice(1).join(n)
                }, i.prototype.fromBBAN = function(l) {
                    if (!this.isValidBBAN(l)) throw new Error("Invalid BBAN");
                    var n = ("0" + (98 - t(d(this.countryCode + "00" + l)))).slice(-2);
                    return this.countryCode + n + l
                }, i.prototype.isValidBBAN = function(l) {
                    return this.length - 4 == l.length && this._regex().test(l)
                };
                var o = {};

                function a(l) {
                    o[l.countryCode] = l
                }
                a(new i("AD", 24, "F04F04A12", "AD1200012030200359100100")), a(new i("AE", 23, "F03F16", "AE070331234567890123456")), a(new i("AL", 28, "F08A16", "AL47212110090000000235698741")), a(new i("AT", 20, "F05F11", "AT611904300234573201")), a(new i("AZ", 28, "U04A20", "AZ21NABZ00000000137010001944")), a(new i("BA", 20, "F03F03F08F02", "BA391290079401028494")), a(new i("BE", 16, "F03F07F02", "BE68539007547034")), a(new i("BG", 22, "U04F04F02A08", "BG80BNBG96611020345678")), a(new i("BH", 22, "U04A14", "BH67BMAG00001299123456")), a(new i("BR", 29, "F08F05F10U01A01", "BR9700360305000010009795493P1")), a(new i("BY", 28, "A04F04A16", "BY13NBRB3600900000002Z00AB00")), a(new i("CH", 21, "F05A12", "CH9300762011623852957")), a(new i("CR", 22, "F04F14", "CR72012300000171549015")), a(new i("CY", 28, "F03F05A16", "CY17002001280000001200527600")), a(new i("CZ", 24, "F04F06F10", "CZ6508000000192000145399")), a(new i("DE", 22, "F08F10", "DE89370400440532013000")), a(new i("DK", 18, "F04F09F01", "DK5000400440116243")), a(new i("DO", 28, "U04F20", "DO28BAGR00000001212453611324")), a(new i("EE", 20, "F02F02F11F01", "EE382200221020145685")), a(new i("EG", 29, "F04F04F17", "EG800002000156789012345180002")), a(new i("ES", 24, "F04F04F01F01F10", "ES9121000418450200051332")), a(new i("FI", 18, "F06F07F01", "FI2112345600000785")), a(new i("FO", 18, "F04F09F01", "FO6264600001631634")), a(new i("FR", 27, "F05F05A11F02", "FR1420041010050500013M02606")), a(new i("GB", 22, "U04F06F08", "GB29NWBK60161331926819")), a(new i("GE", 22, "U02F16", "GE29NB0000000101904917")), a(new i("GI", 23, "U04A15", "GI75NWBK000000007099453")), a(new i("GL", 18, "F04F09F01", "GL8964710001000206")), a(new i("GR", 27, "F03F04A16", "GR1601101250000000012300695")), a(new i("GT", 28, "A04A20", "GT82TRAJ01020000001210029690")), a(new i("HR", 21, "F07F10", "HR1210010051863000160")), a(new i("HU", 28, "F03F04F01F15F01", "HU42117730161111101800000000")), a(new i("IE", 22, "U04F06F08", "IE29AIBK93115212345678")), a(new i("IL", 23, "F03F03F13", "IL620108000000099999999")), a(new i("IS", 26, "F04F02F06F10", "IS140159260076545510730339")), a(new i("IT", 27, "U01F05F05A12", "IT60X0542811101000000123456")), a(new i("IQ", 23, "U04F03A12", "IQ98NBIQ850123456789012")), a(new i("JO", 30, "A04F22", "JO15AAAA1234567890123456789012")), a(new i("KW", 30, "U04A22", "KW81CBKU0000000000001234560101")), a(new i("KZ", 20, "F03A13", "KZ86125KZT5004100100")), a(new i("LB", 28, "F04A20", "LB62099900000001001901229114")), a(new i("LC", 32, "U04F24", "LC07HEMM000100010012001200013015")), a(new i("LI", 21, "F05A12", "LI21088100002324013AA")), a(new i("LT", 20, "F05F11", "LT121000011101001000")), a(new i("LU", 20, "F03A13", "LU280019400644750000")), a(new i("LV", 21, "U04A13", "LV80BANK0000435195001")), a(new i("MC", 27, "F05F05A11F02", "MC5811222000010123456789030")), a(new i("MD", 24, "U02A18", "MD24AG000225100013104168")), a(new i("ME", 22, "F03F13F02", "ME25505000012345678951")), a(new i("MK", 19, "F03A10F02", "MK07250120000058984")), a(new i("MR", 27, "F05F05F11F02", "MR1300020001010000123456753")), a(new i("MT", 31, "U04F05A18", "MT84MALT011000012345MTLCAST001S")), a(new i("MU", 30, "U04F02F02F12F03U03", "MU17BOMM0101101030300200000MUR")), a(new i("NL", 18, "U04F10", "NL91ABNA0417164300")), a(new i("NO", 15, "F04F06F01", "NO9386011117947")), a(new i("PK", 24, "U04A16", "PK36SCBL0000001123456702")), a(new i("PL", 28, "F08F16", "PL61109010140000071219812874")), a(new i("PS", 29, "U04A21", "PS92PALS000000000400123456702")), a(new i("PT", 25, "F04F04F11F02", "PT50000201231234567890154")), a(new i("QA", 29, "U04A21", "QA30AAAA123456789012345678901")), a(new i("RO", 24, "U04A16", "RO49AAAA1B31007593840000")), a(new i("RS", 22, "F03F13F02", "RS35260005601001611379")), a(new i("SA", 24, "F02A18", "SA0380000000608010167519")), a(new i("SC", 31, "U04F04F16U03", "SC18SSCB11010000000000001497USD")), a(new i("SE", 24, "F03F16F01", "SE4550000000058398257466")), a(new i("SI", 19, "F05F08F02", "SI56263300012039086")), a(new i("SK", 24, "F04F06F10", "SK3112000000198742637541")), a(new i("SM", 27, "U01F05F05A12", "SM86U0322509800000000270100")), a(new i("ST", 25, "F08F11F02", "ST68000100010051845310112")), a(new i("SV", 28, "U04F20", "SV62CENR00000000000000700025")), a(new i("TL", 23, "F03F14F02", "TL380080012345678910157")), a(new i("TN", 24, "F02F03F13F02", "TN5910006035183598478831")), a(new i("TR", 26, "F05F01A16", "TR330006100519786457841326")), a(new i("UA", 29, "F25", "UA511234567890123456789012345")), a(new i("VA", 22, "F18", "VA59001123000012345678")), a(new i("VG", 24, "U04F16", "VG96VPVG0000012345678901")), a(new i("XK", 20, "F04F10F02", "XK051212012345678906")), a(new i("AO", 25, "F21", "AO69123456789012345678901")), a(new i("BF", 27, "F23", "BF2312345678901234567890123")), a(new i("BI", 16, "F12", "BI41123456789012")), a(new i("BJ", 28, "F24", "BJ39123456789012345678901234")), a(new i("CI", 28, "U02F22", "CI70CI1234567890123456789012")), a(new i("CM", 27, "F23", "CM9012345678901234567890123")), a(new i("CV", 25, "F21", "CV30123456789012345678901")), a(new i("DZ", 24, "F20", "DZ8612345678901234567890")), a(new i("IR", 26, "F22", "IR861234568790123456789012")), a(new i("MG", 27, "F23", "MG1812345678901234567890123")), a(new i("ML", 28, "U01F23", "ML15A12345678901234567890123")), a(new i("MZ", 25, "F21", "MZ25123456789012345678901")), a(new i("SN", 28, "U01F23", "SN52A12345678901234567890123")), a(new i("GF", 27, "F05F05A11F02", "GF121234512345123456789AB13")), a(new i("GP", 27, "F05F05A11F02", "GP791234512345123456789AB13")), a(new i("MQ", 27, "F05F05A11F02", "MQ221234512345123456789AB13")), a(new i("RE", 27, "F05F05A11F02", "RE131234512345123456789AB13")), a(new i("PF", 27, "F05F05A11F02", "PF281234512345123456789AB13")), a(new i("TF", 27, "F05F05A11F02", "TF891234512345123456789AB13")), a(new i("YT", 27, "F05F05A11F02", "YT021234512345123456789AB13")), a(new i("NC", 27, "F05F05A11F02", "NC551234512345123456789AB13")), a(new i("BL", 27, "F05F05A11F02", "BL391234512345123456789AB13")), a(new i("MF", 27, "F05F05A11F02", "MF551234512345123456789AB13")), a(new i("PM", 27, "F05F05A11F02", "PM071234512345123456789AB13")), a(new i("WF", 27, "F05F05A11F02", "WF621234512345123456789AB13"));
                var $ = /[^a-zA-Z0-9]/g,
                    c = /(.{4})(?!$)/g;

                function s(l) {
                    return "string" == typeof l || l instanceof String
                }
                l.isValid = function(l) {
                    if (!s(l)) return !1;
                    l = r(l);
                    var n = o[l.slice(0, 2)];
                    return !!n && n.isValid(l)
                }, l.toBBAN = function(l, n) {
                    "undefined" == typeof n && (n = " "), l = r(l);
                    var u = o[l.slice(0, 2)];
                    if (!u) throw new Error("No country with code " + l.slice(0, 2));
                    return u.toBBAN(l, n)
                }, l.fromBBAN = function(l, n) {
                    var u = o[l];
                    if (!u) throw new Error("No country with code " + l);
                    return u.fromBBAN(r(n))
                }, l.isValidBBAN = function(l, n) {
                    if (!s(n)) return !1;
                    var u = o[l];
                    return u && u.isValidBBAN(r(n))
                }, l.printFormat = function(l, n) {
                    return "undefined" == typeof n && (n = " "), r(l).replace(c, "$1" + n)
                }, l.electronicFormat = r, l.countries = o
            }, void 0 === (t = "function" === typeof u ? u.apply(n, d) : u) || (l.exports = t)
        },
        301196: l => {
            l.exports = function(l, n, u) {
                for (var d = -1, t = null == l ? 0 : l.length; ++d < t;)
                    if (u(n, l[d])) return !0;
                return !1
            }
        },
        62663: l => {
            l.exports = function(l, n, u, d) {
                var t = -1,
                    e = null == l ? 0 : l.length;
                for (d && e && (u = l[++t]); ++t < e;) u = n(u, l[t], t, l);
                return u
            }
        },
        949029: l => {
            var n = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;
            l.exports = function(l) {
                return l.match(n) || []
            }
        },
        345652: (l, n, u) => {
            var d = u(288668),
                t = u(447443),
                e = u(301196),
                r = u(274757),
                i = u(23593),
                o = u(321814);
            l.exports = function(l, n, u) {
                var a = -1,
                    $ = t,
                    c = l.length,
                    s = !0,
                    f = [],
                    p = f;
                if (u) s = !1, $ = e;
                else if (c >= 200) {
                    var h = n ? null : i(l);
                    if (h) return o(h);
                    s = !1, $ = r, p = new d
                } else p = n ? [] : f;
                l: for (; ++a < c;) {
                    var v = l[a],
                        m = n ? n(v) : v;
                    if (v = u || 0 !== v ? v : 0, s && m === m) {
                        for (var g = p.length; g--;)
                            if (p[g] === m) continue l;
                        n && p.push(m), f.push(v)
                    } else $(p, m, u) || (p !== f && p.push(m), f.push(v))
                }
                return f
            }
        },
        498805: (l, n, u) => {
            var d = u(440180),
                t = u(862689),
                e = u(683140),
                r = u(479833);
            l.exports = function(l) {
                return function(n) {
                    n = r(n);
                    var u = t(n) ? e(n) : void 0,
                        i = u ? u[0] : n.charAt(0),
                        o = u ? d(u, 1).join("") : n.slice(1);
                    return i[l]() + o
                }
            }
        },
        135393: (l, n, u) => {
            var d = u(62663),
                t = u(253816),
                e = u(158748),
                r = RegExp("['\u2019]", "g");
            l.exports = function(l) {
                return function(n) {
                    return d(e(t(n).replace(r, "")), l, "")
                }
            }
        },
        23593: (l, n, u) => {
            var d = u(458525),
                t = u(850308),
                e = u(321814),
                r = d && 1 / e(new d([, -0]))[1] == 1 / 0 ? function(l) {
                    return new d(l)
                } : t;
            l.exports = r
        },
        593157: l => {
            var n = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;
            l.exports = function(l) {
                return n.test(l)
            }
        },
        683729: (l, n, u) => {
            var d = u(618674)({
                "&amp;": "&",
                "&lt;": "<",
                "&gt;": ">",
                "&quot;": '"',
                "&#39;": "'"
            });
            l.exports = d
        },
        902757: l => {
            var n = "\\u2700-\\u27bf",
                u = "a-z\\xdf-\\xf6\\xf8-\\xff",
                d = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                t = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                e = "[" + t + "]",
                r = "\\d+",
                i = "[\\u2700-\\u27bf]",
                o = "[" + u + "]",
                a = "[^\\ud800-\\udfff" + t + r + n + u + d + "]",
                $ = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                c = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                s = "[" + d + "]",
                f = "(?:" + o + "|" + a + ")",
                p = "(?:" + s + "|" + a + ")",
                h = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
                v = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
                m = "(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\\ud83c[\\udffb-\\udfff])?",
                g = "[\\ufe0e\\ufe0f]?",
                y = g + m + ("(?:\\u200d(?:" + ["[^\\ud800-\\udfff]", $, c].join("|") + ")" + g + m + ")*"),
                b = "(?:" + [i, $, c].join("|") + ")" + y,
                w = RegExp([s + "?" + o + "+" + h + "(?=" + [e, s, "$"].join("|") + ")", p + "+" + v + "(?=" + [e, s + f, "$"].join("|") + ")", s + "?" + f + "+" + h, s + "+" + v, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", r, b].join("|"), "g");
            l.exports = function(l) {
                return l.match(w) || []
            }
        },
        639693: l => {
            l.exports = function(l) {
                for (var n = -1, u = null == l ? 0 : l.length, d = 0, t = []; ++n < u;) {
                    var e = l[n];
                    e && (t[d++] = e)
                }
                return t
            }
        },
        976692: l => {
            l.exports = function(l, n) {
                return null == l || l !== l ? n : l
            }
        },
        227361: (l, n, u) => {
            var d = u(297786);
            l.exports = function(l, n, u) {
                var t = null == l ? void 0 : d(l, n);
                return void 0 === t ? u : t
            }
        },
        618446: (l, n, u) => {
            var d = u(690939);
            l.exports = function(l, n) {
                return d(l, n)
            }
        },
        496486: function(l, n, u) {
            var d;
            l = u.nmd(l),
                function() {
                    var t, e = "Expected a function",
                        r = "__lodash_hash_undefined__",
                        i = "__lodash_placeholder__",
                        o = 16,
                        a = 32,
                        $ = 64,
                        c = 128,
                        s = 256,
                        f = 1 / 0,
                        p = 9007199254740991,
                        h = NaN,
                        v = 4294967295,
                        m = [
                            ["ary", c],
                            ["bind", 1],
                            ["bindKey", 2],
                            ["curry", 8],
                            ["curryRight", o],
                            ["flip", 512],
                            ["partial", a],
                            ["partialRight", $],
                            ["rearg", s]
                        ],
                        g = "[object Arguments]",
                        y = "[object Array]",
                        b = "[object Boolean]",
                        w = "[object Date]",
                        _ = "[object Error]",
                        C = "[object Function]",
                        E = "[object GeneratorFunction]",
                        x = "[object Map]",
                        S = "[object Number]",
                        A = "[object Object]",
                        M = "[object Promise]",
                        O = "[object RegExp]",
                        P = "[object Set]",
                        F = "[object String]",
                        T = "[object Symbol]",
                        N = "[object WeakMap]",
                        I = "[object ArrayBuffer]",
                        R = "[object DataView]",
                        k = "[object Float32Array]",
                        D = "[object Float64Array]",
                        L = "[object Int8Array]",
                        Z = "[object Int16Array]",
                        B = "[object Int32Array]",
                        j = "[object Uint8Array]",
                        G = "[object Uint8ClampedArray]",
                        U = "[object Uint16Array]",
                        V = "[object Uint32Array]",
                        H = /\b__p \+= '';/g,
                        W = /\b(__p \+=) '' \+/g,
                        K = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                        Y = /&(?:amp|lt|gt|quot|#39);/g,
                        z = /[&<>"']/g,
                        X = RegExp(Y.source),
                        J = RegExp(z.source),
                        Q = /<%-([\s\S]+?)%>/g,
                        q = /<%([\s\S]+?)%>/g,
                        ll = /<%=([\s\S]+?)%>/g,
                        nl = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                        ul = /^\w*$/,
                        dl = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                        tl = /[\\^$.*+?()[\]{}|]/g,
                        el = RegExp(tl.source),
                        rl = /^\s+/,
                        il = /\s/,
                        ol = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                        al = /\{\n\/\* \[wrapped with (.+)\] \*/,
                        $l = /,? & /,
                        cl = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                        sl = /[()=,{}\[\]\/\s]/,
                        fl = /\\(\\)?/g,
                        pl = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                        hl = /\w*$/,
                        vl = /^[-+]0x[0-9a-f]+$/i,
                        ml = /^0b[01]+$/i,
                        gl = /^\[object .+?Constructor\]$/,
                        yl = /^0o[0-7]+$/i,
                        bl = /^(?:0|[1-9]\d*)$/,
                        wl = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                        _l = /($^)/,
                        Cl = /['\n\r\u2028\u2029\\]/g,
                        El = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                        xl = "\\u2700-\\u27bf",
                        Sl = "a-z\\xdf-\\xf6\\xf8-\\xff",
                        Al = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                        Ml = "\\ufe0e\\ufe0f",
                        Ol = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                        Pl = "['\u2019]",
                        Fl = "[\\ud800-\\udfff]",
                        Tl = "[" + Ol + "]",
                        Nl = "[" + El + "]",
                        Il = "\\d+",
                        Rl = "[\\u2700-\\u27bf]",
                        kl = "[" + Sl + "]",
                        Dl = "[^\\ud800-\\udfff" + Ol + Il + xl + Sl + Al + "]",
                        Ll = "\\ud83c[\\udffb-\\udfff]",
                        Zl = "[^\\ud800-\\udfff]",
                        Bl = "(?:\\ud83c[\\udde6-\\uddff]){2}",
                        jl = "[\\ud800-\\udbff][\\udc00-\\udfff]",
                        Gl = "[" + Al + "]",
                        Ul = "(?:" + kl + "|" + Dl + ")",
                        Vl = "(?:" + Gl + "|" + Dl + ")",
                        Hl = "(?:['\u2019](?:d|ll|m|re|s|t|ve))?",
                        Wl = "(?:['\u2019](?:D|LL|M|RE|S|T|VE))?",
                        Kl = "(?:" + Nl + "|" + Ll + ")" + "?",
                        Yl = "[\\ufe0e\\ufe0f]?",
                        zl = Yl + Kl + ("(?:\\u200d(?:" + [Zl, Bl, jl].join("|") + ")" + Yl + Kl + ")*"),
                        Xl = "(?:" + [Rl, Bl, jl].join("|") + ")" + zl,
                        Jl = "(?:" + [Zl + Nl + "?", Nl, Bl, jl, Fl].join("|") + ")",
                        Ql = RegExp(Pl, "g"),
                        ql = RegExp(Nl, "g"),
                        ln = RegExp(Ll + "(?=" + Ll + ")|" + Jl + zl, "g"),
                        nn = RegExp([Gl + "?" + kl + "+" + Hl + "(?=" + [Tl, Gl, "$"].join("|") + ")", Vl + "+" + Wl + "(?=" + [Tl, Gl + Ul, "$"].join("|") + ")", Gl + "?" + Ul + "+" + Hl, Gl + "+" + Wl, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Il, Xl].join("|"), "g"),
                        un = RegExp("[\\u200d\\ud800-\\udfff" + El + Ml + "]"),
                        dn = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                        tn = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                        en = -1,
                        rn = {};
                    rn[k] = rn[D] = rn[L] = rn[Z] = rn[B] = rn[j] = rn[G] = rn[U] = rn[V] = !0, rn[g] = rn[y] = rn[I] = rn[b] = rn[R] = rn[w] = rn[_] = rn[C] = rn[x] = rn[S] = rn[A] = rn[O] = rn[P] = rn[F] = rn[N] = !1;
                    var on = {};
                    on[g] = on[y] = on[I] = on[R] = on[b] = on[w] = on[k] = on[D] = on[L] = on[Z] = on[B] = on[x] = on[S] = on[A] = on[O] = on[P] = on[F] = on[T] = on[j] = on[G] = on[U] = on[V] = !0, on[_] = on[C] = on[N] = !1;
                    var an = {
                            "\\": "\\",
                            "'": "'",
                            "\n": "n",
                            "\r": "r",
                            "\u2028": "u2028",
                            "\u2029": "u2029"
                        },
                        $n = parseFloat,
                        cn = parseInt,
                        sn = "object" == typeof u.g && u.g && u.g.Object === Object && u.g,
                        fn = "object" == typeof self && self && self.Object === Object && self,
                        pn = sn || fn || Function("return this")(),
                        hn = n && !n.nodeType && n,
                        vn = hn && l && !l.nodeType && l,
                        mn = vn && vn.exports === hn,
                        gn = mn && sn.process,
                        yn = function() {
                            try {
                                var l = vn && vn.require && vn.require("util").types;
                                return l || gn && gn.binding && gn.binding("util")
                            } catch (l) {}
                        }(),
                        bn = yn && yn.isArrayBuffer,
                        wn = yn && yn.isDate,
                        _n = yn && yn.isMap,
                        Cn = yn && yn.isRegExp,
                        En = yn && yn.isSet,
                        xn = yn && yn.isTypedArray;

                    function Sn(l, n, u) {
                        switch (u.length) {
                            case 0:
                                return l.call(n);
                            case 1:
                                return l.call(n, u[0]);
                            case 2:
                                return l.call(n, u[0], u[1]);
                            case 3:
                                return l.call(n, u[0], u[1], u[2])
                        }
                        return l.apply(n, u)
                    }

                    function An(l, n, u, d) {
                        for (var t = -1, e = null == l ? 0 : l.length; ++t < e;) {
                            var r = l[t];
                            n(d, r, u(r), l)
                        }
                        return d
                    }

                    function Mn(l, n) {
                        for (var u = -1, d = null == l ? 0 : l.length; ++u < d && !1 !== n(l[u], u, l););
                        return l
                    }

                    function On(l, n) {
                        for (var u = null == l ? 0 : l.length; u-- && !1 !== n(l[u], u, l););
                        return l
                    }

                    function Pn(l, n) {
                        for (var u = -1, d = null == l ? 0 : l.length; ++u < d;)
                            if (!n(l[u], u, l)) return !1;
                        return !0
                    }

                    function Fn(l, n) {
                        for (var u = -1, d = null == l ? 0 : l.length, t = 0, e = []; ++u < d;) {
                            var r = l[u];
                            n(r, u, l) && (e[t++] = r)
                        }
                        return e
                    }

                    function Tn(l, n) {
                        return !!(null == l ? 0 : l.length) && Gn(l, n, 0) > -1
                    }

                    function Nn(l, n, u) {
                        for (var d = -1, t = null == l ? 0 : l.length; ++d < t;)
                            if (u(n, l[d])) return !0;
                        return !1
                    }

                    function In(l, n) {
                        for (var u = -1, d = null == l ? 0 : l.length, t = Array(d); ++u < d;) t[u] = n(l[u], u, l);
                        return t
                    }

                    function Rn(l, n) {
                        for (var u = -1, d = n.length, t = l.length; ++u < d;) l[t + u] = n[u];
                        return l
                    }

                    function kn(l, n, u, d) {
                        var t = -1,
                            e = null == l ? 0 : l.length;
                        for (d && e && (u = l[++t]); ++t < e;) u = n(u, l[t], t, l);
                        return u
                    }

                    function Dn(l, n, u, d) {
                        var t = null == l ? 0 : l.length;
                        for (d && t && (u = l[--t]); t--;) u = n(u, l[t], t, l);
                        return u
                    }

                    function Ln(l, n) {
                        for (var u = -1, d = null == l ? 0 : l.length; ++u < d;)
                            if (n(l[u], u, l)) return !0;
                        return !1
                    }
                    var Zn = Wn("length");

                    function Bn(l, n, u) {
                        var d;
                        return u(l, (function(l, u, t) {
                            if (n(l, u, t)) return d = u, !1
                        })), d
                    }

                    function jn(l, n, u, d) {
                        for (var t = l.length, e = u + (d ? 1 : -1); d ? e-- : ++e < t;)
                            if (n(l[e], e, l)) return e;
                        return -1
                    }

                    function Gn(l, n, u) {
                        return n === n ? function(l, n, u) {
                            var d = u - 1,
                                t = l.length;
                            for (; ++d < t;)
                                if (l[d] === n) return d;
                            return -1
                        }(l, n, u) : jn(l, Vn, u)
                    }

                    function Un(l, n, u, d) {
                        for (var t = u - 1, e = l.length; ++t < e;)
                            if (d(l[t], n)) return t;
                        return -1
                    }

                    function Vn(l) {
                        return l !== l
                    }

                    function Hn(l, n) {
                        var u = null == l ? 0 : l.length;
                        return u ? zn(l, n) / u : h
                    }

                    function Wn(l) {
                        return function(n) {
                            return null == n ? t : n[l]
                        }
                    }

                    function Kn(l) {
                        return function(n) {
                            return null == l ? t : l[n]
                        }
                    }

                    function Yn(l, n, u, d, t) {
                        return t(l, (function(l, t, e) {
                            u = d ? (d = !1, l) : n(u, l, t, e)
                        })), u
                    }

                    function zn(l, n) {
                        for (var u, d = -1, e = l.length; ++d < e;) {
                            var r = n(l[d]);
                            r !== t && (u = u === t ? r : u + r)
                        }
                        return u
                    }

                    function Xn(l, n) {
                        for (var u = -1, d = Array(l); ++u < l;) d[u] = n(u);
                        return d
                    }

                    function Jn(l) {
                        return l ? l.slice(0, hu(l) + 1).replace(rl, "") : l
                    }

                    function Qn(l) {
                        return function(n) {
                            return l(n)
                        }
                    }

                    function qn(l, n) {
                        return In(n, (function(n) {
                            return l[n]
                        }))
                    }

                    function lu(l, n) {
                        return l.has(n)
                    }

                    function nu(l, n) {
                        for (var u = -1, d = l.length; ++u < d && Gn(n, l[u], 0) > -1;);
                        return u
                    }

                    function uu(l, n) {
                        for (var u = l.length; u-- && Gn(n, l[u], 0) > -1;);
                        return u
                    }

                    function du(l, n) {
                        for (var u = l.length, d = 0; u--;) l[u] === n && ++d;
                        return d
                    }
                    var tu = Kn({
                            "\xc0": "A",
                            "\xc1": "A",
                            "\xc2": "A",
                            "\xc3": "A",
                            "\xc4": "A",
                            "\xc5": "A",
                            "\xe0": "a",
                            "\xe1": "a",
                            "\xe2": "a",
                            "\xe3": "a",
                            "\xe4": "a",
                            "\xe5": "a",
                            "\xc7": "C",
                            "\xe7": "c",
                            "\xd0": "D",
                            "\xf0": "d",
                            "\xc8": "E",
                            "\xc9": "E",
                            "\xca": "E",
                            "\xcb": "E",
                            "\xe8": "e",
                            "\xe9": "e",
                            "\xea": "e",
                            "\xeb": "e",
                            "\xcc": "I",
                            "\xcd": "I",
                            "\xce": "I",
                            "\xcf": "I",
                            "\xec": "i",
                            "\xed": "i",
                            "\xee": "i",
                            "\xef": "i",
                            "\xd1": "N",
                            "\xf1": "n",
                            "\xd2": "O",
                            "\xd3": "O",
                            "\xd4": "O",
                            "\xd5": "O",
                            "\xd6": "O",
                            "\xd8": "O",
                            "\xf2": "o",
                            "\xf3": "o",
                            "\xf4": "o",
                            "\xf5": "o",
                            "\xf6": "o",
                            "\xf8": "o",
                            "\xd9": "U",
                            "\xda": "U",
                            "\xdb": "U",
                            "\xdc": "U",
                            "\xf9": "u",
                            "\xfa": "u",
                            "\xfb": "u",
                            "\xfc": "u",
                            "\xdd": "Y",
                            "\xfd": "y",
                            "\xff": "y",
                            "\xc6": "Ae",
                            "\xe6": "ae",
                            "\xde": "Th",
                            "\xfe": "th",
                            "\xdf": "ss",
                            "\u0100": "A",
                            "\u0102": "A",
                            "\u0104": "A",
                            "\u0101": "a",
                            "\u0103": "a",
                            "\u0105": "a",
                            "\u0106": "C",
                            "\u0108": "C",
                            "\u010a": "C",
                            "\u010c": "C",
                            "\u0107": "c",
                            "\u0109": "c",
                            "\u010b": "c",
                            "\u010d": "c",
                            "\u010e": "D",
                            "\u0110": "D",
                            "\u010f": "d",
                            "\u0111": "d",
                            "\u0112": "E",
                            "\u0114": "E",
                            "\u0116": "E",
                            "\u0118": "E",
                            "\u011a": "E",
                            "\u0113": "e",
                            "\u0115": "e",
                            "\u0117": "e",
                            "\u0119": "e",
                            "\u011b": "e",
                            "\u011c": "G",
                            "\u011e": "G",
                            "\u0120": "G",
                            "\u0122": "G",
                            "\u011d": "g",
                            "\u011f": "g",
                            "\u0121": "g",
                            "\u0123": "g",
                            "\u0124": "H",
                            "\u0126": "H",
                            "\u0125": "h",
                            "\u0127": "h",
                            "\u0128": "I",
                            "\u012a": "I",
                            "\u012c": "I",
                            "\u012e": "I",
                            "\u0130": "I",
                            "\u0129": "i",
                            "\u012b": "i",
                            "\u012d": "i",
                            "\u012f": "i",
                            "\u0131": "i",
                            "\u0134": "J",
                            "\u0135": "j",
                            "\u0136": "K",
                            "\u0137": "k",
                            "\u0138": "k",
                            "\u0139": "L",
                            "\u013b": "L",
                            "\u013d": "L",
                            "\u013f": "L",
                            "\u0141": "L",
                            "\u013a": "l",
                            "\u013c": "l",
                            "\u013e": "l",
                            "\u0140": "l",
                            "\u0142": "l",
                            "\u0143": "N",
                            "\u0145": "N",
                            "\u0147": "N",
                            "\u014a": "N",
                            "\u0144": "n",
                            "\u0146": "n",
                            "\u0148": "n",
                            "\u014b": "n",
                            "\u014c": "O",
                            "\u014e": "O",
                            "\u0150": "O",
                            "\u014d": "o",
                            "\u014f": "o",
                            "\u0151": "o",
                            "\u0154": "R",
                            "\u0156": "R",
                            "\u0158": "R",
                            "\u0155": "r",
                            "\u0157": "r",
                            "\u0159": "r",
                            "\u015a": "S",
                            "\u015c": "S",
                            "\u015e": "S",
                            "\u0160": "S",
                            "\u015b": "s",
                            "\u015d": "s",
                            "\u015f": "s",
                            "\u0161": "s",
                            "\u0162": "T",
                            "\u0164": "T",
                            "\u0166": "T",
                            "\u0163": "t",
                            "\u0165": "t",
                            "\u0167": "t",
                            "\u0168": "U",
                            "\u016a": "U",
                            "\u016c": "U",
                            "\u016e": "U",
                            "\u0170": "U",
                            "\u0172": "U",
                            "\u0169": "u",
                            "\u016b": "u",
                            "\u016d": "u",
                            "\u016f": "u",
                            "\u0171": "u",
                            "\u0173": "u",
                            "\u0174": "W",
                            "\u0175": "w",
                            "\u0176": "Y",
                            "\u0177": "y",
                            "\u0178": "Y",
                            "\u0179": "Z",
                            "\u017b": "Z",
                            "\u017d": "Z",
                            "\u017a": "z",
                            "\u017c": "z",
                            "\u017e": "z",
                            "\u0132": "IJ",
                            "\u0133": "ij",
                            "\u0152": "Oe",
                            "\u0153": "oe",
                            "\u0149": "'n",
                            "\u017f": "s"
                        }),
                        eu = Kn({
                            "&": "&amp;",
                            "<": "&lt;",
                            ">": "&gt;",
                            '"': "&quot;",
                            "'": "&#39;"
                        });

                    function ru(l) {
                        return "\\" + an[l]
                    }

                    function iu(l) {
                        return un.test(l)
                    }

                    function ou(l) {
                        var n = -1,
                            u = Array(l.size);
                        return l.forEach((function(l, d) {
                            u[++n] = [d, l]
                        })), u
                    }

                    function au(l, n) {
                        return function(u) {
                            return l(n(u))
                        }
                    }

                    function $u(l, n) {
                        for (var u = -1, d = l.length, t = 0, e = []; ++u < d;) {
                            var r = l[u];
                            r !== n && r !== i || (l[u] = i, e[t++] = u)
                        }
                        return e
                    }

                    function cu(l) {
                        var n = -1,
                            u = Array(l.size);
                        return l.forEach((function(l) {
                            u[++n] = l
                        })), u
                    }

                    function su(l) {
                        var n = -1,
                            u = Array(l.size);
                        return l.forEach((function(l) {
                            u[++n] = [l, l]
                        })), u
                    }

                    function fu(l) {
                        return iu(l) ? function(l) {
                            var n = ln.lastIndex = 0;
                            for (; ln.test(l);) ++n;
                            return n
                        }(l) : Zn(l)
                    }

                    function pu(l) {
                        return iu(l) ? function(l) {
                            return l.match(ln) || []
                        }(l) : function(l) {
                            return l.split("")
                        }(l)
                    }

                    function hu(l) {
                        for (var n = l.length; n-- && il.test(l.charAt(n)););
                        return n
                    }
                    var vu = Kn({
                        "&amp;": "&",
                        "&lt;": "<",
                        "&gt;": ">",
                        "&quot;": '"',
                        "&#39;": "'"
                    });
                    var mu = function l(n) {
                        var u, d = (n = null == n ? pn : mu.defaults(pn.Object(), n, mu.pick(pn, tn))).Array,
                            il = n.Date,
                            El = n.Error,
                            xl = n.Function,
                            Sl = n.Math,
                            Al = n.Object,
                            Ml = n.RegExp,
                            Ol = n.String,
                            Pl = n.TypeError,
                            Fl = d.prototype,
                            Tl = xl.prototype,
                            Nl = Al.prototype,
                            Il = n["__core-js_shared__"],
                            Rl = Tl.toString,
                            kl = Nl.hasOwnProperty,
                            Dl = 0,
                            Ll = (u = /[^.]+$/.exec(Il && Il.keys && Il.keys.IE_PROTO || "")) ? "Symbol(src)_1." + u : "",
                            Zl = Nl.toString,
                            Bl = Rl.call(Al),
                            jl = pn._,
                            Gl = Ml("^" + Rl.call(kl).replace(tl, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                            Ul = mn ? n.Buffer : t,
                            Vl = n.Symbol,
                            Hl = n.Uint8Array,
                            Wl = Ul ? Ul.allocUnsafe : t,
                            Kl = au(Al.getPrototypeOf, Al),
                            Yl = Al.create,
                            zl = Nl.propertyIsEnumerable,
                            Xl = Fl.splice,
                            Jl = Vl ? Vl.isConcatSpreadable : t,
                            ln = Vl ? Vl.iterator : t,
                            un = Vl ? Vl.toStringTag : t,
                            an = function() {
                                try {
                                    var l = fe(Al, "defineProperty");
                                    return l({}, "", {}), l
                                } catch (l) {}
                            }(),
                            sn = n.clearTimeout !== pn.clearTimeout && n.clearTimeout,
                            fn = il && il.now !== pn.Date.now && il.now,
                            hn = n.setTimeout !== pn.setTimeout && n.setTimeout,
                            vn = Sl.ceil,
                            gn = Sl.floor,
                            yn = Al.getOwnPropertySymbols,
                            Zn = Ul ? Ul.isBuffer : t,
                            Kn = n.isFinite,
                            gu = Fl.join,
                            yu = au(Al.keys, Al),
                            bu = Sl.max,
                            wu = Sl.min,
                            _u = il.now,
                            Cu = n.parseInt,
                            Eu = Sl.random,
                            xu = Fl.reverse,
                            Su = fe(n, "DataView"),
                            Au = fe(n, "Map"),
                            Mu = fe(n, "Promise"),
                            Ou = fe(n, "Set"),
                            Pu = fe(n, "WeakMap"),
                            Fu = fe(Al, "create"),
                            Tu = Pu && new Pu,
                            Nu = {},
                            Iu = Be(Su),
                            Ru = Be(Au),
                            ku = Be(Mu),
                            Du = Be(Ou),
                            Lu = Be(Pu),
                            Zu = Vl ? Vl.prototype : t,
                            Bu = Zu ? Zu.valueOf : t,
                            ju = Zu ? Zu.toString : t;

                        function Gu(l) {
                            if (di(l) && !Wr(l) && !(l instanceof Wu)) {
                                if (l instanceof Hu) return l;
                                if (kl.call(l, "__wrapped__")) return je(l)
                            }
                            return new Hu(l)
                        }
                        var Uu = function() {
                            function l() {}
                            return function(n) {
                                if (!ui(n)) return {};
                                if (Yl) return Yl(n);
                                l.prototype = n;
                                var u = new l;
                                return l.prototype = t, u
                            }
                        }();

                        function Vu() {}

                        function Hu(l, n) {
                            this.__wrapped__ = l, this.__actions__ = [], this.__chain__ = !!n, this.__index__ = 0, this.__values__ = t
                        }

                        function Wu(l) {
                            this.__wrapped__ = l, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = v, this.__views__ = []
                        }

                        function Ku(l) {
                            var n = -1,
                                u = null == l ? 0 : l.length;
                            for (this.clear(); ++n < u;) {
                                var d = l[n];
                                this.set(d[0], d[1])
                            }
                        }

                        function Yu(l) {
                            var n = -1,
                                u = null == l ? 0 : l.length;
                            for (this.clear(); ++n < u;) {
                                var d = l[n];
                                this.set(d[0], d[1])
                            }
                        }

                        function zu(l) {
                            var n = -1,
                                u = null == l ? 0 : l.length;
                            for (this.clear(); ++n < u;) {
                                var d = l[n];
                                this.set(d[0], d[1])
                            }
                        }

                        function Xu(l) {
                            var n = -1,
                                u = null == l ? 0 : l.length;
                            for (this.__data__ = new zu; ++n < u;) this.add(l[n])
                        }

                        function Ju(l) {
                            var n = this.__data__ = new Yu(l);
                            this.size = n.size
                        }

                        function Qu(l, n) {
                            var u = Wr(l),
                                d = !u && Hr(l),
                                t = !u && !d && Xr(l),
                                e = !u && !d && !t && ci(l),
                                r = u || d || t || e,
                                i = r ? Xn(l.length, Ol) : [],
                                o = i.length;
                            for (var a in l) !n && !kl.call(l, a) || r && ("length" == a || t && ("offset" == a || "parent" == a) || e && ("buffer" == a || "byteLength" == a || "byteOffset" == a) || be(a, o)) || i.push(a);
                            return i
                        }

                        function qu(l) {
                            var n = l.length;
                            return n ? l[Xd(0, n - 1)] : t
                        }

                        function ld(l, n) {
                            return De(Ft(l), ad(n, 0, l.length))
                        }

                        function nd(l) {
                            return De(Ft(l))
                        }

                        function ud(l, n, u) {
                            (u !== t && !Gr(l[n], u) || u === t && !(n in l)) && id(l, n, u)
                        }

                        function dd(l, n, u) {
                            var d = l[n];
                            kl.call(l, n) && Gr(d, u) && (u !== t || n in l) || id(l, n, u)
                        }

                        function td(l, n) {
                            for (var u = l.length; u--;)
                                if (Gr(l[u][0], n)) return u;
                            return -1
                        }

                        function ed(l, n, u, d) {
                            return pd(l, (function(l, t, e) {
                                n(d, l, u(l), e)
                            })), d
                        }

                        function rd(l, n) {
                            return l && Tt(n, Ni(n), l)
                        }

                        function id(l, n, u) {
                            "__proto__" == n && an ? an(l, n, {
                                configurable: !0,
                                enumerable: !0,
                                value: u,
                                writable: !0
                            }) : l[n] = u
                        }

                        function od(l, n) {
                            for (var u = -1, e = n.length, r = d(e), i = null == l; ++u < e;) r[u] = i ? t : Mi(l, n[u]);
                            return r
                        }

                        function ad(l, n, u) {
                            return l === l && (u !== t && (l = l <= u ? l : u), n !== t && (l = l >= n ? l : n)), l
                        }

                        function $d(l, n, u, d, e, r) {
                            var i, o = 1 & n,
                                a = 2 & n,
                                $ = 4 & n;
                            if (u && (i = e ? u(l, d, e, r) : u(l)), i !== t) return i;
                            if (!ui(l)) return l;
                            var c = Wr(l);
                            if (c) {
                                if (i = function(l) {
                                        var n = l.length,
                                            u = new l.constructor(n);
                                        n && "string" == typeof l[0] && kl.call(l, "index") && (u.index = l.index, u.input = l.input);
                                        return u
                                    }(l), !o) return Ft(l, i)
                            } else {
                                var s = ve(l),
                                    f = s == C || s == E;
                                if (Xr(l)) return xt(l, o);
                                if (s == A || s == g || f && !e) {
                                    if (i = a || f ? {} : ge(l), !o) return a ? function(l, n) {
                                        return Tt(l, he(l), n)
                                    }(l, function(l, n) {
                                        return l && Tt(n, Ii(n), l)
                                    }(i, l)) : function(l, n) {
                                        return Tt(l, pe(l), n)
                                    }(l, rd(i, l))
                                } else {
                                    if (!on[s]) return e ? l : {};
                                    i = function(l, n, u) {
                                        var d = l.constructor;
                                        switch (n) {
                                            case I:
                                                return St(l);
                                            case b:
                                            case w:
                                                return new d(+l);
                                            case R:
                                                return function(l, n) {
                                                    var u = n ? St(l.buffer) : l.buffer;
                                                    return new l.constructor(u, l.byteOffset, l.byteLength)
                                                }(l, u);
                                            case k:
                                            case D:
                                            case L:
                                            case Z:
                                            case B:
                                            case j:
                                            case G:
                                            case U:
                                            case V:
                                                return At(l, u);
                                            case x:
                                                return new d;
                                            case S:
                                            case F:
                                                return new d(l);
                                            case O:
                                                return function(l) {
                                                    var n = new l.constructor(l.source, hl.exec(l));
                                                    return n.lastIndex = l.lastIndex, n
                                                }(l);
                                            case P:
                                                return new d;
                                            case T:
                                                return t = l, Bu ? Al(Bu.call(t)) : {}
                                        }
                                        var t
                                    }(l, s, o)
                                }
                            }
                            r || (r = new Ju);
                            var p = r.get(l);
                            if (p) return p;
                            r.set(l, i), oi(l) ? l.forEach((function(d) {
                                i.add($d(d, n, u, d, l, r))
                            })) : ti(l) && l.forEach((function(d, t) {
                                i.set(t, $d(d, n, u, t, l, r))
                            }));
                            var h = c ? t : ($ ? a ? re : ee : a ? Ii : Ni)(l);
                            return Mn(h || l, (function(d, t) {
                                h && (d = l[t = d]), dd(i, t, $d(d, n, u, t, l, r))
                            })), i
                        }

                        function cd(l, n, u) {
                            var d = u.length;
                            if (null == l) return !d;
                            for (l = Al(l); d--;) {
                                var e = u[d],
                                    r = n[e],
                                    i = l[e];
                                if (i === t && !(e in l) || !r(i)) return !1
                            }
                            return !0
                        }

                        function sd(l, n, u) {
                            if ("function" != typeof l) throw new Pl(e);
                            return Ne((function() {
                                l.apply(t, u)
                            }), n)
                        }

                        function fd(l, n, u, d) {
                            var t = -1,
                                e = Tn,
                                r = !0,
                                i = l.length,
                                o = [],
                                a = n.length;
                            if (!i) return o;
                            u && (n = In(n, Qn(u))), d ? (e = Nn, r = !1) : n.length >= 200 && (e = lu, r = !1, n = new Xu(n));
                            l: for (; ++t < i;) {
                                var $ = l[t],
                                    c = null == u ? $ : u($);
                                if ($ = d || 0 !== $ ? $ : 0, r && c === c) {
                                    for (var s = a; s--;)
                                        if (n[s] === c) continue l;
                                    o.push($)
                                } else e(n, c, d) || o.push($)
                            }
                            return o
                        }
                        Gu.templateSettings = {
                            escape: Q,
                            evaluate: q,
                            interpolate: ll,
                            variable: "",
                            imports: {
                                _: Gu
                            }
                        }, Gu.prototype = Vu.prototype, Gu.prototype.constructor = Gu, Hu.prototype = Uu(Vu.prototype), Hu.prototype.constructor = Hu, Wu.prototype = Uu(Vu.prototype), Wu.prototype.constructor = Wu, Ku.prototype.clear = function() {
                            this.__data__ = Fu ? Fu(null) : {}, this.size = 0
                        }, Ku.prototype.delete = function(l) {
                            var n = this.has(l) && delete this.__data__[l];
                            return this.size -= n ? 1 : 0, n
                        }, Ku.prototype.get = function(l) {
                            var n = this.__data__;
                            if (Fu) {
                                var u = n[l];
                                return u === r ? t : u
                            }
                            return kl.call(n, l) ? n[l] : t
                        }, Ku.prototype.has = function(l) {
                            var n = this.__data__;
                            return Fu ? n[l] !== t : kl.call(n, l)
                        }, Ku.prototype.set = function(l, n) {
                            var u = this.__data__;
                            return this.size += this.has(l) ? 0 : 1, u[l] = Fu && n === t ? r : n, this
                        }, Yu.prototype.clear = function() {
                            this.__data__ = [], this.size = 0
                        }, Yu.prototype.delete = function(l) {
                            var n = this.__data__,
                                u = td(n, l);
                            return !(u < 0) && (u == n.length - 1 ? n.pop() : Xl.call(n, u, 1), --this.size, !0)
                        }, Yu.prototype.get = function(l) {
                            var n = this.__data__,
                                u = td(n, l);
                            return u < 0 ? t : n[u][1]
                        }, Yu.prototype.has = function(l) {
                            return td(this.__data__, l) > -1
                        }, Yu.prototype.set = function(l, n) {
                            var u = this.__data__,
                                d = td(u, l);
                            return d < 0 ? (++this.size, u.push([l, n])) : u[d][1] = n, this
                        }, zu.prototype.clear = function() {
                            this.size = 0, this.__data__ = {
                                hash: new Ku,
                                map: new(Au || Yu),
                                string: new Ku
                            }
                        }, zu.prototype.delete = function(l) {
                            var n = ce(this, l).delete(l);
                            return this.size -= n ? 1 : 0, n
                        }, zu.prototype.get = function(l) {
                            return ce(this, l).get(l)
                        }, zu.prototype.has = function(l) {
                            return ce(this, l).has(l)
                        }, zu.prototype.set = function(l, n) {
                            var u = ce(this, l),
                                d = u.size;
                            return u.set(l, n), this.size += u.size == d ? 0 : 1, this
                        }, Xu.prototype.add = Xu.prototype.push = function(l) {
                            return this.__data__.set(l, r), this
                        }, Xu.prototype.has = function(l) {
                            return this.__data__.has(l)
                        }, Ju.prototype.clear = function() {
                            this.__data__ = new Yu, this.size = 0
                        }, Ju.prototype.delete = function(l) {
                            var n = this.__data__,
                                u = n.delete(l);
                            return this.size = n.size, u
                        }, Ju.prototype.get = function(l) {
                            return this.__data__.get(l)
                        }, Ju.prototype.has = function(l) {
                            return this.__data__.has(l)
                        }, Ju.prototype.set = function(l, n) {
                            var u = this.__data__;
                            if (u instanceof Yu) {
                                var d = u.__data__;
                                if (!Au || d.length < 199) return d.push([l, n]), this.size = ++u.size, this;
                                u = this.__data__ = new zu(d)
                            }
                            return u.set(l, n), this.size = u.size, this
                        };
                        var pd = Rt(_d),
                            hd = Rt(Cd, !0);

                        function vd(l, n) {
                            var u = !0;
                            return pd(l, (function(l, d, t) {
                                return u = !!n(l, d, t)
                            })), u
                        }

                        function md(l, n, u) {
                            for (var d = -1, e = l.length; ++d < e;) {
                                var r = l[d],
                                    i = n(r);
                                if (null != i && (o === t ? i === i && !$i(i) : u(i, o))) var o = i,
                                    a = r
                            }
                            return a
                        }

                        function gd(l, n) {
                            var u = [];
                            return pd(l, (function(l, d, t) {
                                n(l, d, t) && u.push(l)
                            })), u
                        }

                        function yd(l, n, u, d, t) {
                            var e = -1,
                                r = l.length;
                            for (u || (u = ye), t || (t = []); ++e < r;) {
                                var i = l[e];
                                n > 0 && u(i) ? n > 1 ? yd(i, n - 1, u, d, t) : Rn(t, i) : d || (t[t.length] = i)
                            }
                            return t
                        }
                        var bd = kt(),
                            wd = kt(!0);

                        function _d(l, n) {
                            return l && bd(l, n, Ni)
                        }

                        function Cd(l, n) {
                            return l && wd(l, n, Ni)
                        }

                        function Ed(l, n) {
                            return Fn(n, (function(n) {
                                return qr(l[n])
                            }))
                        }

                        function xd(l, n) {
                            for (var u = 0, d = (n = wt(n, l)).length; null != l && u < d;) l = l[Ze(n[u++])];
                            return u && u == d ? l : t
                        }

                        function Sd(l, n, u) {
                            var d = n(l);
                            return Wr(l) ? d : Rn(d, u(l))
                        }

                        function Ad(l) {
                            return null == l ? l === t ? "[object Undefined]" : "[object Null]" : un && un in Al(l) ? function(l) {
                                var n = kl.call(l, un),
                                    u = l[un];
                                try {
                                    l[un] = t;
                                    var d = !0
                                } catch (l) {}
                                var e = Zl.call(l);
                                d && (n ? l[un] = u : delete l[un]);
                                return e
                            }(l) : function(l) {
                                return Zl.call(l)
                            }(l)
                        }

                        function Md(l, n) {
                            return l > n
                        }

                        function Od(l, n) {
                            return null != l && kl.call(l, n)
                        }

                        function Pd(l, n) {
                            return null != l && n in Al(l)
                        }

                        function Fd(l, n, u) {
                            for (var e = u ? Nn : Tn, r = l[0].length, i = l.length, o = i, a = d(i), $ = 1 / 0, c = []; o--;) {
                                var s = l[o];
                                o && n && (s = In(s, Qn(n))), $ = wu(s.length, $), a[o] = !u && (n || r >= 120 && s.length >= 120) ? new Xu(o && s) : t
                            }
                            s = l[0];
                            var f = -1,
                                p = a[0];
                            l: for (; ++f < r && c.length < $;) {
                                var h = s[f],
                                    v = n ? n(h) : h;
                                if (h = u || 0 !== h ? h : 0, !(p ? lu(p, v) : e(c, v, u))) {
                                    for (o = i; --o;) {
                                        var m = a[o];
                                        if (!(m ? lu(m, v) : e(l[o], v, u))) continue l
                                    }
                                    p && p.push(v), c.push(h)
                                }
                            }
                            return c
                        }

                        function Td(l, n, u) {
                            var d = null == (l = Oe(l, n = wt(n, l))) ? l : l[Ze(Qe(n))];
                            return null == d ? t : Sn(d, l, u)
                        }

                        function Nd(l) {
                            return di(l) && Ad(l) == g
                        }

                        function Id(l, n, u, d, e) {
                            return l === n || (null == l || null == n || !di(l) && !di(n) ? l !== l && n !== n : function(l, n, u, d, e, r) {
                                var i = Wr(l),
                                    o = Wr(n),
                                    a = i ? y : ve(l),
                                    $ = o ? y : ve(n),
                                    c = (a = a == g ? A : a) == A,
                                    s = ($ = $ == g ? A : $) == A,
                                    f = a == $;
                                if (f && Xr(l)) {
                                    if (!Xr(n)) return !1;
                                    i = !0, c = !1
                                }
                                if (f && !c) return r || (r = new Ju), i || ci(l) ? de(l, n, u, d, e, r) : function(l, n, u, d, t, e, r) {
                                    switch (u) {
                                        case R:
                                            if (l.byteLength != n.byteLength || l.byteOffset != n.byteOffset) return !1;
                                            l = l.buffer, n = n.buffer;
                                        case I:
                                            return !(l.byteLength != n.byteLength || !e(new Hl(l), new Hl(n)));
                                        case b:
                                        case w:
                                        case S:
                                            return Gr(+l, +n);
                                        case _:
                                            return l.name == n.name && l.message == n.message;
                                        case O:
                                        case F:
                                            return l == n + "";
                                        case x:
                                            var i = ou;
                                        case P:
                                            var o = 1 & d;
                                            if (i || (i = cu), l.size != n.size && !o) return !1;
                                            var a = r.get(l);
                                            if (a) return a == n;
                                            d |= 2, r.set(l, n);
                                            var $ = de(i(l), i(n), d, t, e, r);
                                            return r.delete(l), $;
                                        case T:
                                            if (Bu) return Bu.call(l) == Bu.call(n)
                                    }
                                    return !1
                                }(l, n, a, u, d, e, r);
                                if (!(1 & u)) {
                                    var p = c && kl.call(l, "__wrapped__"),
                                        h = s && kl.call(n, "__wrapped__");
                                    if (p || h) {
                                        var v = p ? l.value() : l,
                                            m = h ? n.value() : n;
                                        return r || (r = new Ju), e(v, m, u, d, r)
                                    }
                                }
                                if (!f) return !1;
                                return r || (r = new Ju),
                                    function(l, n, u, d, e, r) {
                                        var i = 1 & u,
                                            o = ee(l),
                                            a = o.length,
                                            $ = ee(n).length;
                                        if (a != $ && !i) return !1;
                                        var c = a;
                                        for (; c--;) {
                                            var s = o[c];
                                            if (!(i ? s in n : kl.call(n, s))) return !1
                                        }
                                        var f = r.get(l),
                                            p = r.get(n);
                                        if (f && p) return f == n && p == l;
                                        var h = !0;
                                        r.set(l, n), r.set(n, l);
                                        var v = i;
                                        for (; ++c < a;) {
                                            var m = l[s = o[c]],
                                                g = n[s];
                                            if (d) var y = i ? d(g, m, s, n, l, r) : d(m, g, s, l, n, r);
                                            if (!(y === t ? m === g || e(m, g, u, d, r) : y)) {
                                                h = !1;
                                                break
                                            }
                                            v || (v = "constructor" == s)
                                        }
                                        if (h && !v) {
                                            var b = l.constructor,
                                                w = n.constructor;
                                            b == w || !("constructor" in l) || !("constructor" in n) || "function" == typeof b && b instanceof b && "function" == typeof w && w instanceof w || (h = !1)
                                        }
                                        return r.delete(l), r.delete(n), h
                                    }(l, n, u, d, e, r)
                            }(l, n, u, d, Id, e))
                        }

                        function Rd(l, n, u, d) {
                            var e = u.length,
                                r = e,
                                i = !d;
                            if (null == l) return !r;
                            for (l = Al(l); e--;) {
                                var o = u[e];
                                if (i && o[2] ? o[1] !== l[o[0]] : !(o[0] in l)) return !1
                            }
                            for (; ++e < r;) {
                                var a = (o = u[e])[0],
                                    $ = l[a],
                                    c = o[1];
                                if (i && o[2]) {
                                    if ($ === t && !(a in l)) return !1
                                } else {
                                    var s = new Ju;
                                    if (d) var f = d($, c, a, l, n, s);
                                    if (!(f === t ? Id(c, $, 3, d, s) : f)) return !1
                                }
                            }
                            return !0
                        }

                        function kd(l) {
                            return !(!ui(l) || (n = l, Ll && Ll in n)) && (qr(l) ? Gl : gl).test(Be(l));
                            var n
                        }

                        function Dd(l) {
                            return "function" == typeof l ? l : null == l ? ro : "object" == typeof l ? Wr(l) ? Ud(l[0], l[1]) : Gd(l) : ho(l)
                        }

                        function Ld(l) {
                            if (!xe(l)) return yu(l);
                            var n = [];
                            for (var u in Al(l)) kl.call(l, u) && "constructor" != u && n.push(u);
                            return n
                        }

                        function Zd(l) {
                            if (!ui(l)) return function(l) {
                                var n = [];
                                if (null != l)
                                    for (var u in Al(l)) n.push(u);
                                return n
                            }(l);
                            var n = xe(l),
                                u = [];
                            for (var d in l)("constructor" != d || !n && kl.call(l, d)) && u.push(d);
                            return u
                        }

                        function Bd(l, n) {
                            return l < n
                        }

                        function jd(l, n) {
                            var u = -1,
                                t = Yr(l) ? d(l.length) : [];
                            return pd(l, (function(l, d, e) {
                                t[++u] = n(l, d, e)
                            })), t
                        }

                        function Gd(l) {
                            var n = se(l);
                            return 1 == n.length && n[0][2] ? Ae(n[0][0], n[0][1]) : function(u) {
                                return u === l || Rd(u, l, n)
                            }
                        }

                        function Ud(l, n) {
                            return _e(l) && Se(n) ? Ae(Ze(l), n) : function(u) {
                                var d = Mi(u, l);
                                return d === t && d === n ? Oi(u, l) : Id(n, d, 3)
                            }
                        }

                        function Vd(l, n, u, d, e) {
                            l !== n && bd(n, (function(r, i) {
                                if (e || (e = new Ju), ui(r)) ! function(l, n, u, d, e, r, i) {
                                    var o = Fe(l, u),
                                        a = Fe(n, u),
                                        $ = i.get(a);
                                    if ($) return void ud(l, u, $);
                                    var c = r ? r(o, a, u + "", l, n, i) : t,
                                        s = c === t;
                                    if (s) {
                                        var f = Wr(a),
                                            p = !f && Xr(a),
                                            h = !f && !p && ci(a);
                                        c = a, f || p || h ? Wr(o) ? c = o : zr(o) ? c = Ft(o) : p ? (s = !1, c = xt(a, !0)) : h ? (s = !1, c = At(a, !0)) : c = [] : ri(a) || Hr(a) ? (c = o, Hr(o) ? c = yi(o) : ui(o) && !qr(o) || (c = ge(a))) : s = !1
                                    }
                                    s && (i.set(a, c), e(c, a, d, r, i), i.delete(a));
                                    ud(l, u, c)
                                }(l, n, i, u, Vd, d, e);
                                else {
                                    var o = d ? d(Fe(l, i), r, i + "", l, n, e) : t;
                                    o === t && (o = r), ud(l, i, o)
                                }
                            }), Ii)
                        }

                        function Hd(l, n) {
                            var u = l.length;
                            if (u) return be(n += n < 0 ? u : 0, u) ? l[n] : t
                        }

                        function Wd(l, n, u) {
                            n = n.length ? In(n, (function(l) {
                                return Wr(l) ? function(n) {
                                    return xd(n, 1 === l.length ? l[0] : l)
                                } : l
                            })) : [ro];
                            var d = -1;
                            n = In(n, Qn($e()));
                            var t = jd(l, (function(l, u, t) {
                                var e = In(n, (function(n) {
                                    return n(l)
                                }));
                                return {
                                    criteria: e,
                                    index: ++d,
                                    value: l
                                }
                            }));
                            return function(l, n) {
                                var u = l.length;
                                for (l.sort(n); u--;) l[u] = l[u].value;
                                return l
                            }(t, (function(l, n) {
                                return function(l, n, u) {
                                    var d = -1,
                                        t = l.criteria,
                                        e = n.criteria,
                                        r = t.length,
                                        i = u.length;
                                    for (; ++d < r;) {
                                        var o = Mt(t[d], e[d]);
                                        if (o) return d >= i ? o : o * ("desc" == u[d] ? -1 : 1)
                                    }
                                    return l.index - n.index
                                }(l, n, u)
                            }))
                        }

                        function Kd(l, n, u) {
                            for (var d = -1, t = n.length, e = {}; ++d < t;) {
                                var r = n[d],
                                    i = xd(l, r);
                                u(i, r) && nt(e, wt(r, l), i)
                            }
                            return e
                        }

                        function Yd(l, n, u, d) {
                            var t = d ? Un : Gn,
                                e = -1,
                                r = n.length,
                                i = l;
                            for (l === n && (n = Ft(n)), u && (i = In(l, Qn(u))); ++e < r;)
                                for (var o = 0, a = n[e], $ = u ? u(a) : a;
                                    (o = t(i, $, o, d)) > -1;) i !== l && Xl.call(i, o, 1), Xl.call(l, o, 1);
                            return l
                        }

                        function zd(l, n) {
                            for (var u = l ? n.length : 0, d = u - 1; u--;) {
                                var t = n[u];
                                if (u == d || t !== e) {
                                    var e = t;
                                    be(t) ? Xl.call(l, t, 1) : ft(l, t)
                                }
                            }
                            return l
                        }

                        function Xd(l, n) {
                            return l + gn(Eu() * (n - l + 1))
                        }

                        function Jd(l, n) {
                            var u = "";
                            if (!l || n < 1 || n > p) return u;
                            do {
                                n % 2 && (u += l), (n = gn(n / 2)) && (l += l)
                            } while (n);
                            return u
                        }

                        function Qd(l, n) {
                            return Ie(Me(l, n, ro), l + "")
                        }

                        function qd(l) {
                            return qu(Gi(l))
                        }

                        function lt(l, n) {
                            var u = Gi(l);
                            return De(u, ad(n, 0, u.length))
                        }

                        function nt(l, n, u, d) {
                            if (!ui(l)) return l;
                            for (var e = -1, r = (n = wt(n, l)).length, i = r - 1, o = l; null != o && ++e < r;) {
                                var a = Ze(n[e]),
                                    $ = u;
                                if ("__proto__" === a || "constructor" === a || "prototype" === a) return l;
                                if (e != i) {
                                    var c = o[a];
                                    ($ = d ? d(c, a, o) : t) === t && ($ = ui(c) ? c : be(n[e + 1]) ? [] : {})
                                }
                                dd(o, a, $), o = o[a]
                            }
                            return l
                        }
                        var ut = Tu ? function(l, n) {
                                return Tu.set(l, n), l
                            } : ro,
                            dt = an ? function(l, n) {
                                return an(l, "toString", {
                                    configurable: !0,
                                    enumerable: !1,
                                    value: uo(n),
                                    writable: !0
                                })
                            } : ro;

                        function tt(l) {
                            return De(Gi(l))
                        }

                        function et(l, n, u) {
                            var t = -1,
                                e = l.length;
                            n < 0 && (n = -n > e ? 0 : e + n), (u = u > e ? e : u) < 0 && (u += e), e = n > u ? 0 : u - n >>> 0, n >>>= 0;
                            for (var r = d(e); ++t < e;) r[t] = l[t + n];
                            return r
                        }

                        function rt(l, n) {
                            var u;
                            return pd(l, (function(l, d, t) {
                                return !(u = n(l, d, t))
                            })), !!u
                        }

                        function it(l, n, u) {
                            var d = 0,
                                t = null == l ? d : l.length;
                            if ("number" == typeof n && n === n && t <= 2147483647) {
                                for (; d < t;) {
                                    var e = d + t >>> 1,
                                        r = l[e];
                                    null !== r && !$i(r) && (u ? r <= n : r < n) ? d = e + 1 : t = e
                                }
                                return t
                            }
                            return ot(l, n, ro, u)
                        }

                        function ot(l, n, u, d) {
                            var e = 0,
                                r = null == l ? 0 : l.length;
                            if (0 === r) return 0;
                            for (var i = (n = u(n)) !== n, o = null === n, a = $i(n), $ = n === t; e < r;) {
                                var c = gn((e + r) / 2),
                                    s = u(l[c]),
                                    f = s !== t,
                                    p = null === s,
                                    h = s === s,
                                    v = $i(s);
                                if (i) var m = d || h;
                                else m = $ ? h && (d || f) : o ? h && f && (d || !p) : a ? h && f && !p && (d || !v) : !p && !v && (d ? s <= n : s < n);
                                m ? e = c + 1 : r = c
                            }
                            return wu(r, 4294967294)
                        }

                        function at(l, n) {
                            for (var u = -1, d = l.length, t = 0, e = []; ++u < d;) {
                                var r = l[u],
                                    i = n ? n(r) : r;
                                if (!u || !Gr(i, o)) {
                                    var o = i;
                                    e[t++] = 0 === r ? 0 : r
                                }
                            }
                            return e
                        }

                        function $t(l) {
                            return "number" == typeof l ? l : $i(l) ? h : +l
                        }

                        function ct(l) {
                            if ("string" == typeof l) return l;
                            if (Wr(l)) return In(l, ct) + "";
                            if ($i(l)) return ju ? ju.call(l) : "";
                            var n = l + "";
                            return "0" == n && 1 / l == -1 / 0 ? "-0" : n
                        }

                        function st(l, n, u) {
                            var d = -1,
                                t = Tn,
                                e = l.length,
                                r = !0,
                                i = [],
                                o = i;
                            if (u) r = !1, t = Nn;
                            else if (e >= 200) {
                                var a = n ? null : Jt(l);
                                if (a) return cu(a);
                                r = !1, t = lu, o = new Xu
                            } else o = n ? [] : i;
                            l: for (; ++d < e;) {
                                var $ = l[d],
                                    c = n ? n($) : $;
                                if ($ = u || 0 !== $ ? $ : 0, r && c === c) {
                                    for (var s = o.length; s--;)
                                        if (o[s] === c) continue l;
                                    n && o.push(c), i.push($)
                                } else t(o, c, u) || (o !== i && o.push(c), i.push($))
                            }
                            return i
                        }

                        function ft(l, n) {
                            return null == (l = Oe(l, n = wt(n, l))) || delete l[Ze(Qe(n))]
                        }

                        function pt(l, n, u, d) {
                            return nt(l, n, u(xd(l, n)), d)
                        }

                        function ht(l, n, u, d) {
                            for (var t = l.length, e = d ? t : -1;
                                (d ? e-- : ++e < t) && n(l[e], e, l););
                            return u ? et(l, d ? 0 : e, d ? e + 1 : t) : et(l, d ? e + 1 : 0, d ? t : e)
                        }

                        function vt(l, n) {
                            var u = l;
                            return u instanceof Wu && (u = u.value()), kn(n, (function(l, n) {
                                return n.func.apply(n.thisArg, Rn([l], n.args))
                            }), u)
                        }

                        function mt(l, n, u) {
                            var t = l.length;
                            if (t < 2) return t ? st(l[0]) : [];
                            for (var e = -1, r = d(t); ++e < t;)
                                for (var i = l[e], o = -1; ++o < t;) o != e && (r[e] = fd(r[e] || i, l[o], n, u));
                            return st(yd(r, 1), n, u)
                        }

                        function gt(l, n, u) {
                            for (var d = -1, e = l.length, r = n.length, i = {}; ++d < e;) {
                                var o = d < r ? n[d] : t;
                                u(i, l[d], o)
                            }
                            return i
                        }

                        function yt(l) {
                            return zr(l) ? l : []
                        }

                        function bt(l) {
                            return "function" == typeof l ? l : ro
                        }

                        function wt(l, n) {
                            return Wr(l) ? l : _e(l, n) ? [l] : Le(bi(l))
                        }
                        var _t = Qd;

                        function Ct(l, n, u) {
                            var d = l.length;
                            return u = u === t ? d : u, !n && u >= d ? l : et(l, n, u)
                        }
                        var Et = sn || function(l) {
                            return pn.clearTimeout(l)
                        };

                        function xt(l, n) {
                            if (n) return l.slice();
                            var u = l.length,
                                d = Wl ? Wl(u) : new l.constructor(u);
                            return l.copy(d), d
                        }

                        function St(l) {
                            var n = new l.constructor(l.byteLength);
                            return new Hl(n).set(new Hl(l)), n
                        }

                        function At(l, n) {
                            var u = n ? St(l.buffer) : l.buffer;
                            return new l.constructor(u, l.byteOffset, l.length)
                        }

                        function Mt(l, n) {
                            if (l !== n) {
                                var u = l !== t,
                                    d = null === l,
                                    e = l === l,
                                    r = $i(l),
                                    i = n !== t,
                                    o = null === n,
                                    a = n === n,
                                    $ = $i(n);
                                if (!o && !$ && !r && l > n || r && i && a && !o && !$ || d && i && a || !u && a || !e) return 1;
                                if (!d && !r && !$ && l < n || $ && u && e && !d && !r || o && u && e || !i && e || !a) return -1
                            }
                            return 0
                        }

                        function Ot(l, n, u, t) {
                            for (var e = -1, r = l.length, i = u.length, o = -1, a = n.length, $ = bu(r - i, 0), c = d(a + $), s = !t; ++o < a;) c[o] = n[o];
                            for (; ++e < i;)(s || e < r) && (c[u[e]] = l[e]);
                            for (; $--;) c[o++] = l[e++];
                            return c
                        }

                        function Pt(l, n, u, t) {
                            for (var e = -1, r = l.length, i = -1, o = u.length, a = -1, $ = n.length, c = bu(r - o, 0), s = d(c + $), f = !t; ++e < c;) s[e] = l[e];
                            for (var p = e; ++a < $;) s[p + a] = n[a];
                            for (; ++i < o;)(f || e < r) && (s[p + u[i]] = l[e++]);
                            return s
                        }

                        function Ft(l, n) {
                            var u = -1,
                                t = l.length;
                            for (n || (n = d(t)); ++u < t;) n[u] = l[u];
                            return n
                        }

                        function Tt(l, n, u, d) {
                            var e = !u;
                            u || (u = {});
                            for (var r = -1, i = n.length; ++r < i;) {
                                var o = n[r],
                                    a = d ? d(u[o], l[o], o, u, l) : t;
                                a === t && (a = l[o]), e ? id(u, o, a) : dd(u, o, a)
                            }
                            return u
                        }

                        function Nt(l, n) {
                            return function(u, d) {
                                var t = Wr(u) ? An : ed,
                                    e = n ? n() : {};
                                return t(u, l, $e(d, 2), e)
                            }
                        }

                        function It(l) {
                            return Qd((function(n, u) {
                                var d = -1,
                                    e = u.length,
                                    r = e > 1 ? u[e - 1] : t,
                                    i = e > 2 ? u[2] : t;
                                for (r = l.length > 3 && "function" == typeof r ? (e--, r) : t, i && we(u[0], u[1], i) && (r = e < 3 ? t : r, e = 1), n = Al(n); ++d < e;) {
                                    var o = u[d];
                                    o && l(n, o, d, r)
                                }
                                return n
                            }))
                        }

                        function Rt(l, n) {
                            return function(u, d) {
                                if (null == u) return u;
                                if (!Yr(u)) return l(u, d);
                                for (var t = u.length, e = n ? t : -1, r = Al(u);
                                    (n ? e-- : ++e < t) && !1 !== d(r[e], e, r););
                                return u
                            }
                        }

                        function kt(l) {
                            return function(n, u, d) {
                                for (var t = -1, e = Al(n), r = d(n), i = r.length; i--;) {
                                    var o = r[l ? i : ++t];
                                    if (!1 === u(e[o], o, e)) break
                                }
                                return n
                            }
                        }

                        function Dt(l) {
                            return function(n) {
                                var u = iu(n = bi(n)) ? pu(n) : t,
                                    d = u ? u[0] : n.charAt(0),
                                    e = u ? Ct(u, 1).join("") : n.slice(1);
                                return d[l]() + e
                            }
                        }

                        function Lt(l) {
                            return function(n) {
                                return kn(qi(Hi(n).replace(Ql, "")), l, "")
                            }
                        }

                        function Zt(l) {
                            return function() {
                                var n = arguments;
                                switch (n.length) {
                                    case 0:
                                        return new l;
                                    case 1:
                                        return new l(n[0]);
                                    case 2:
                                        return new l(n[0], n[1]);
                                    case 3:
                                        return new l(n[0], n[1], n[2]);
                                    case 4:
                                        return new l(n[0], n[1], n[2], n[3]);
                                    case 5:
                                        return new l(n[0], n[1], n[2], n[3], n[4]);
                                    case 6:
                                        return new l(n[0], n[1], n[2], n[3], n[4], n[5]);
                                    case 7:
                                        return new l(n[0], n[1], n[2], n[3], n[4], n[5], n[6])
                                }
                                var u = Uu(l.prototype),
                                    d = l.apply(u, n);
                                return ui(d) ? d : u
                            }
                        }

                        function Bt(l) {
                            return function(n, u, d) {
                                var e = Al(n);
                                if (!Yr(n)) {
                                    var r = $e(u, 3);
                                    n = Ni(n), u = function(l) {
                                        return r(e[l], l, e)
                                    }
                                }
                                var i = l(n, u, d);
                                return i > -1 ? e[r ? n[i] : i] : t
                            }
                        }

                        function jt(l) {
                            return te((function(n) {
                                var u = n.length,
                                    d = u,
                                    r = Hu.prototype.thru;
                                for (l && n.reverse(); d--;) {
                                    var i = n[d];
                                    if ("function" != typeof i) throw new Pl(e);
                                    if (r && !o && "wrapper" == oe(i)) var o = new Hu([], !0)
                                }
                                for (d = o ? d : u; ++d < u;) {
                                    var a = oe(i = n[d]),
                                        $ = "wrapper" == a ? ie(i) : t;
                                    o = $ && Ce($[0]) && 424 == $[1] && !$[4].length && 1 == $[9] ? o[oe($[0])].apply(o, $[3]) : 1 == i.length && Ce(i) ? o[a]() : o.thru(i)
                                }
                                return function() {
                                    var l = arguments,
                                        d = l[0];
                                    if (o && 1 == l.length && Wr(d)) return o.plant(d).value();
                                    for (var t = 0, e = u ? n[t].apply(this, l) : d; ++t < u;) e = n[t].call(this, e);
                                    return e
                                }
                            }))
                        }

                        function Gt(l, n, u, e, r, i, o, a, $, s) {
                            var f = n & c,
                                p = 1 & n,
                                h = 2 & n,
                                v = 24 & n,
                                m = 512 & n,
                                g = h ? t : Zt(l);
                            return function t() {
                                for (var c = arguments.length, y = d(c), b = c; b--;) y[b] = arguments[b];
                                if (v) var w = ae(t),
                                    _ = du(y, w);
                                if (e && (y = Ot(y, e, r, v)), i && (y = Pt(y, i, o, v)), c -= _, v && c < s) {
                                    var C = $u(y, w);
                                    return zt(l, n, Gt, t.placeholder, u, y, C, a, $, s - c)
                                }
                                var E = p ? u : this,
                                    x = h ? E[l] : l;
                                return c = y.length, a ? y = Pe(y, a) : m && c > 1 && y.reverse(), f && $ < c && (y.length = $), this && this !== pn && this instanceof t && (x = g || Zt(x)), x.apply(E, y)
                            }
                        }

                        function Ut(l, n) {
                            return function(u, d) {
                                return function(l, n, u, d) {
                                    return _d(l, (function(l, t, e) {
                                        n(d, u(l), t, e)
                                    })), d
                                }(u, l, n(d), {})
                            }
                        }

                        function Vt(l, n) {
                            return function(u, d) {
                                var e;
                                if (u === t && d === t) return n;
                                if (u !== t && (e = u), d !== t) {
                                    if (e === t) return d;
                                    "string" == typeof u || "string" == typeof d ? (u = ct(u), d = ct(d)) : (u = $t(u), d = $t(d)), e = l(u, d)
                                }
                                return e
                            }
                        }

                        function Ht(l) {
                            return te((function(n) {
                                return n = In(n, Qn($e())), Qd((function(u) {
                                    var d = this;
                                    return l(n, (function(l) {
                                        return Sn(l, d, u)
                                    }))
                                }))
                            }))
                        }

                        function Wt(l, n) {
                            var u = (n = n === t ? " " : ct(n)).length;
                            if (u < 2) return u ? Jd(n, l) : n;
                            var d = Jd(n, vn(l / fu(n)));
                            return iu(n) ? Ct(pu(d), 0, l).join("") : d.slice(0, l)
                        }

                        function Kt(l) {
                            return function(n, u, e) {
                                return e && "number" != typeof e && we(n, u, e) && (u = e = t), n = hi(n), u === t ? (u = n, n = 0) : u = hi(u),
                                    function(l, n, u, t) {
                                        for (var e = -1, r = bu(vn((n - l) / (u || 1)), 0), i = d(r); r--;) i[t ? r : ++e] = l, l += u;
                                        return i
                                    }(n, u, e = e === t ? n < u ? 1 : -1 : hi(e), l)
                            }
                        }

                        function Yt(l) {
                            return function(n, u) {
                                return "string" == typeof n && "string" == typeof u || (n = gi(n), u = gi(u)), l(n, u)
                            }
                        }

                        function zt(l, n, u, d, e, r, i, o, c, s) {
                            var f = 8 & n;
                            n |= f ? a : $, 4 & (n &= ~(f ? $ : a)) || (n &= -4);
                            var p = [l, n, e, f ? r : t, f ? i : t, f ? t : r, f ? t : i, o, c, s],
                                h = u.apply(t, p);
                            return Ce(l) && Te(h, p), h.placeholder = d, Re(h, l, n)
                        }

                        function Xt(l) {
                            var n = Sl[l];
                            return function(l, u) {
                                if (l = gi(l), (u = null == u ? 0 : wu(vi(u), 292)) && Kn(l)) {
                                    var d = (bi(l) + "e").split("e");
                                    return +((d = (bi(n(d[0] + "e" + (+d[1] + u))) + "e").split("e"))[0] + "e" + (+d[1] - u))
                                }
                                return n(l)
                            }
                        }
                        var Jt = Ou && 1 / cu(new Ou([, -0]))[1] == f ? function(l) {
                            return new Ou(l)
                        } : co;

                        function Qt(l) {
                            return function(n) {
                                var u = ve(n);
                                return u == x ? ou(n) : u == P ? su(n) : function(l, n) {
                                    return In(n, (function(n) {
                                        return [n, l[n]]
                                    }))
                                }(n, l(n))
                            }
                        }

                        function qt(l, n, u, r, f, p, h, v) {
                            var m = 2 & n;
                            if (!m && "function" != typeof l) throw new Pl(e);
                            var g = r ? r.length : 0;
                            if (g || (n &= -97, r = f = t), h = h === t ? h : bu(vi(h), 0), v = v === t ? v : vi(v), g -= f ? f.length : 0, n & $) {
                                var y = r,
                                    b = f;
                                r = f = t
                            }
                            var w = m ? t : ie(l),
                                _ = [l, n, u, r, f, y, b, p, h, v];
                            if (w && function(l, n) {
                                    var u = l[1],
                                        d = n[1],
                                        t = u | d,
                                        e = t < 131,
                                        r = d == c && 8 == u || d == c && u == s && l[7].length <= n[8] || 384 == d && n[7].length <= n[8] && 8 == u;
                                    if (!e && !r) return l;
                                    1 & d && (l[2] = n[2], t |= 1 & u ? 0 : 4);
                                    var o = n[3];
                                    if (o) {
                                        var a = l[3];
                                        l[3] = a ? Ot(a, o, n[4]) : o, l[4] = a ? $u(l[3], i) : n[4]
                                    }(o = n[5]) && (a = l[5], l[5] = a ? Pt(a, o, n[6]) : o, l[6] = a ? $u(l[5], i) : n[6]);
                                    (o = n[7]) && (l[7] = o);
                                    d & c && (l[8] = null == l[8] ? n[8] : wu(l[8], n[8]));
                                    null == l[9] && (l[9] = n[9]);
                                    l[0] = n[0], l[1] = t
                                }(_, w), l = _[0], n = _[1], u = _[2], r = _[3], f = _[4], !(v = _[9] = _[9] === t ? m ? 0 : l.length : bu(_[9] - g, 0)) && 24 & n && (n &= -25), n && 1 != n) C = 8 == n || n == o ? function(l, n, u) {
                                var e = Zt(l);
                                return function r() {
                                    for (var i = arguments.length, o = d(i), a = i, $ = ae(r); a--;) o[a] = arguments[a];
                                    var c = i < 3 && o[0] !== $ && o[i - 1] !== $ ? [] : $u(o, $);
                                    return (i -= c.length) < u ? zt(l, n, Gt, r.placeholder, t, o, c, t, t, u - i) : Sn(this && this !== pn && this instanceof r ? e : l, this, o)
                                }
                            }(l, n, v) : n != a && 33 != n || f.length ? Gt.apply(t, _) : function(l, n, u, t) {
                                var e = 1 & n,
                                    r = Zt(l);
                                return function n() {
                                    for (var i = -1, o = arguments.length, a = -1, $ = t.length, c = d($ + o), s = this && this !== pn && this instanceof n ? r : l; ++a < $;) c[a] = t[a];
                                    for (; o--;) c[a++] = arguments[++i];
                                    return Sn(s, e ? u : this, c)
                                }
                            }(l, n, u, r);
                            else var C = function(l, n, u) {
                                var d = 1 & n,
                                    t = Zt(l);
                                return function n() {
                                    return (this && this !== pn && this instanceof n ? t : l).apply(d ? u : this, arguments)
                                }
                            }(l, n, u);
                            return Re((w ? ut : Te)(C, _), l, n)
                        }

                        function le(l, n, u, d) {
                            return l === t || Gr(l, Nl[u]) && !kl.call(d, u) ? n : l
                        }

                        function ne(l, n, u, d, e, r) {
                            return ui(l) && ui(n) && (r.set(n, l), Vd(l, n, t, ne, r), r.delete(n)), l
                        }

                        function ue(l) {
                            return ri(l) ? t : l
                        }

                        function de(l, n, u, d, e, r) {
                            var i = 1 & u,
                                o = l.length,
                                a = n.length;
                            if (o != a && !(i && a > o)) return !1;
                            var $ = r.get(l),
                                c = r.get(n);
                            if ($ && c) return $ == n && c == l;
                            var s = -1,
                                f = !0,
                                p = 2 & u ? new Xu : t;
                            for (r.set(l, n), r.set(n, l); ++s < o;) {
                                var h = l[s],
                                    v = n[s];
                                if (d) var m = i ? d(v, h, s, n, l, r) : d(h, v, s, l, n, r);
                                if (m !== t) {
                                    if (m) continue;
                                    f = !1;
                                    break
                                }
                                if (p) {
                                    if (!Ln(n, (function(l, n) {
                                            if (!lu(p, n) && (h === l || e(h, l, u, d, r))) return p.push(n)
                                        }))) {
                                        f = !1;
                                        break
                                    }
                                } else if (h !== v && !e(h, v, u, d, r)) {
                                    f = !1;
                                    break
                                }
                            }
                            return r.delete(l), r.delete(n), f
                        }

                        function te(l) {
                            return Ie(Me(l, t, Ke), l + "")
                        }

                        function ee(l) {
                            return Sd(l, Ni, pe)
                        }

                        function re(l) {
                            return Sd(l, Ii, he)
                        }
                        var ie = Tu ? function(l) {
                            return Tu.get(l)
                        } : co;

                        function oe(l) {
                            for (var n = l.name + "", u = Nu[n], d = kl.call(Nu, n) ? u.length : 0; d--;) {
                                var t = u[d],
                                    e = t.func;
                                if (null == e || e == l) return t.name
                            }
                            return n
                        }

                        function ae(l) {
                            return (kl.call(Gu, "placeholder") ? Gu : l).placeholder
                        }

                        function $e() {
                            var l = Gu.iteratee || io;
                            return l = l === io ? Dd : l, arguments.length ? l(arguments[0], arguments[1]) : l
                        }

                        function ce(l, n) {
                            var u, d, t = l.__data__;
                            return ("string" == (d = typeof(u = n)) || "number" == d || "symbol" == d || "boolean" == d ? "__proto__" !== u : null === u) ? t["string" == typeof n ? "string" : "hash"] : t.map
                        }

                        function se(l) {
                            for (var n = Ni(l), u = n.length; u--;) {
                                var d = n[u],
                                    t = l[d];
                                n[u] = [d, t, Se(t)]
                            }
                            return n
                        }

                        function fe(l, n) {
                            var u = function(l, n) {
                                return null == l ? t : l[n]
                            }(l, n);
                            return kd(u) ? u : t
                        }
                        var pe = yn ? function(l) {
                                return null == l ? [] : (l = Al(l), Fn(yn(l), (function(n) {
                                    return zl.call(l, n)
                                })))
                            } : go,
                            he = yn ? function(l) {
                                for (var n = []; l;) Rn(n, pe(l)), l = Kl(l);
                                return n
                            } : go,
                            ve = Ad;

                        function me(l, n, u) {
                            for (var d = -1, t = (n = wt(n, l)).length, e = !1; ++d < t;) {
                                var r = Ze(n[d]);
                                if (!(e = null != l && u(l, r))) break;
                                l = l[r]
                            }
                            return e || ++d != t ? e : !!(t = null == l ? 0 : l.length) && ni(t) && be(r, t) && (Wr(l) || Hr(l))
                        }

                        function ge(l) {
                            return "function" != typeof l.constructor || xe(l) ? {} : Uu(Kl(l))
                        }

                        function ye(l) {
                            return Wr(l) || Hr(l) || !!(Jl && l && l[Jl])
                        }

                        function be(l, n) {
                            var u = typeof l;
                            return !!(n = null == n ? p : n) && ("number" == u || "symbol" != u && bl.test(l)) && l > -1 && l % 1 == 0 && l < n
                        }

                        function we(l, n, u) {
                            if (!ui(u)) return !1;
                            var d = typeof n;
                            return !!("number" == d ? Yr(u) && be(n, u.length) : "string" == d && n in u) && Gr(u[n], l)
                        }

                        function _e(l, n) {
                            if (Wr(l)) return !1;
                            var u = typeof l;
                            return !("number" != u && "symbol" != u && "boolean" != u && null != l && !$i(l)) || (ul.test(l) || !nl.test(l) || null != n && l in Al(n))
                        }

                        function Ce(l) {
                            var n = oe(l),
                                u = Gu[n];
                            if ("function" != typeof u || !(n in Wu.prototype)) return !1;
                            if (l === u) return !0;
                            var d = ie(u);
                            return !!d && l === d[0]
                        }(Su && ve(new Su(new ArrayBuffer(1))) != R || Au && ve(new Au) != x || Mu && ve(Mu.resolve()) != M || Ou && ve(new Ou) != P || Pu && ve(new Pu) != N) && (ve = function(l) {
                            var n = Ad(l),
                                u = n == A ? l.constructor : t,
                                d = u ? Be(u) : "";
                            if (d) switch (d) {
                                case Iu:
                                    return R;
                                case Ru:
                                    return x;
                                case ku:
                                    return M;
                                case Du:
                                    return P;
                                case Lu:
                                    return N
                            }
                            return n
                        });
                        var Ee = Il ? qr : yo;

                        function xe(l) {
                            var n = l && l.constructor;
                            return l === ("function" == typeof n && n.prototype || Nl)
                        }

                        function Se(l) {
                            return l === l && !ui(l)
                        }

                        function Ae(l, n) {
                            return function(u) {
                                return null != u && (u[l] === n && (n !== t || l in Al(u)))
                            }
                        }

                        function Me(l, n, u) {
                            return n = bu(n === t ? l.length - 1 : n, 0),
                                function() {
                                    for (var t = arguments, e = -1, r = bu(t.length - n, 0), i = d(r); ++e < r;) i[e] = t[n + e];
                                    e = -1;
                                    for (var o = d(n + 1); ++e < n;) o[e] = t[e];
                                    return o[n] = u(i), Sn(l, this, o)
                                }
                        }

                        function Oe(l, n) {
                            return n.length < 2 ? l : xd(l, et(n, 0, -1))
                        }

                        function Pe(l, n) {
                            for (var u = l.length, d = wu(n.length, u), e = Ft(l); d--;) {
                                var r = n[d];
                                l[d] = be(r, u) ? e[r] : t
                            }
                            return l
                        }

                        function Fe(l, n) {
                            if (("constructor" !== n || "function" !== typeof l[n]) && "__proto__" != n) return l[n]
                        }
                        var Te = ke(ut),
                            Ne = hn || function(l, n) {
                                return pn.setTimeout(l, n)
                            },
                            Ie = ke(dt);

                        function Re(l, n, u) {
                            var d = n + "";
                            return Ie(l, function(l, n) {
                                var u = n.length;
                                if (!u) return l;
                                var d = u - 1;
                                return n[d] = (u > 1 ? "& " : "") + n[d], n = n.join(u > 2 ? ", " : " "), l.replace(ol, "{\n/* [wrapped with " + n + "] */\n")
                            }(d, function(l, n) {
                                return Mn(m, (function(u) {
                                    var d = "_." + u[0];
                                    n & u[1] && !Tn(l, d) && l.push(d)
                                })), l.sort()
                            }(function(l) {
                                var n = l.match(al);
                                return n ? n[1].split($l) : []
                            }(d), u)))
                        }

                        function ke(l) {
                            var n = 0,
                                u = 0;
                            return function() {
                                var d = _u(),
                                    e = 16 - (d - u);
                                if (u = d, e > 0) {
                                    if (++n >= 800) return arguments[0]
                                } else n = 0;
                                return l.apply(t, arguments)
                            }
                        }

                        function De(l, n) {
                            var u = -1,
                                d = l.length,
                                e = d - 1;
                            for (n = n === t ? d : n; ++u < n;) {
                                var r = Xd(u, e),
                                    i = l[r];
                                l[r] = l[u], l[u] = i
                            }
                            return l.length = n, l
                        }
                        var Le = function(l) {
                            var n = kr(l, (function(l) {
                                    return 500 === u.size && u.clear(), l
                                })),
                                u = n.cache;
                            return n
                        }((function(l) {
                            var n = [];
                            return 46 === l.charCodeAt(0) && n.push(""), l.replace(dl, (function(l, u, d, t) {
                                n.push(d ? t.replace(fl, "$1") : u || l)
                            })), n
                        }));

                        function Ze(l) {
                            if ("string" == typeof l || $i(l)) return l;
                            var n = l + "";
                            return "0" == n && 1 / l == -1 / 0 ? "-0" : n
                        }

                        function Be(l) {
                            if (null != l) {
                                try {
                                    return Rl.call(l)
                                } catch (l) {}
                                try {
                                    return l + ""
                                } catch (l) {}
                            }
                            return ""
                        }

                        function je(l) {
                            if (l instanceof Wu) return l.clone();
                            var n = new Hu(l.__wrapped__, l.__chain__);
                            return n.__actions__ = Ft(l.__actions__), n.__index__ = l.__index__, n.__values__ = l.__values__, n
                        }
                        var Ge = Qd((function(l, n) {
                                return zr(l) ? fd(l, yd(n, 1, zr, !0)) : []
                            })),
                            Ue = Qd((function(l, n) {
                                var u = Qe(n);
                                return zr(u) && (u = t), zr(l) ? fd(l, yd(n, 1, zr, !0), $e(u, 2)) : []
                            })),
                            Ve = Qd((function(l, n) {
                                var u = Qe(n);
                                return zr(u) && (u = t), zr(l) ? fd(l, yd(n, 1, zr, !0), t, u) : []
                            }));

                        function He(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            if (!d) return -1;
                            var t = null == u ? 0 : vi(u);
                            return t < 0 && (t = bu(d + t, 0)), jn(l, $e(n, 3), t)
                        }

                        function We(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            if (!d) return -1;
                            var e = d - 1;
                            return u !== t && (e = vi(u), e = u < 0 ? bu(d + e, 0) : wu(e, d - 1)), jn(l, $e(n, 3), e, !0)
                        }

                        function Ke(l) {
                            return (null == l ? 0 : l.length) ? yd(l, 1) : []
                        }

                        function Ye(l) {
                            return l && l.length ? l[0] : t
                        }
                        var ze = Qd((function(l) {
                                var n = In(l, yt);
                                return n.length && n[0] === l[0] ? Fd(n) : []
                            })),
                            Xe = Qd((function(l) {
                                var n = Qe(l),
                                    u = In(l, yt);
                                return n === Qe(u) ? n = t : u.pop(), u.length && u[0] === l[0] ? Fd(u, $e(n, 2)) : []
                            })),
                            Je = Qd((function(l) {
                                var n = Qe(l),
                                    u = In(l, yt);
                                return (n = "function" == typeof n ? n : t) && u.pop(), u.length && u[0] === l[0] ? Fd(u, t, n) : []
                            }));

                        function Qe(l) {
                            var n = null == l ? 0 : l.length;
                            return n ? l[n - 1] : t
                        }
                        var qe = Qd(lr);

                        function lr(l, n) {
                            return l && l.length && n && n.length ? Yd(l, n) : l
                        }
                        var nr = te((function(l, n) {
                            var u = null == l ? 0 : l.length,
                                d = od(l, n);
                            return zd(l, In(n, (function(l) {
                                return be(l, u) ? +l : l
                            })).sort(Mt)), d
                        }));

                        function ur(l) {
                            return null == l ? l : xu.call(l)
                        }
                        var dr = Qd((function(l) {
                                return st(yd(l, 1, zr, !0))
                            })),
                            tr = Qd((function(l) {
                                var n = Qe(l);
                                return zr(n) && (n = t), st(yd(l, 1, zr, !0), $e(n, 2))
                            })),
                            er = Qd((function(l) {
                                var n = Qe(l);
                                return n = "function" == typeof n ? n : t, st(yd(l, 1, zr, !0), t, n)
                            }));

                        function rr(l) {
                            if (!l || !l.length) return [];
                            var n = 0;
                            return l = Fn(l, (function(l) {
                                if (zr(l)) return n = bu(l.length, n), !0
                            })), Xn(n, (function(n) {
                                return In(l, Wn(n))
                            }))
                        }

                        function ir(l, n) {
                            if (!l || !l.length) return [];
                            var u = rr(l);
                            return null == n ? u : In(u, (function(l) {
                                return Sn(n, t, l)
                            }))
                        }
                        var or = Qd((function(l, n) {
                                return zr(l) ? fd(l, n) : []
                            })),
                            ar = Qd((function(l) {
                                return mt(Fn(l, zr))
                            })),
                            $r = Qd((function(l) {
                                var n = Qe(l);
                                return zr(n) && (n = t), mt(Fn(l, zr), $e(n, 2))
                            })),
                            cr = Qd((function(l) {
                                var n = Qe(l);
                                return n = "function" == typeof n ? n : t, mt(Fn(l, zr), t, n)
                            })),
                            sr = Qd(rr);
                        var fr = Qd((function(l) {
                            var n = l.length,
                                u = n > 1 ? l[n - 1] : t;
                            return u = "function" == typeof u ? (l.pop(), u) : t, ir(l, u)
                        }));

                        function pr(l) {
                            var n = Gu(l);
                            return n.__chain__ = !0, n
                        }

                        function hr(l, n) {
                            return n(l)
                        }
                        var vr = te((function(l) {
                            var n = l.length,
                                u = n ? l[0] : 0,
                                d = this.__wrapped__,
                                e = function(n) {
                                    return od(n, l)
                                };
                            return !(n > 1 || this.__actions__.length) && d instanceof Wu && be(u) ? ((d = d.slice(u, +u + (n ? 1 : 0))).__actions__.push({
                                func: hr,
                                args: [e],
                                thisArg: t
                            }), new Hu(d, this.__chain__).thru((function(l) {
                                return n && !l.length && l.push(t), l
                            }))) : this.thru(e)
                        }));
                        var mr = Nt((function(l, n, u) {
                            kl.call(l, u) ? ++l[u] : id(l, u, 1)
                        }));
                        var gr = Bt(He),
                            yr = Bt(We);

                        function br(l, n) {
                            return (Wr(l) ? Mn : pd)(l, $e(n, 3))
                        }

                        function wr(l, n) {
                            return (Wr(l) ? On : hd)(l, $e(n, 3))
                        }
                        var _r = Nt((function(l, n, u) {
                            kl.call(l, u) ? l[u].push(n) : id(l, u, [n])
                        }));
                        var Cr = Qd((function(l, n, u) {
                                var t = -1,
                                    e = "function" == typeof n,
                                    r = Yr(l) ? d(l.length) : [];
                                return pd(l, (function(l) {
                                    r[++t] = e ? Sn(n, l, u) : Td(l, n, u)
                                })), r
                            })),
                            Er = Nt((function(l, n, u) {
                                id(l, u, n)
                            }));

                        function xr(l, n) {
                            return (Wr(l) ? In : jd)(l, $e(n, 3))
                        }
                        var Sr = Nt((function(l, n, u) {
                            l[u ? 0 : 1].push(n)
                        }), (function() {
                            return [
                                [],
                                []
                            ]
                        }));
                        var Ar = Qd((function(l, n) {
                                if (null == l) return [];
                                var u = n.length;
                                return u > 1 && we(l, n[0], n[1]) ? n = [] : u > 2 && we(n[0], n[1], n[2]) && (n = [n[0]]), Wd(l, yd(n, 1), [])
                            })),
                            Mr = fn || function() {
                                return pn.Date.now()
                            };

                        function Or(l, n, u) {
                            return n = u ? t : n, n = l && null == n ? l.length : n, qt(l, c, t, t, t, t, n)
                        }

                        function Pr(l, n) {
                            var u;
                            if ("function" != typeof n) throw new Pl(e);
                            return l = vi(l),
                                function() {
                                    return --l > 0 && (u = n.apply(this, arguments)), l <= 1 && (n = t), u
                                }
                        }
                        var Fr = Qd((function(l, n, u) {
                                var d = 1;
                                if (u.length) {
                                    var t = $u(u, ae(Fr));
                                    d |= a
                                }
                                return qt(l, d, n, u, t)
                            })),
                            Tr = Qd((function(l, n, u) {
                                var d = 3;
                                if (u.length) {
                                    var t = $u(u, ae(Tr));
                                    d |= a
                                }
                                return qt(n, d, l, u, t)
                            }));

                        function Nr(l, n, u) {
                            var d, r, i, o, a, $, c = 0,
                                s = !1,
                                f = !1,
                                p = !0;
                            if ("function" != typeof l) throw new Pl(e);

                            function h(n) {
                                var u = d,
                                    e = r;
                                return d = r = t, c = n, o = l.apply(e, u)
                            }

                            function v(l) {
                                return c = l, a = Ne(g, n), s ? h(l) : o
                            }

                            function m(l) {
                                var u = l - $;
                                return $ === t || u >= n || u < 0 || f && l - c >= i
                            }

                            function g() {
                                var l = Mr();
                                if (m(l)) return y(l);
                                a = Ne(g, function(l) {
                                    var u = n - (l - $);
                                    return f ? wu(u, i - (l - c)) : u
                                }(l))
                            }

                            function y(l) {
                                return a = t, p && d ? h(l) : (d = r = t, o)
                            }

                            function b() {
                                var l = Mr(),
                                    u = m(l);
                                if (d = arguments, r = this, $ = l, u) {
                                    if (a === t) return v($);
                                    if (f) return Et(a), a = Ne(g, n), h($)
                                }
                                return a === t && (a = Ne(g, n)), o
                            }
                            return n = gi(n) || 0, ui(u) && (s = !!u.leading, i = (f = "maxWait" in u) ? bu(gi(u.maxWait) || 0, n) : i, p = "trailing" in u ? !!u.trailing : p), b.cancel = function() {
                                a !== t && Et(a), c = 0, d = $ = r = a = t
                            }, b.flush = function() {
                                return a === t ? o : y(Mr())
                            }, b
                        }
                        var Ir = Qd((function(l, n) {
                                return sd(l, 1, n)
                            })),
                            Rr = Qd((function(l, n, u) {
                                return sd(l, gi(n) || 0, u)
                            }));

                        function kr(l, n) {
                            if ("function" != typeof l || null != n && "function" != typeof n) throw new Pl(e);
                            var u = function() {
                                var d = arguments,
                                    t = n ? n.apply(this, d) : d[0],
                                    e = u.cache;
                                if (e.has(t)) return e.get(t);
                                var r = l.apply(this, d);
                                return u.cache = e.set(t, r) || e, r
                            };
                            return u.cache = new(kr.Cache || zu), u
                        }

                        function Dr(l) {
                            if ("function" != typeof l) throw new Pl(e);
                            return function() {
                                var n = arguments;
                                switch (n.length) {
                                    case 0:
                                        return !l.call(this);
                                    case 1:
                                        return !l.call(this, n[0]);
                                    case 2:
                                        return !l.call(this, n[0], n[1]);
                                    case 3:
                                        return !l.call(this, n[0], n[1], n[2])
                                }
                                return !l.apply(this, n)
                            }
                        }
                        kr.Cache = zu;
                        var Lr = _t((function(l, n) {
                                var u = (n = 1 == n.length && Wr(n[0]) ? In(n[0], Qn($e())) : In(yd(n, 1), Qn($e()))).length;
                                return Qd((function(d) {
                                    for (var t = -1, e = wu(d.length, u); ++t < e;) d[t] = n[t].call(this, d[t]);
                                    return Sn(l, this, d)
                                }))
                            })),
                            Zr = Qd((function(l, n) {
                                var u = $u(n, ae(Zr));
                                return qt(l, a, t, n, u)
                            })),
                            Br = Qd((function(l, n) {
                                var u = $u(n, ae(Br));
                                return qt(l, $, t, n, u)
                            })),
                            jr = te((function(l, n) {
                                return qt(l, s, t, t, t, n)
                            }));

                        function Gr(l, n) {
                            return l === n || l !== l && n !== n
                        }
                        var Ur = Yt(Md),
                            Vr = Yt((function(l, n) {
                                return l >= n
                            })),
                            Hr = Nd(function() {
                                return arguments
                            }()) ? Nd : function(l) {
                                return di(l) && kl.call(l, "callee") && !zl.call(l, "callee")
                            },
                            Wr = d.isArray,
                            Kr = bn ? Qn(bn) : function(l) {
                                return di(l) && Ad(l) == I
                            };

                        function Yr(l) {
                            return null != l && ni(l.length) && !qr(l)
                        }

                        function zr(l) {
                            return di(l) && Yr(l)
                        }
                        var Xr = Zn || yo,
                            Jr = wn ? Qn(wn) : function(l) {
                                return di(l) && Ad(l) == w
                            };

                        function Qr(l) {
                            if (!di(l)) return !1;
                            var n = Ad(l);
                            return n == _ || "[object DOMException]" == n || "string" == typeof l.message && "string" == typeof l.name && !ri(l)
                        }

                        function qr(l) {
                            if (!ui(l)) return !1;
                            var n = Ad(l);
                            return n == C || n == E || "[object AsyncFunction]" == n || "[object Proxy]" == n
                        }

                        function li(l) {
                            return "number" == typeof l && l == vi(l)
                        }

                        function ni(l) {
                            return "number" == typeof l && l > -1 && l % 1 == 0 && l <= p
                        }

                        function ui(l) {
                            var n = typeof l;
                            return null != l && ("object" == n || "function" == n)
                        }

                        function di(l) {
                            return null != l && "object" == typeof l
                        }
                        var ti = _n ? Qn(_n) : function(l) {
                            return di(l) && ve(l) == x
                        };

                        function ei(l) {
                            return "number" == typeof l || di(l) && Ad(l) == S
                        }

                        function ri(l) {
                            if (!di(l) || Ad(l) != A) return !1;
                            var n = Kl(l);
                            if (null === n) return !0;
                            var u = kl.call(n, "constructor") && n.constructor;
                            return "function" == typeof u && u instanceof u && Rl.call(u) == Bl
                        }
                        var ii = Cn ? Qn(Cn) : function(l) {
                            return di(l) && Ad(l) == O
                        };
                        var oi = En ? Qn(En) : function(l) {
                            return di(l) && ve(l) == P
                        };

                        function ai(l) {
                            return "string" == typeof l || !Wr(l) && di(l) && Ad(l) == F
                        }

                        function $i(l) {
                            return "symbol" == typeof l || di(l) && Ad(l) == T
                        }
                        var ci = xn ? Qn(xn) : function(l) {
                            return di(l) && ni(l.length) && !!rn[Ad(l)]
                        };
                        var si = Yt(Bd),
                            fi = Yt((function(l, n) {
                                return l <= n
                            }));

                        function pi(l) {
                            if (!l) return [];
                            if (Yr(l)) return ai(l) ? pu(l) : Ft(l);
                            if (ln && l[ln]) return function(l) {
                                for (var n, u = []; !(n = l.next()).done;) u.push(n.value);
                                return u
                            }(l[ln]());
                            var n = ve(l);
                            return (n == x ? ou : n == P ? cu : Gi)(l)
                        }

                        function hi(l) {
                            return l ? (l = gi(l)) === f || l === -1 / 0 ? 17976931348623157e292 * (l < 0 ? -1 : 1) : l === l ? l : 0 : 0 === l ? l : 0
                        }

                        function vi(l) {
                            var n = hi(l),
                                u = n % 1;
                            return n === n ? u ? n - u : n : 0
                        }

                        function mi(l) {
                            return l ? ad(vi(l), 0, v) : 0
                        }

                        function gi(l) {
                            if ("number" == typeof l) return l;
                            if ($i(l)) return h;
                            if (ui(l)) {
                                var n = "function" == typeof l.valueOf ? l.valueOf() : l;
                                l = ui(n) ? n + "" : n
                            }
                            if ("string" != typeof l) return 0 === l ? l : +l;
                            l = Jn(l);
                            var u = ml.test(l);
                            return u || yl.test(l) ? cn(l.slice(2), u ? 2 : 8) : vl.test(l) ? h : +l
                        }

                        function yi(l) {
                            return Tt(l, Ii(l))
                        }

                        function bi(l) {
                            return null == l ? "" : ct(l)
                        }
                        var wi = It((function(l, n) {
                                if (xe(n) || Yr(n)) Tt(n, Ni(n), l);
                                else
                                    for (var u in n) kl.call(n, u) && dd(l, u, n[u])
                            })),
                            _i = It((function(l, n) {
                                Tt(n, Ii(n), l)
                            })),
                            Ci = It((function(l, n, u, d) {
                                Tt(n, Ii(n), l, d)
                            })),
                            Ei = It((function(l, n, u, d) {
                                Tt(n, Ni(n), l, d)
                            })),
                            xi = te(od);
                        var Si = Qd((function(l, n) {
                                l = Al(l);
                                var u = -1,
                                    d = n.length,
                                    e = d > 2 ? n[2] : t;
                                for (e && we(n[0], n[1], e) && (d = 1); ++u < d;)
                                    for (var r = n[u], i = Ii(r), o = -1, a = i.length; ++o < a;) {
                                        var $ = i[o],
                                            c = l[$];
                                        (c === t || Gr(c, Nl[$]) && !kl.call(l, $)) && (l[$] = r[$])
                                    }
                                return l
                            })),
                            Ai = Qd((function(l) {
                                return l.push(t, ne), Sn(ki, t, l)
                            }));

                        function Mi(l, n, u) {
                            var d = null == l ? t : xd(l, n);
                            return d === t ? u : d
                        }

                        function Oi(l, n) {
                            return null != l && me(l, n, Pd)
                        }
                        var Pi = Ut((function(l, n, u) {
                                null != n && "function" != typeof n.toString && (n = Zl.call(n)), l[n] = u
                            }), uo(ro)),
                            Fi = Ut((function(l, n, u) {
                                null != n && "function" != typeof n.toString && (n = Zl.call(n)), kl.call(l, n) ? l[n].push(u) : l[n] = [u]
                            }), $e),
                            Ti = Qd(Td);

                        function Ni(l) {
                            return Yr(l) ? Qu(l) : Ld(l)
                        }

                        function Ii(l) {
                            return Yr(l) ? Qu(l, !0) : Zd(l)
                        }
                        var Ri = It((function(l, n, u) {
                                Vd(l, n, u)
                            })),
                            ki = It((function(l, n, u, d) {
                                Vd(l, n, u, d)
                            })),
                            Di = te((function(l, n) {
                                var u = {};
                                if (null == l) return u;
                                var d = !1;
                                n = In(n, (function(n) {
                                    return n = wt(n, l), d || (d = n.length > 1), n
                                })), Tt(l, re(l), u), d && (u = $d(u, 7, ue));
                                for (var t = n.length; t--;) ft(u, n[t]);
                                return u
                            }));
                        var Li = te((function(l, n) {
                            return null == l ? {} : function(l, n) {
                                return Kd(l, n, (function(n, u) {
                                    return Oi(l, u)
                                }))
                            }(l, n)
                        }));

                        function Zi(l, n) {
                            if (null == l) return {};
                            var u = In(re(l), (function(l) {
                                return [l]
                            }));
                            return n = $e(n), Kd(l, u, (function(l, u) {
                                return n(l, u[0])
                            }))
                        }
                        var Bi = Qt(Ni),
                            ji = Qt(Ii);

                        function Gi(l) {
                            return null == l ? [] : qn(l, Ni(l))
                        }
                        var Ui = Lt((function(l, n, u) {
                            return n = n.toLowerCase(), l + (u ? Vi(n) : n)
                        }));

                        function Vi(l) {
                            return Qi(bi(l).toLowerCase())
                        }

                        function Hi(l) {
                            return (l = bi(l)) && l.replace(wl, tu).replace(ql, "")
                        }
                        var Wi = Lt((function(l, n, u) {
                                return l + (u ? "-" : "") + n.toLowerCase()
                            })),
                            Ki = Lt((function(l, n, u) {
                                return l + (u ? " " : "") + n.toLowerCase()
                            })),
                            Yi = Dt("toLowerCase");
                        var zi = Lt((function(l, n, u) {
                            return l + (u ? "_" : "") + n.toLowerCase()
                        }));
                        var Xi = Lt((function(l, n, u) {
                            return l + (u ? " " : "") + Qi(n)
                        }));
                        var Ji = Lt((function(l, n, u) {
                                return l + (u ? " " : "") + n.toUpperCase()
                            })),
                            Qi = Dt("toUpperCase");

                        function qi(l, n, u) {
                            return l = bi(l), (n = u ? t : n) === t ? function(l) {
                                return dn.test(l)
                            }(l) ? function(l) {
                                return l.match(nn) || []
                            }(l) : function(l) {
                                return l.match(cl) || []
                            }(l) : l.match(n) || []
                        }
                        var lo = Qd((function(l, n) {
                                try {
                                    return Sn(l, t, n)
                                } catch (l) {
                                    return Qr(l) ? l : new El(l)
                                }
                            })),
                            no = te((function(l, n) {
                                return Mn(n, (function(n) {
                                    n = Ze(n), id(l, n, Fr(l[n], l))
                                })), l
                            }));

                        function uo(l) {
                            return function() {
                                return l
                            }
                        }
                        var to = jt(),
                            eo = jt(!0);

                        function ro(l) {
                            return l
                        }

                        function io(l) {
                            return Dd("function" == typeof l ? l : $d(l, 1))
                        }
                        var oo = Qd((function(l, n) {
                                return function(u) {
                                    return Td(u, l, n)
                                }
                            })),
                            ao = Qd((function(l, n) {
                                return function(u) {
                                    return Td(l, u, n)
                                }
                            }));

                        function $o(l, n, u) {
                            var d = Ni(n),
                                t = Ed(n, d);
                            null != u || ui(n) && (t.length || !d.length) || (u = n, n = l, l = this, t = Ed(n, Ni(n)));
                            var e = !(ui(u) && "chain" in u) || !!u.chain,
                                r = qr(l);
                            return Mn(t, (function(u) {
                                var d = n[u];
                                l[u] = d, r && (l.prototype[u] = function() {
                                    var n = this.__chain__;
                                    if (e || n) {
                                        var u = l(this.__wrapped__),
                                            t = u.__actions__ = Ft(this.__actions__);
                                        return t.push({
                                            func: d,
                                            args: arguments,
                                            thisArg: l
                                        }), u.__chain__ = n, u
                                    }
                                    return d.apply(l, Rn([this.value()], arguments))
                                })
                            })), l
                        }

                        function co() {}
                        var so = Ht(In),
                            fo = Ht(Pn),
                            po = Ht(Ln);

                        function ho(l) {
                            return _e(l) ? Wn(Ze(l)) : function(l) {
                                return function(n) {
                                    return xd(n, l)
                                }
                            }(l)
                        }
                        var vo = Kt(),
                            mo = Kt(!0);

                        function go() {
                            return []
                        }

                        function yo() {
                            return !1
                        }
                        var bo = Vt((function(l, n) {
                                return l + n
                            }), 0),
                            wo = Xt("ceil"),
                            _o = Vt((function(l, n) {
                                return l / n
                            }), 1),
                            Co = Xt("floor");
                        var Eo, xo = Vt((function(l, n) {
                                return l * n
                            }), 1),
                            So = Xt("round"),
                            Ao = Vt((function(l, n) {
                                return l - n
                            }), 0);
                        return Gu.after = function(l, n) {
                            if ("function" != typeof n) throw new Pl(e);
                            return l = vi(l),
                                function() {
                                    if (--l < 1) return n.apply(this, arguments)
                                }
                        }, Gu.ary = Or, Gu.assign = wi, Gu.assignIn = _i, Gu.assignInWith = Ci, Gu.assignWith = Ei, Gu.at = xi, Gu.before = Pr, Gu.bind = Fr, Gu.bindAll = no, Gu.bindKey = Tr, Gu.castArray = function() {
                            if (!arguments.length) return [];
                            var l = arguments[0];
                            return Wr(l) ? l : [l]
                        }, Gu.chain = pr, Gu.chunk = function(l, n, u) {
                            n = (u ? we(l, n, u) : n === t) ? 1 : bu(vi(n), 0);
                            var e = null == l ? 0 : l.length;
                            if (!e || n < 1) return [];
                            for (var r = 0, i = 0, o = d(vn(e / n)); r < e;) o[i++] = et(l, r, r += n);
                            return o
                        }, Gu.compact = function(l) {
                            for (var n = -1, u = null == l ? 0 : l.length, d = 0, t = []; ++n < u;) {
                                var e = l[n];
                                e && (t[d++] = e)
                            }
                            return t
                        }, Gu.concat = function() {
                            var l = arguments.length;
                            if (!l) return [];
                            for (var n = d(l - 1), u = arguments[0], t = l; t--;) n[t - 1] = arguments[t];
                            return Rn(Wr(u) ? Ft(u) : [u], yd(n, 1))
                        }, Gu.cond = function(l) {
                            var n = null == l ? 0 : l.length,
                                u = $e();
                            return l = n ? In(l, (function(l) {
                                if ("function" != typeof l[1]) throw new Pl(e);
                                return [u(l[0]), l[1]]
                            })) : [], Qd((function(u) {
                                for (var d = -1; ++d < n;) {
                                    var t = l[d];
                                    if (Sn(t[0], this, u)) return Sn(t[1], this, u)
                                }
                            }))
                        }, Gu.conforms = function(l) {
                            return function(l) {
                                var n = Ni(l);
                                return function(u) {
                                    return cd(u, l, n)
                                }
                            }($d(l, 1))
                        }, Gu.constant = uo, Gu.countBy = mr, Gu.create = function(l, n) {
                            var u = Uu(l);
                            return null == n ? u : rd(u, n)
                        }, Gu.curry = function l(n, u, d) {
                            var e = qt(n, 8, t, t, t, t, t, u = d ? t : u);
                            return e.placeholder = l.placeholder, e
                        }, Gu.curryRight = function l(n, u, d) {
                            var e = qt(n, o, t, t, t, t, t, u = d ? t : u);
                            return e.placeholder = l.placeholder, e
                        }, Gu.debounce = Nr, Gu.defaults = Si, Gu.defaultsDeep = Ai, Gu.defer = Ir, Gu.delay = Rr, Gu.difference = Ge, Gu.differenceBy = Ue, Gu.differenceWith = Ve, Gu.drop = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            return d ? et(l, (n = u || n === t ? 1 : vi(n)) < 0 ? 0 : n, d) : []
                        }, Gu.dropRight = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            return d ? et(l, 0, (n = d - (n = u || n === t ? 1 : vi(n))) < 0 ? 0 : n) : []
                        }, Gu.dropRightWhile = function(l, n) {
                            return l && l.length ? ht(l, $e(n, 3), !0, !0) : []
                        }, Gu.dropWhile = function(l, n) {
                            return l && l.length ? ht(l, $e(n, 3), !0) : []
                        }, Gu.fill = function(l, n, u, d) {
                            var e = null == l ? 0 : l.length;
                            return e ? (u && "number" != typeof u && we(l, n, u) && (u = 0, d = e), function(l, n, u, d) {
                                var e = l.length;
                                for ((u = vi(u)) < 0 && (u = -u > e ? 0 : e + u), (d = d === t || d > e ? e : vi(d)) < 0 && (d += e), d = u > d ? 0 : mi(d); u < d;) l[u++] = n;
                                return l
                            }(l, n, u, d)) : []
                        }, Gu.filter = function(l, n) {
                            return (Wr(l) ? Fn : gd)(l, $e(n, 3))
                        }, Gu.flatMap = function(l, n) {
                            return yd(xr(l, n), 1)
                        }, Gu.flatMapDeep = function(l, n) {
                            return yd(xr(l, n), f)
                        }, Gu.flatMapDepth = function(l, n, u) {
                            return u = u === t ? 1 : vi(u), yd(xr(l, n), u)
                        }, Gu.flatten = Ke, Gu.flattenDeep = function(l) {
                            return (null == l ? 0 : l.length) ? yd(l, f) : []
                        }, Gu.flattenDepth = function(l, n) {
                            return (null == l ? 0 : l.length) ? yd(l, n = n === t ? 1 : vi(n)) : []
                        }, Gu.flip = function(l) {
                            return qt(l, 512)
                        }, Gu.flow = to, Gu.flowRight = eo, Gu.fromPairs = function(l) {
                            for (var n = -1, u = null == l ? 0 : l.length, d = {}; ++n < u;) {
                                var t = l[n];
                                d[t[0]] = t[1]
                            }
                            return d
                        }, Gu.functions = function(l) {
                            return null == l ? [] : Ed(l, Ni(l))
                        }, Gu.functionsIn = function(l) {
                            return null == l ? [] : Ed(l, Ii(l))
                        }, Gu.groupBy = _r, Gu.initial = function(l) {
                            return (null == l ? 0 : l.length) ? et(l, 0, -1) : []
                        }, Gu.intersection = ze, Gu.intersectionBy = Xe, Gu.intersectionWith = Je, Gu.invert = Pi, Gu.invertBy = Fi, Gu.invokeMap = Cr, Gu.iteratee = io, Gu.keyBy = Er, Gu.keys = Ni, Gu.keysIn = Ii, Gu.map = xr, Gu.mapKeys = function(l, n) {
                            var u = {};
                            return n = $e(n, 3), _d(l, (function(l, d, t) {
                                id(u, n(l, d, t), l)
                            })), u
                        }, Gu.mapValues = function(l, n) {
                            var u = {};
                            return n = $e(n, 3), _d(l, (function(l, d, t) {
                                id(u, d, n(l, d, t))
                            })), u
                        }, Gu.matches = function(l) {
                            return Gd($d(l, 1))
                        }, Gu.matchesProperty = function(l, n) {
                            return Ud(l, $d(n, 1))
                        }, Gu.memoize = kr, Gu.merge = Ri, Gu.mergeWith = ki, Gu.method = oo, Gu.methodOf = ao, Gu.mixin = $o, Gu.negate = Dr, Gu.nthArg = function(l) {
                            return l = vi(l), Qd((function(n) {
                                return Hd(n, l)
                            }))
                        }, Gu.omit = Di, Gu.omitBy = function(l, n) {
                            return Zi(l, Dr($e(n)))
                        }, Gu.once = function(l) {
                            return Pr(2, l)
                        }, Gu.orderBy = function(l, n, u, d) {
                            return null == l ? [] : (Wr(n) || (n = null == n ? [] : [n]), Wr(u = d ? t : u) || (u = null == u ? [] : [u]), Wd(l, n, u))
                        }, Gu.over = so, Gu.overArgs = Lr, Gu.overEvery = fo, Gu.overSome = po, Gu.partial = Zr, Gu.partialRight = Br, Gu.partition = Sr, Gu.pick = Li, Gu.pickBy = Zi, Gu.property = ho, Gu.propertyOf = function(l) {
                            return function(n) {
                                return null == l ? t : xd(l, n)
                            }
                        }, Gu.pull = qe, Gu.pullAll = lr, Gu.pullAllBy = function(l, n, u) {
                            return l && l.length && n && n.length ? Yd(l, n, $e(u, 2)) : l
                        }, Gu.pullAllWith = function(l, n, u) {
                            return l && l.length && n && n.length ? Yd(l, n, t, u) : l
                        }, Gu.pullAt = nr, Gu.range = vo, Gu.rangeRight = mo, Gu.rearg = jr, Gu.reject = function(l, n) {
                            return (Wr(l) ? Fn : gd)(l, Dr($e(n, 3)))
                        }, Gu.remove = function(l, n) {
                            var u = [];
                            if (!l || !l.length) return u;
                            var d = -1,
                                t = [],
                                e = l.length;
                            for (n = $e(n, 3); ++d < e;) {
                                var r = l[d];
                                n(r, d, l) && (u.push(r), t.push(d))
                            }
                            return zd(l, t), u
                        }, Gu.rest = function(l, n) {
                            if ("function" != typeof l) throw new Pl(e);
                            return Qd(l, n = n === t ? n : vi(n))
                        }, Gu.reverse = ur, Gu.sampleSize = function(l, n, u) {
                            return n = (u ? we(l, n, u) : n === t) ? 1 : vi(n), (Wr(l) ? ld : lt)(l, n)
                        }, Gu.set = function(l, n, u) {
                            return null == l ? l : nt(l, n, u)
                        }, Gu.setWith = function(l, n, u, d) {
                            return d = "function" == typeof d ? d : t, null == l ? l : nt(l, n, u, d)
                        }, Gu.shuffle = function(l) {
                            return (Wr(l) ? nd : tt)(l)
                        }, Gu.slice = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            return d ? (u && "number" != typeof u && we(l, n, u) ? (n = 0, u = d) : (n = null == n ? 0 : vi(n), u = u === t ? d : vi(u)), et(l, n, u)) : []
                        }, Gu.sortBy = Ar, Gu.sortedUniq = function(l) {
                            return l && l.length ? at(l) : []
                        }, Gu.sortedUniqBy = function(l, n) {
                            return l && l.length ? at(l, $e(n, 2)) : []
                        }, Gu.split = function(l, n, u) {
                            return u && "number" != typeof u && we(l, n, u) && (n = u = t), (u = u === t ? v : u >>> 0) ? (l = bi(l)) && ("string" == typeof n || null != n && !ii(n)) && !(n = ct(n)) && iu(l) ? Ct(pu(l), 0, u) : l.split(n, u) : []
                        }, Gu.spread = function(l, n) {
                            if ("function" != typeof l) throw new Pl(e);
                            return n = null == n ? 0 : bu(vi(n), 0), Qd((function(u) {
                                var d = u[n],
                                    t = Ct(u, 0, n);
                                return d && Rn(t, d), Sn(l, this, t)
                            }))
                        }, Gu.tail = function(l) {
                            var n = null == l ? 0 : l.length;
                            return n ? et(l, 1, n) : []
                        }, Gu.take = function(l, n, u) {
                            return l && l.length ? et(l, 0, (n = u || n === t ? 1 : vi(n)) < 0 ? 0 : n) : []
                        }, Gu.takeRight = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            return d ? et(l, (n = d - (n = u || n === t ? 1 : vi(n))) < 0 ? 0 : n, d) : []
                        }, Gu.takeRightWhile = function(l, n) {
                            return l && l.length ? ht(l, $e(n, 3), !1, !0) : []
                        }, Gu.takeWhile = function(l, n) {
                            return l && l.length ? ht(l, $e(n, 3)) : []
                        }, Gu.tap = function(l, n) {
                            return n(l), l
                        }, Gu.throttle = function(l, n, u) {
                            var d = !0,
                                t = !0;
                            if ("function" != typeof l) throw new Pl(e);
                            return ui(u) && (d = "leading" in u ? !!u.leading : d, t = "trailing" in u ? !!u.trailing : t), Nr(l, n, {
                                leading: d,
                                maxWait: n,
                                trailing: t
                            })
                        }, Gu.thru = hr, Gu.toArray = pi, Gu.toPairs = Bi, Gu.toPairsIn = ji, Gu.toPath = function(l) {
                            return Wr(l) ? In(l, Ze) : $i(l) ? [l] : Ft(Le(bi(l)))
                        }, Gu.toPlainObject = yi, Gu.transform = function(l, n, u) {
                            var d = Wr(l),
                                t = d || Xr(l) || ci(l);
                            if (n = $e(n, 4), null == u) {
                                var e = l && l.constructor;
                                u = t ? d ? new e : [] : ui(l) && qr(e) ? Uu(Kl(l)) : {}
                            }
                            return (t ? Mn : _d)(l, (function(l, d, t) {
                                return n(u, l, d, t)
                            })), u
                        }, Gu.unary = function(l) {
                            return Or(l, 1)
                        }, Gu.union = dr, Gu.unionBy = tr, Gu.unionWith = er, Gu.uniq = function(l) {
                            return l && l.length ? st(l) : []
                        }, Gu.uniqBy = function(l, n) {
                            return l && l.length ? st(l, $e(n, 2)) : []
                        }, Gu.uniqWith = function(l, n) {
                            return n = "function" == typeof n ? n : t, l && l.length ? st(l, t, n) : []
                        }, Gu.unset = function(l, n) {
                            return null == l || ft(l, n)
                        }, Gu.unzip = rr, Gu.unzipWith = ir, Gu.update = function(l, n, u) {
                            return null == l ? l : pt(l, n, bt(u))
                        }, Gu.updateWith = function(l, n, u, d) {
                            return d = "function" == typeof d ? d : t, null == l ? l : pt(l, n, bt(u), d)
                        }, Gu.values = Gi, Gu.valuesIn = function(l) {
                            return null == l ? [] : qn(l, Ii(l))
                        }, Gu.without = or, Gu.words = qi, Gu.wrap = function(l, n) {
                            return Zr(bt(n), l)
                        }, Gu.xor = ar, Gu.xorBy = $r, Gu.xorWith = cr, Gu.zip = sr, Gu.zipObject = function(l, n) {
                            return gt(l || [], n || [], dd)
                        }, Gu.zipObjectDeep = function(l, n) {
                            return gt(l || [], n || [], nt)
                        }, Gu.zipWith = fr, Gu.entries = Bi, Gu.entriesIn = ji, Gu.extend = _i, Gu.extendWith = Ci, $o(Gu, Gu), Gu.add = bo, Gu.attempt = lo, Gu.camelCase = Ui, Gu.capitalize = Vi, Gu.ceil = wo, Gu.clamp = function(l, n, u) {
                            return u === t && (u = n, n = t), u !== t && (u = (u = gi(u)) === u ? u : 0), n !== t && (n = (n = gi(n)) === n ? n : 0), ad(gi(l), n, u)
                        }, Gu.clone = function(l) {
                            return $d(l, 4)
                        }, Gu.cloneDeep = function(l) {
                            return $d(l, 5)
                        }, Gu.cloneDeepWith = function(l, n) {
                            return $d(l, 5, n = "function" == typeof n ? n : t)
                        }, Gu.cloneWith = function(l, n) {
                            return $d(l, 4, n = "function" == typeof n ? n : t)
                        }, Gu.conformsTo = function(l, n) {
                            return null == n || cd(l, n, Ni(n))
                        }, Gu.deburr = Hi, Gu.defaultTo = function(l, n) {
                            return null == l || l !== l ? n : l
                        }, Gu.divide = _o, Gu.endsWith = function(l, n, u) {
                            l = bi(l), n = ct(n);
                            var d = l.length,
                                e = u = u === t ? d : ad(vi(u), 0, d);
                            return (u -= n.length) >= 0 && l.slice(u, e) == n
                        }, Gu.eq = Gr, Gu.escape = function(l) {
                            return (l = bi(l)) && J.test(l) ? l.replace(z, eu) : l
                        }, Gu.escapeRegExp = function(l) {
                            return (l = bi(l)) && el.test(l) ? l.replace(tl, "\\$&") : l
                        }, Gu.every = function(l, n, u) {
                            var d = Wr(l) ? Pn : vd;
                            return u && we(l, n, u) && (n = t), d(l, $e(n, 3))
                        }, Gu.find = gr, Gu.findIndex = He, Gu.findKey = function(l, n) {
                            return Bn(l, $e(n, 3), _d)
                        }, Gu.findLast = yr, Gu.findLastIndex = We, Gu.findLastKey = function(l, n) {
                            return Bn(l, $e(n, 3), Cd)
                        }, Gu.floor = Co, Gu.forEach = br, Gu.forEachRight = wr, Gu.forIn = function(l, n) {
                            return null == l ? l : bd(l, $e(n, 3), Ii)
                        }, Gu.forInRight = function(l, n) {
                            return null == l ? l : wd(l, $e(n, 3), Ii)
                        }, Gu.forOwn = function(l, n) {
                            return l && _d(l, $e(n, 3))
                        }, Gu.forOwnRight = function(l, n) {
                            return l && Cd(l, $e(n, 3))
                        }, Gu.get = Mi, Gu.gt = Ur, Gu.gte = Vr, Gu.has = function(l, n) {
                            return null != l && me(l, n, Od)
                        }, Gu.hasIn = Oi, Gu.head = Ye, Gu.identity = ro, Gu.includes = function(l, n, u, d) {
                            l = Yr(l) ? l : Gi(l), u = u && !d ? vi(u) : 0;
                            var t = l.length;
                            return u < 0 && (u = bu(t + u, 0)), ai(l) ? u <= t && l.indexOf(n, u) > -1 : !!t && Gn(l, n, u) > -1
                        }, Gu.indexOf = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            if (!d) return -1;
                            var t = null == u ? 0 : vi(u);
                            return t < 0 && (t = bu(d + t, 0)), Gn(l, n, t)
                        }, Gu.inRange = function(l, n, u) {
                            return n = hi(n), u === t ? (u = n, n = 0) : u = hi(u),
                                function(l, n, u) {
                                    return l >= wu(n, u) && l < bu(n, u)
                                }(l = gi(l), n, u)
                        }, Gu.invoke = Ti, Gu.isArguments = Hr, Gu.isArray = Wr, Gu.isArrayBuffer = Kr, Gu.isArrayLike = Yr, Gu.isArrayLikeObject = zr, Gu.isBoolean = function(l) {
                            return !0 === l || !1 === l || di(l) && Ad(l) == b
                        }, Gu.isBuffer = Xr, Gu.isDate = Jr, Gu.isElement = function(l) {
                            return di(l) && 1 === l.nodeType && !ri(l)
                        }, Gu.isEmpty = function(l) {
                            if (null == l) return !0;
                            if (Yr(l) && (Wr(l) || "string" == typeof l || "function" == typeof l.splice || Xr(l) || ci(l) || Hr(l))) return !l.length;
                            var n = ve(l);
                            if (n == x || n == P) return !l.size;
                            if (xe(l)) return !Ld(l).length;
                            for (var u in l)
                                if (kl.call(l, u)) return !1;
                            return !0
                        }, Gu.isEqual = function(l, n) {
                            return Id(l, n)
                        }, Gu.isEqualWith = function(l, n, u) {
                            var d = (u = "function" == typeof u ? u : t) ? u(l, n) : t;
                            return d === t ? Id(l, n, t, u) : !!d
                        }, Gu.isError = Qr, Gu.isFinite = function(l) {
                            return "number" == typeof l && Kn(l)
                        }, Gu.isFunction = qr, Gu.isInteger = li, Gu.isLength = ni, Gu.isMap = ti, Gu.isMatch = function(l, n) {
                            return l === n || Rd(l, n, se(n))
                        }, Gu.isMatchWith = function(l, n, u) {
                            return u = "function" == typeof u ? u : t, Rd(l, n, se(n), u)
                        }, Gu.isNaN = function(l) {
                            return ei(l) && l != +l
                        }, Gu.isNative = function(l) {
                            if (Ee(l)) throw new El("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
                            return kd(l)
                        }, Gu.isNil = function(l) {
                            return null == l
                        }, Gu.isNull = function(l) {
                            return null === l
                        }, Gu.isNumber = ei, Gu.isObject = ui, Gu.isObjectLike = di, Gu.isPlainObject = ri, Gu.isRegExp = ii, Gu.isSafeInteger = function(l) {
                            return li(l) && l >= -9007199254740991 && l <= p
                        }, Gu.isSet = oi, Gu.isString = ai, Gu.isSymbol = $i, Gu.isTypedArray = ci, Gu.isUndefined = function(l) {
                            return l === t
                        }, Gu.isWeakMap = function(l) {
                            return di(l) && ve(l) == N
                        }, Gu.isWeakSet = function(l) {
                            return di(l) && "[object WeakSet]" == Ad(l)
                        }, Gu.join = function(l, n) {
                            return null == l ? "" : gu.call(l, n)
                        }, Gu.kebabCase = Wi, Gu.last = Qe, Gu.lastIndexOf = function(l, n, u) {
                            var d = null == l ? 0 : l.length;
                            if (!d) return -1;
                            var e = d;
                            return u !== t && (e = (e = vi(u)) < 0 ? bu(d + e, 0) : wu(e, d - 1)), n === n ? function(l, n, u) {
                                for (var d = u + 1; d--;)
                                    if (l[d] === n) return d;
                                return d
                            }(l, n, e) : jn(l, Vn, e, !0)
                        }, Gu.lowerCase = Ki, Gu.lowerFirst = Yi, Gu.lt = si, Gu.lte = fi, Gu.max = function(l) {
                            return l && l.length ? md(l, ro, Md) : t
                        }, Gu.maxBy = function(l, n) {
                            return l && l.length ? md(l, $e(n, 2), Md) : t
                        }, Gu.mean = function(l) {
                            return Hn(l, ro)
                        }, Gu.meanBy = function(l, n) {
                            return Hn(l, $e(n, 2))
                        }, Gu.min = function(l) {
                            return l && l.length ? md(l, ro, Bd) : t
                        }, Gu.minBy = function(l, n) {
                            return l && l.length ? md(l, $e(n, 2), Bd) : t
                        }, Gu.stubArray = go, Gu.stubFalse = yo, Gu.stubObject = function() {
                            return {}
                        }, Gu.stubString = function() {
                            return ""
                        }, Gu.stubTrue = function() {
                            return !0
                        }, Gu.multiply = xo, Gu.nth = function(l, n) {
                            return l && l.length ? Hd(l, vi(n)) : t
                        }, Gu.noConflict = function() {
                            return pn._ === this && (pn._ = jl), this
                        }, Gu.noop = co, Gu.now = Mr, Gu.pad = function(l, n, u) {
                            l = bi(l);
                            var d = (n = vi(n)) ? fu(l) : 0;
                            if (!n || d >= n) return l;
                            var t = (n - d) / 2;
                            return Wt(gn(t), u) + l + Wt(vn(t), u)
                        }, Gu.padEnd = function(l, n, u) {
                            l = bi(l);
                            var d = (n = vi(n)) ? fu(l) : 0;
                            return n && d < n ? l + Wt(n - d, u) : l
                        }, Gu.padStart = function(l, n, u) {
                            l = bi(l);
                            var d = (n = vi(n)) ? fu(l) : 0;
                            return n && d < n ? Wt(n - d, u) + l : l
                        }, Gu.parseInt = function(l, n, u) {
                            return u || null == n ? n = 0 : n && (n = +n), Cu(bi(l).replace(rl, ""), n || 0)
                        }, Gu.random = function(l, n, u) {
                            if (u && "boolean" != typeof u && we(l, n, u) && (n = u = t), u === t && ("boolean" == typeof n ? (u = n, n = t) : "boolean" == typeof l && (u = l, l = t)), l === t && n === t ? (l = 0, n = 1) : (l = hi(l), n === t ? (n = l, l = 0) : n = hi(n)), l > n) {
                                var d = l;
                                l = n, n = d
                            }
                            if (u || l % 1 || n % 1) {
                                var e = Eu();
                                return wu(l + e * (n - l + $n("1e-" + ((e + "").length - 1))), n)
                            }
                            return Xd(l, n)
                        }, Gu.reduce = function(l, n, u) {
                            var d = Wr(l) ? kn : Yn,
                                t = arguments.length < 3;
                            return d(l, $e(n, 4), u, t, pd)
                        }, Gu.reduceRight = function(l, n, u) {
                            var d = Wr(l) ? Dn : Yn,
                                t = arguments.length < 3;
                            return d(l, $e(n, 4), u, t, hd)
                        }, Gu.repeat = function(l, n, u) {
                            return n = (u ? we(l, n, u) : n === t) ? 1 : vi(n), Jd(bi(l), n)
                        }, Gu.replace = function() {
                            var l = arguments,
                                n = bi(l[0]);
                            return l.length < 3 ? n : n.replace(l[1], l[2])
                        }, Gu.result = function(l, n, u) {
                            var d = -1,
                                e = (n = wt(n, l)).length;
                            for (e || (e = 1, l = t); ++d < e;) {
                                var r = null == l ? t : l[Ze(n[d])];
                                r === t && (d = e, r = u), l = qr(r) ? r.call(l) : r
                            }
                            return l
                        }, Gu.round = So, Gu.runInContext = l, Gu.sample = function(l) {
                            return (Wr(l) ? qu : qd)(l)
                        }, Gu.size = function(l) {
                            if (null == l) return 0;
                            if (Yr(l)) return ai(l) ? fu(l) : l.length;
                            var n = ve(l);
                            return n == x || n == P ? l.size : Ld(l).length
                        }, Gu.snakeCase = zi, Gu.some = function(l, n, u) {
                            var d = Wr(l) ? Ln : rt;
                            return u && we(l, n, u) && (n = t), d(l, $e(n, 3))
                        }, Gu.sortedIndex = function(l, n) {
                            return it(l, n)
                        }, Gu.sortedIndexBy = function(l, n, u) {
                            return ot(l, n, $e(u, 2))
                        }, Gu.sortedIndexOf = function(l, n) {
                            var u = null == l ? 0 : l.length;
                            if (u) {
                                var d = it(l, n);
                                if (d < u && Gr(l[d], n)) return d
                            }
                            return -1
                        }, Gu.sortedLastIndex = function(l, n) {
                            return it(l, n, !0)
                        }, Gu.sortedLastIndexBy = function(l, n, u) {
                            return ot(l, n, $e(u, 2), !0)
                        }, Gu.sortedLastIndexOf = function(l, n) {
                            if (null == l ? 0 : l.length) {
                                var u = it(l, n, !0) - 1;
                                if (Gr(l[u], n)) return u
                            }
                            return -1
                        }, Gu.startCase = Xi, Gu.startsWith = function(l, n, u) {
                            return l = bi(l), u = null == u ? 0 : ad(vi(u), 0, l.length), n = ct(n), l.slice(u, u + n.length) == n
                        }, Gu.subtract = Ao, Gu.sum = function(l) {
                            return l && l.length ? zn(l, ro) : 0
                        }, Gu.sumBy = function(l, n) {
                            return l && l.length ? zn(l, $e(n, 2)) : 0
                        }, Gu.template = function(l, n, u) {
                            var d = Gu.templateSettings;
                            u && we(l, n, u) && (n = t), l = bi(l), n = Ci({}, n, d, le);
                            var e, r, i = Ci({}, n.imports, d.imports, le),
                                o = Ni(i),
                                a = qn(i, o),
                                $ = 0,
                                c = n.interpolate || _l,
                                s = "__p += '",
                                f = Ml((n.escape || _l).source + "|" + c.source + "|" + (c === ll ? pl : _l).source + "|" + (n.evaluate || _l).source + "|$", "g"),
                                p = "//# sourceURL=" + (kl.call(n, "sourceURL") ? (n.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++en + "]") + "\n";
                            l.replace(f, (function(n, u, d, t, i, o) {
                                return d || (d = t), s += l.slice($, o).replace(Cl, ru), u && (e = !0, s += "' +\n__e(" + u + ") +\n'"), i && (r = !0, s += "';\n" + i + ";\n__p += '"), d && (s += "' +\n((__t = (" + d + ")) == null ? '' : __t) +\n'"), $ = o + n.length, n
                            })), s += "';\n";
                            var h = kl.call(n, "variable") && n.variable;
                            if (h) {
                                if (sl.test(h)) throw new El("Invalid `variable` option passed into `_.template`")
                            } else s = "with (obj) {\n" + s + "\n}\n";
                            s = (r ? s.replace(H, "") : s).replace(W, "$1").replace(K, "$1;"), s = "function(" + (h || "obj") + ") {\n" + (h ? "" : "obj || (obj = {});\n") + "var __t, __p = ''" + (e ? ", __e = _.escape" : "") + (r ? ", __j = Array.prototype.join;\nfunction print() { __p += __j.call(arguments, '') }\n" : ";\n") + s + "return __p\n}";
                            var v = lo((function() {
                                return xl(o, p + "return " + s).apply(t, a)
                            }));
                            if (v.source = s, Qr(v)) throw v;
                            return v
                        }, Gu.times = function(l, n) {
                            if ((l = vi(l)) < 1 || l > p) return [];
                            var u = v,
                                d = wu(l, v);
                            n = $e(n), l -= v;
                            for (var t = Xn(d, n); ++u < l;) n(u);
                            return t
                        }, Gu.toFinite = hi, Gu.toInteger = vi, Gu.toLength = mi, Gu.toLower = function(l) {
                            return bi(l).toLowerCase()
                        }, Gu.toNumber = gi, Gu.toSafeInteger = function(l) {
                            return l ? ad(vi(l), -9007199254740991, p) : 0 === l ? l : 0
                        }, Gu.toString = bi, Gu.toUpper = function(l) {
                            return bi(l).toUpperCase()
                        }, Gu.trim = function(l, n, u) {
                            if ((l = bi(l)) && (u || n === t)) return Jn(l);
                            if (!l || !(n = ct(n))) return l;
                            var d = pu(l),
                                e = pu(n);
                            return Ct(d, nu(d, e), uu(d, e) + 1).join("")
                        }, Gu.trimEnd = function(l, n, u) {
                            if ((l = bi(l)) && (u || n === t)) return l.slice(0, hu(l) + 1);
                            if (!l || !(n = ct(n))) return l;
                            var d = pu(l);
                            return Ct(d, 0, uu(d, pu(n)) + 1).join("")
                        }, Gu.trimStart = function(l, n, u) {
                            if ((l = bi(l)) && (u || n === t)) return l.replace(rl, "");
                            if (!l || !(n = ct(n))) return l;
                            var d = pu(l);
                            return Ct(d, nu(d, pu(n))).join("")
                        }, Gu.truncate = function(l, n) {
                            var u = 30,
                                d = "...";
                            if (ui(n)) {
                                var e = "separator" in n ? n.separator : e;
                                u = "length" in n ? vi(n.length) : u, d = "omission" in n ? ct(n.omission) : d
                            }
                            var r = (l = bi(l)).length;
                            if (iu(l)) {
                                var i = pu(l);
                                r = i.length
                            }
                            if (u >= r) return l;
                            var o = u - fu(d);
                            if (o < 1) return d;
                            var a = i ? Ct(i, 0, o).join("") : l.slice(0, o);
                            if (e === t) return a + d;
                            if (i && (o += a.length - o), ii(e)) {
                                if (l.slice(o).search(e)) {
                                    var $, c = a;
                                    for (e.global || (e = Ml(e.source, bi(hl.exec(e)) + "g")), e.lastIndex = 0; $ = e.exec(c);) var s = $.index;
                                    a = a.slice(0, s === t ? o : s)
                                }
                            } else if (l.indexOf(ct(e), o) != o) {
                                var f = a.lastIndexOf(e);
                                f > -1 && (a = a.slice(0, f))
                            }
                            return a + d
                        }, Gu.unescape = function(l) {
                            return (l = bi(l)) && X.test(l) ? l.replace(Y, vu) : l
                        }, Gu.uniqueId = function(l) {
                            var n = ++Dl;
                            return bi(l) + n
                        }, Gu.upperCase = Ji, Gu.upperFirst = Qi, Gu.each = br, Gu.eachRight = wr, Gu.first = Ye, $o(Gu, (Eo = {}, _d(Gu, (function(l, n) {
                            kl.call(Gu.prototype, n) || (Eo[n] = l)
                        })), Eo), {
                            chain: !1
                        }), Gu.VERSION = "4.17.21", Mn(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], (function(l) {
                            Gu[l].placeholder = Gu
                        })), Mn(["drop", "take"], (function(l, n) {
                            Wu.prototype[l] = function(u) {
                                u = u === t ? 1 : bu(vi(u), 0);
                                var d = this.__filtered__ && !n ? new Wu(this) : this.clone();
                                return d.__filtered__ ? d.__takeCount__ = wu(u, d.__takeCount__) : d.__views__.push({
                                    size: wu(u, v),
                                    type: l + (d.__dir__ < 0 ? "Right" : "")
                                }), d
                            }, Wu.prototype[l + "Right"] = function(n) {
                                return this.reverse()[l](n).reverse()
                            }
                        })), Mn(["filter", "map", "takeWhile"], (function(l, n) {
                            var u = n + 1,
                                d = 1 == u || 3 == u;
                            Wu.prototype[l] = function(l) {
                                var n = this.clone();
                                return n.__iteratees__.push({
                                    iteratee: $e(l, 3),
                                    type: u
                                }), n.__filtered__ = n.__filtered__ || d, n
                            }
                        })), Mn(["head", "last"], (function(l, n) {
                            var u = "take" + (n ? "Right" : "");
                            Wu.prototype[l] = function() {
                                return this[u](1).value()[0]
                            }
                        })), Mn(["initial", "tail"], (function(l, n) {
                            var u = "drop" + (n ? "" : "Right");
                            Wu.prototype[l] = function() {
                                return this.__filtered__ ? new Wu(this) : this[u](1)
                            }
                        })), Wu.prototype.compact = function() {
                            return this.filter(ro)
                        }, Wu.prototype.find = function(l) {
                            return this.filter(l).head()
                        }, Wu.prototype.findLast = function(l) {
                            return this.reverse().find(l)
                        }, Wu.prototype.invokeMap = Qd((function(l, n) {
                            return "function" == typeof l ? new Wu(this) : this.map((function(u) {
                                return Td(u, l, n)
                            }))
                        })), Wu.prototype.reject = function(l) {
                            return this.filter(Dr($e(l)))
                        }, Wu.prototype.slice = function(l, n) {
                            l = vi(l);
                            var u = this;
                            return u.__filtered__ && (l > 0 || n < 0) ? new Wu(u) : (l < 0 ? u = u.takeRight(-l) : l && (u = u.drop(l)), n !== t && (u = (n = vi(n)) < 0 ? u.dropRight(-n) : u.take(n - l)), u)
                        }, Wu.prototype.takeRightWhile = function(l) {
                            return this.reverse().takeWhile(l).reverse()
                        }, Wu.prototype.toArray = function() {
                            return this.take(v)
                        }, _d(Wu.prototype, (function(l, n) {
                            var u = /^(?:filter|find|map|reject)|While$/.test(n),
                                d = /^(?:head|last)$/.test(n),
                                e = Gu[d ? "take" + ("last" == n ? "Right" : "") : n],
                                r = d || /^find/.test(n);
                            e && (Gu.prototype[n] = function() {
                                var n = this.__wrapped__,
                                    i = d ? [1] : arguments,
                                    o = n instanceof Wu,
                                    a = i[0],
                                    $ = o || Wr(n),
                                    c = function(l) {
                                        var n = e.apply(Gu, Rn([l], i));
                                        return d && s ? n[0] : n
                                    };
                                $ && u && "function" == typeof a && 1 != a.length && (o = $ = !1);
                                var s = this.__chain__,
                                    f = !!this.__actions__.length,
                                    p = r && !s,
                                    h = o && !f;
                                if (!r && $) {
                                    n = h ? n : new Wu(this);
                                    var v = l.apply(n, i);
                                    return v.__actions__.push({
                                        func: hr,
                                        args: [c],
                                        thisArg: t
                                    }), new Hu(v, s)
                                }
                                return p && h ? l.apply(this, i) : (v = this.thru(c), p ? d ? v.value()[0] : v.value() : v)
                            })
                        })), Mn(["pop", "push", "shift", "sort", "splice", "unshift"], (function(l) {
                            var n = Fl[l],
                                u = /^(?:push|sort|unshift)$/.test(l) ? "tap" : "thru",
                                d = /^(?:pop|shift)$/.test(l);
                            Gu.prototype[l] = function() {
                                var l = arguments;
                                if (d && !this.__chain__) {
                                    var t = this.value();
                                    return n.apply(Wr(t) ? t : [], l)
                                }
                                return this[u]((function(u) {
                                    return n.apply(Wr(u) ? u : [], l)
                                }))
                            }
                        })), _d(Wu.prototype, (function(l, n) {
                            var u = Gu[n];
                            if (u) {
                                var d = u.name + "";
                                kl.call(Nu, d) || (Nu[d] = []), Nu[d].push({
                                    name: n,
                                    func: u
                                })
                            }
                        })), Nu[Gt(t, 2).name] = [{
                            name: "wrapper",
                            func: t
                        }], Wu.prototype.clone = function() {
                            var l = new Wu(this.__wrapped__);
                            return l.__actions__ = Ft(this.__actions__), l.__dir__ = this.__dir__, l.__filtered__ = this.__filtered__, l.__iteratees__ = Ft(this.__iteratees__), l.__takeCount__ = this.__takeCount__, l.__views__ = Ft(this.__views__), l
                        }, Wu.prototype.reverse = function() {
                            if (this.__filtered__) {
                                var l = new Wu(this);
                                l.__dir__ = -1, l.__filtered__ = !0
                            } else(l = this.clone()).__dir__ *= -1;
                            return l
                        }, Wu.prototype.value = function() {
                            var l = this.__wrapped__.value(),
                                n = this.__dir__,
                                u = Wr(l),
                                d = n < 0,
                                t = u ? l.length : 0,
                                e = function(l, n, u) {
                                    var d = -1,
                                        t = u.length;
                                    for (; ++d < t;) {
                                        var e = u[d],
                                            r = e.size;
                                        switch (e.type) {
                                            case "drop":
                                                l += r;
                                                break;
                                            case "dropRight":
                                                n -= r;
                                                break;
                                            case "take":
                                                n = wu(n, l + r);
                                                break;
                                            case "takeRight":
                                                l = bu(l, n - r)
                                        }
                                    }
                                    return {
                                        start: l,
                                        end: n
                                    }
                                }(0, t, this.__views__),
                                r = e.start,
                                i = e.end,
                                o = i - r,
                                a = d ? i : r - 1,
                                $ = this.__iteratees__,
                                c = $.length,
                                s = 0,
                                f = wu(o, this.__takeCount__);
                            if (!u || !d && t == o && f == o) return vt(l, this.__actions__);
                            var p = [];
                            l: for (; o-- && s < f;) {
                                for (var h = -1, v = l[a += n]; ++h < c;) {
                                    var m = $[h],
                                        g = m.iteratee,
                                        y = m.type,
                                        b = g(v);
                                    if (2 == y) v = b;
                                    else if (!b) {
                                        if (1 == y) continue l;
                                        break l
                                    }
                                }
                                p[s++] = v
                            }
                            return p
                        }, Gu.prototype.at = vr, Gu.prototype.chain = function() {
                            return pr(this)
                        }, Gu.prototype.commit = function() {
                            return new Hu(this.value(), this.__chain__)
                        }, Gu.prototype.next = function() {
                            this.__values__ === t && (this.__values__ = pi(this.value()));
                            var l = this.__index__ >= this.__values__.length;
                            return {
                                done: l,
                                value: l ? t : this.__values__[this.__index__++]
                            }
                        }, Gu.prototype.plant = function(l) {
                            for (var n, u = this; u instanceof Vu;) {
                                var d = je(u);
                                d.__index__ = 0, d.__values__ = t, n ? e.__wrapped__ = d : n = d;
                                var e = d;
                                u = u.__wrapped__
                            }
                            return e.__wrapped__ = l, n
                        }, Gu.prototype.reverse = function() {
                            var l = this.__wrapped__;
                            if (l instanceof Wu) {
                                var n = l;
                                return this.__actions__.length && (n = new Wu(this)), (n = n.reverse()).__actions__.push({
                                    func: hr,
                                    args: [ur],
                                    thisArg: t
                                }), new Hu(n, this.__chain__)
                            }
                            return this.thru(ur)
                        }, Gu.prototype.toJSON = Gu.prototype.valueOf = Gu.prototype.value = function() {
                            return vt(this.__wrapped__, this.__actions__)
                        }, Gu.prototype.first = Gu.prototype.head, ln && (Gu.prototype[ln] = function() {
                            return this
                        }), Gu
                    }();
                    pn._ = mu, (d = function() {
                        return mu
                    }.call(n, u, n, l)) === t || (l.exports = d)
                }.call(this)
        },
        478718: (l, n, u) => {
            var d = u(325970),
                t = u(499021)((function(l, n) {
                    return null == l ? {} : d(l, n)
                }));
            l.exports = t
        },
        944908: (l, n, u) => {
            var d = u(345652);
            l.exports = function(l) {
                return l && l.length ? d(l) : []
            }
        },
        614035: (l, n, u) => {
            var d = u(135393)((function(l, n, u) {
                return l + (u ? " " : "") + n.toUpperCase()
            }));
            l.exports = d
        },
        158748: (l, n, u) => {
            var d = u(949029),
                t = u(593157),
                e = u(479833),
                r = u(902757);
            l.exports = function(l, n, u) {
                return l = e(l), void 0 === (n = u ? void 0 : n) ? t(l) ? r(l) : d(l) : l.match(n) || []
            }
        },
        857824: l => {
            var n = 1e3,
                u = 60 * n,
                d = 60 * u,
                t = 24 * d,
                e = 7 * t,
                r = 365.25 * t;

            function i(l, n, u, d) {
                var t = n >= 1.5 * u;
                return Math.round(l / u) + " " + d + (t ? "s" : "")
            }
            l.exports = function(l, o) {
                o = o || {};
                var a = typeof l;
                if ("string" === a && l.length > 0) return function(l) {
                    if ((l = String(l)).length > 100) return;
                    var i = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(l);
                    if (!i) return;
                    var o = parseFloat(i[1]);
                    switch ((i[2] || "ms").toLowerCase()) {
                        case "years":
                        case "year":
                        case "yrs":
                        case "yr":
                        case "y":
                            return o * r;
                        case "weeks":
                        case "week":
                        case "w":
                            return o * e;
                        case "days":
                        case "day":
                        case "d":
                            return o * t;
                        case "hours":
                        case "hour":
                        case "hrs":
                        case "hr":
                        case "h":
                            return o * d;
                        case "minutes":
                        case "minute":
                        case "mins":
                        case "min":
                        case "m":
                            return o * u;
                        case "seconds":
                        case "second":
                        case "secs":
                        case "sec":
                        case "s":
                            return o * n;
                        case "milliseconds":
                        case "millisecond":
                        case "msecs":
                        case "msec":
                        case "ms":
                            return o;
                        default:
                            return
                    }
                }(l);
                if ("number" === a && isFinite(l)) return o.long ? function(l) {
                    var e = Math.abs(l);
                    if (e >= t) return i(l, e, t, "day");
                    if (e >= d) return i(l, e, d, "hour");
                    if (e >= u) return i(l, e, u, "minute");
                    if (e >= n) return i(l, e, n, "second");
                    return l + " ms"
                }(l) : function(l) {
                    var e = Math.abs(l);
                    if (e >= t) return Math.round(l / t) + "d";
                    if (e >= d) return Math.round(l / d) + "h";
                    if (e >= u) return Math.round(l / u) + "m";
                    if (e >= n) return Math.round(l / n) + "s";
                    return l + "ms"
                }(l);
                throw new Error("val is not a non-empty string or a valid number. val=" + JSON.stringify(l))
            }
        },
        755806: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => Cu
            });
            var d = u(601413),
                t = u(487462),
                e = u(215671),
                r = u(143144),
                i = u(497326),
                o = u(360136),
                a = u(661120);
            var $ = u(182963);

            function c(l) {
                var n = function() {
                    if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                    if (Reflect.construct.sham) return !1;
                    if ("function" === typeof Proxy) return !0;
                    try {
                        return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                    } catch (l) {
                        return !1
                    }
                }();
                return function() {
                    var u, d = (0, a.Z)(l);
                    if (n) {
                        var t = (0, a.Z)(this).constructor;
                        u = Reflect.construct(d, arguments, t)
                    } else u = d.apply(this, arguments);
                    return (0, $.Z)(this, u)
                }
            }
            var s = u(204942),
                f = u(184481),
                p = u.n(f),
                h = u(897170),
                v = u.n(h),
                m = function(l) {
                    return +setTimeout(l, 16)
                },
                g = function(l) {
                    return clearTimeout(l)
                };
            "undefined" !== typeof window && "requestAnimationFrame" in window && (m = function(l) {
                return window.requestAnimationFrame(l)
            }, g = function(l) {
                return window.cancelAnimationFrame(l)
            });
            var y = 0,
                b = new Map;

            function w(l) {
                b.delete(l)
            }

            function _(l) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1,
                    u = y += 1;

                function d(n) {
                    if (0 === n) w(u), l();
                    else {
                        var t = m((function() {
                            d(n - 1)
                        }));
                        b.set(u, t)
                    }
                }
                return d(n), u
            }

            function C(l, n) {
                if (!l) return !1;
                if (l.contains) return l.contains(n);
                for (var u = n; u;) {
                    if (u === l) return !0;
                    u = u.parentNode
                }
                return !1
            }

            function E(l) {
                return l instanceof HTMLElement ? l : v().findDOMNode(l)
            }
            _.cancel = function(l) {
                var n = b.get(l);
                return w(n), g(n)
            };
            var x = u(671002),
                S = u(211805);

            function A(l, n) {
                "function" === typeof l ? l(n) : "object" === (0, x.Z)(l) && l && "current" in l && (l.current = n)
            }

            function M() {
                for (var l = arguments.length, n = new Array(l), u = 0; u < l; u++) n[u] = arguments[u];
                var d = n.filter((function(l) {
                    return l
                }));
                return d.length <= 1 ? d[0] : function(l) {
                    n.forEach((function(n) {
                        A(n, l)
                    }))
                }
            }

            function O(l) {
                var n, u, d = (0, S.isMemo)(l) ? l.type.type : l.type;
                return !("function" === typeof d && !(null === (n = d.prototype) || void 0 === n ? void 0 : n.render)) && !("function" === typeof l && !(null === (u = l.prototype) || void 0 === u ? void 0 : u.render))
            }

            function P(l, n, u, d) {
                var t = v().unstable_batchedUpdates ? function(l) {
                    v().unstable_batchedUpdates(u, l)
                } : u;
                return l.addEventListener && l.addEventListener(n, t, d), {
                    remove: function() {
                        l.removeEventListener && l.removeEventListener(n, t, d)
                    }
                }
            }

            function F() {
                return !("undefined" === typeof window || !window.document || !window.document.createElement)
            }
            const T = (0, f.forwardRef)((function(l, n) {
                var u = l.didUpdate,
                    d = l.getContainer,
                    t = l.children,
                    e = (0, f.useRef)(),
                    r = (0, f.useRef)();
                (0, f.useImperativeHandle)(n, (function() {
                    return {}
                }));
                var i = (0, f.useRef)(!1);
                return !i.current && F() && (r.current = d(), e.current = r.current.parentNode, i.current = !0), (0, f.useEffect)((function() {
                    null === u || void 0 === u || u(l)
                })), (0, f.useEffect)((function() {
                    return null === r.current.parentNode && null !== e.current && e.current.appendChild(r.current),
                        function() {
                            var l, n;
                            null === (l = r.current) || void 0 === l || null === (n = l.parentNode) || void 0 === n || n.removeChild(r.current)
                        }
                }), []), r.current ? v().createPortal(t, r.current) : null
            }));
            var N = u(294184),
                I = u.n(N);

            function R(l, n, u) {
                return u ? l[0] === n[0] : l[0] === n[0] && l[1] === n[1]
            }
            var k = u(870885),
                D = u(145987);

            function L(l, n) {
                var u = {};
                return u[l.toLowerCase()] = n.toLowerCase(), u["Webkit".concat(l)] = "webkit".concat(n), u["Moz".concat(l)] = "moz".concat(n), u["ms".concat(l)] = "MS".concat(n), u["O".concat(l)] = "o".concat(n.toLowerCase()), u
            }
            var Z, B, j, G = (Z = F(), B = "undefined" !== typeof window ? window : {}, j = {
                    animationend: L("Animation", "AnimationEnd"),
                    transitionend: L("Transition", "TransitionEnd")
                }, Z && ("AnimationEvent" in B || delete j.animationend.animation, "TransitionEvent" in B || delete j.transitionend.transition), j),
                U = {};
            if (F()) {
                var V = document.createElement("div");
                U = V.style
            }
            var H = {};

            function W(l) {
                if (H[l]) return H[l];
                var n = G[l];
                if (n)
                    for (var u = Object.keys(n), d = u.length, t = 0; t < d; t += 1) {
                        var e = u[t];
                        if (Object.prototype.hasOwnProperty.call(n, e) && e in U) return H[l] = n[e], H[l]
                    }
                return ""
            }
            var K = W("animationend"),
                Y = W("transitionend"),
                z = !(!K || !Y),
                X = K || "animationend",
                J = Y || "transitionend";

            function Q(l, n) {
                return l ? "object" === (0, x.Z)(l) ? l[n.replace(/-\w/g, (function(l) {
                    return l[1].toUpperCase()
                }))] : "".concat(l, "-").concat(n) : null
            }
            var q = "none",
                ll = "appear",
                nl = "enter",
                ul = "leave",
                dl = "none",
                tl = "prepare",
                el = "start",
                rl = "active",
                il = "end";

            function ol(l) {
                var n = f.useRef(!1),
                    u = f.useState(l),
                    d = (0, k.Z)(u, 2),
                    t = d[0],
                    e = d[1];
                return f.useEffect((function() {
                    return n.current = !1,
                        function() {
                            n.current = !0
                        }
                }), []), [t, function(l, u) {
                    u && n.current || e(l)
                }]
            }
            const al = F() ? f.useLayoutEffect : f.useEffect;
            var $l = [tl, el, rl, il];

            function cl(l) {
                return l === rl || l === il
            }
            const sl = function(l, n) {
                var u = ol(dl),
                    d = (0, k.Z)(u, 2),
                    t = d[0],
                    e = d[1],
                    r = function() {
                        var l = f.useRef(null);

                        function n() {
                            _.cancel(l.current)
                        }
                        return f.useEffect((function() {
                            return function() {
                                n()
                            }
                        }), []), [function u(d) {
                            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                            n();
                            var e = _((function() {
                                t <= 1 ? d({
                                    isCanceled: function() {
                                        return e !== l.current
                                    }
                                }) : u(d, t - 1)
                            }));
                            l.current = e
                        }, n]
                    }(),
                    i = (0, k.Z)(r, 2),
                    o = i[0],
                    a = i[1];
                return al((function() {
                    if (t !== dl && t !== il) {
                        var l = $l.indexOf(t),
                            u = $l[l + 1],
                            d = n(t);
                        false === d ? e(u, !0) : o((function(l) {
                            function n() {
                                l.isCanceled() || e(u, !0)
                            }!0 === d ? n() : Promise.resolve(d).then(n)
                        }))
                    }
                }), [l, t]), f.useEffect((function() {
                    return function() {
                        a()
                    }
                }), []), [function() {
                    e(tl, !0)
                }, t]
            };

            function fl(l, n, u, t) {
                var e = t.motionEnter,
                    r = void 0 === e || e,
                    i = t.motionAppear,
                    o = void 0 === i || i,
                    a = t.motionLeave,
                    $ = void 0 === a || a,
                    c = t.motionDeadline,
                    p = t.motionLeaveImmediately,
                    h = t.onAppearPrepare,
                    v = t.onEnterPrepare,
                    m = t.onLeavePrepare,
                    g = t.onAppearStart,
                    y = t.onEnterStart,
                    b = t.onLeaveStart,
                    w = t.onAppearActive,
                    _ = t.onEnterActive,
                    C = t.onLeaveActive,
                    E = t.onAppearEnd,
                    x = t.onEnterEnd,
                    S = t.onLeaveEnd,
                    A = t.onVisibleChanged,
                    M = ol(),
                    O = (0, k.Z)(M, 2),
                    P = O[0],
                    F = O[1],
                    T = ol(q),
                    N = (0, k.Z)(T, 2),
                    I = N[0],
                    R = N[1],
                    D = ol(null),
                    L = (0, k.Z)(D, 2),
                    Z = L[0],
                    B = L[1],
                    j = (0, f.useRef)(!1),
                    G = (0, f.useRef)(null);

                function U() {
                    return u()
                }
                var V = (0, f.useRef)(!1);

                function H(l) {
                    var n = U();
                    if (!l || l.deadline || l.target === n) {
                        var u, d = V.current;
                        I === ll && d ? u = null === E || void 0 === E ? void 0 : E(n, l) : I === nl && d ? u = null === x || void 0 === x ? void 0 : x(n, l) : I === ul && d && (u = null === S || void 0 === S ? void 0 : S(n, l)), I !== q && d && !1 !== u && (R(q, !0), B(null, !0))
                    }
                }
                var W = function(l) {
                        var n = (0, f.useRef)(),
                            u = (0, f.useRef)(l);
                        u.current = l;
                        var d = f.useCallback((function(l) {
                            u.current(l)
                        }), []);

                        function t(l) {
                            l && (l.removeEventListener(J, d), l.removeEventListener(X, d))
                        }
                        return f.useEffect((function() {
                            return function() {
                                t(n.current)
                            }
                        }), []), [function(l) {
                            n.current && n.current !== l && t(n.current), l && l !== n.current && (l.addEventListener(J, d), l.addEventListener(X, d), n.current = l)
                        }, t]
                    }(H),
                    K = (0, k.Z)(W, 1)[0],
                    Y = f.useMemo((function() {
                        var l, n, u;
                        switch (I) {
                            case ll:
                                return l = {}, (0, s.Z)(l, tl, h), (0, s.Z)(l, el, g), (0, s.Z)(l, rl, w), l;
                            case nl:
                                return n = {}, (0, s.Z)(n, tl, v), (0, s.Z)(n, el, y), (0, s.Z)(n, rl, _), n;
                            case ul:
                                return u = {}, (0, s.Z)(u, tl, m), (0, s.Z)(u, el, b), (0, s.Z)(u, rl, C), u;
                            default:
                                return {}
                        }
                    }), [I]),
                    z = sl(I, (function(l) {
                        if (l === tl) {
                            var n = Y.prepare;
                            return !!n && n(U())
                        }
                        var u;
                        il in Y && B((null === (u = Y[il]) || void 0 === u ? void 0 : u.call(Y, U(), null)) || null);
                        return il === rl && (K(U()), c > 0 && (clearTimeout(G.current), G.current = setTimeout((function() {
                            H({
                                deadline: !0
                            })
                        }), c))), true
                    })),
                    Q = (0, k.Z)(z, 2),
                    dl = Q[0],
                    il = Q[1],
                    $l = cl(il);
                V.current = $l, al((function() {
                    F(n);
                    var u, d = j.current;
                    (j.current = !0, l) && (!d && n && o && (u = ll), d && n && r && (u = nl), (d && !n && $ || !d && p && !n && $) && (u = ul), u && (R(u), dl()))
                }), [n]), (0, f.useEffect)((function() {
                    (I === ll && !o || I === nl && !r || I === ul && !$) && R(q)
                }), [o, r, $]), (0, f.useEffect)((function() {
                    return function() {
                        j.current = !1, clearTimeout(G.current)
                    }
                }), []);
                var fl = f.useRef(!1);
                (0, f.useEffect)((function() {
                    P && (fl.current = !0), void 0 !== P && I === q && ((fl.current || P) && (null === A || void 0 === A || A(P)), fl.current = !0)
                }), [P, I]);
                var pl = Z;
                return Y.prepare && il === el && (pl = (0, d.Z)({
                    transition: "none"
                }, pl)), [I, il, pl, null !== P && void 0 !== P ? P : n]
            }
            const pl = function(l) {
                (0, o.Z)(u, l);
                var n = c(u);

                function u() {
                    return (0, e.Z)(this, u), n.apply(this, arguments)
                }
                return (0, r.Z)(u, [{
                    key: "render",
                    value: function() {
                        return this.props.children
                    }
                }]), u
            }(f.Component);
            const hl = function(l) {
                var n = l;

                function u(l) {
                    return !(!l.motionName || !n)
                }
                "object" === (0, x.Z)(l) && (n = l.transitionSupport);
                var t = f.forwardRef((function(l, n) {
                    var t = l.visible,
                        e = void 0 === t || t,
                        r = l.removeOnLeave,
                        i = void 0 === r || r,
                        o = l.forceRender,
                        a = l.children,
                        $ = l.motionName,
                        c = l.leavedClassName,
                        p = l.eventProps,
                        h = u(l),
                        v = (0, f.useRef)(),
                        m = (0, f.useRef)();
                    var g = fl(h, e, (function() {
                            try {
                                return v.current instanceof HTMLElement ? v.current : E(m.current)
                            } catch (l) {
                                return null
                            }
                        }), l),
                        y = (0, k.Z)(g, 4),
                        b = y[0],
                        w = y[1],
                        _ = y[2],
                        C = y[3],
                        x = f.useRef(C);
                    C && (x.current = !0);
                    var S, M = f.useCallback((function(l) {
                            v.current = l, A(n, l)
                        }), [n]),
                        P = (0, d.Z)((0, d.Z)({}, p), {}, {
                            visible: e
                        });
                    if (a)
                        if (b !== q && u(l)) {
                            var F, T;
                            w === tl ? T = "prepare" : cl(w) ? T = "active" : w === el && (T = "start"), S = a((0, d.Z)((0, d.Z)({}, P), {}, {
                                className: I()(Q($, b), (F = {}, (0, s.Z)(F, Q($, "".concat(b, "-").concat(T)), T), (0, s.Z)(F, $, "string" === typeof $), F)),
                                style: _
                            }), M)
                        } else S = C ? a((0, d.Z)({}, P), M) : !i && x.current ? a((0, d.Z)((0, d.Z)({}, P), {}, {
                            className: c
                        }), M) : o ? a((0, d.Z)((0, d.Z)({}, P), {}, {
                            style: {
                                display: "none"
                            }
                        }), M) : null;
                    else S = null;
                    f.isValidElement(S) && O(S) && (S.ref || (S = f.cloneElement(S, {
                        ref: M
                    })));
                    return f.createElement(pl, {
                        ref: m
                    }, S)
                }));
                return t.displayName = "CSSMotion", t
            }(z);
            var vl = "add",
                ml = "keep",
                gl = "remove",
                yl = "removed";

            function bl(l) {
                var n;
                return n = l && "object" === (0, x.Z)(l) && "key" in l ? l : {
                    key: l
                }, (0, d.Z)((0, d.Z)({}, n), {}, {
                    key: String(n.key)
                })
            }

            function wl() {
                var l = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
                return l.map(bl)
            }

            function _l() {
                var l = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
                    u = [],
                    t = 0,
                    e = n.length,
                    r = wl(l),
                    i = wl(n);
                r.forEach((function(l) {
                    for (var n = !1, r = t; r < e; r += 1) {
                        var o = i[r];
                        if (o.key === l.key) {
                            t < r && (u = u.concat(i.slice(t, r).map((function(l) {
                                return (0, d.Z)((0, d.Z)({}, l), {}, {
                                    status: vl
                                })
                            }))), t = r), u.push((0, d.Z)((0, d.Z)({}, o), {}, {
                                status: ml
                            })), t += 1, n = !0;
                            break
                        }
                    }
                    n || u.push((0, d.Z)((0, d.Z)({}, l), {}, {
                        status: gl
                    }))
                })), t < e && (u = u.concat(i.slice(t).map((function(l) {
                    return (0, d.Z)((0, d.Z)({}, l), {}, {
                        status: vl
                    })
                }))));
                var o = {};
                u.forEach((function(l) {
                    var n = l.key;
                    o[n] = (o[n] || 0) + 1
                }));
                var a = Object.keys(o).filter((function(l) {
                    return o[l] > 1
                }));
                return a.forEach((function(l) {
                    (u = u.filter((function(n) {
                        var u = n.key,
                            d = n.status;
                        return u !== l || d !== gl
                    }))).forEach((function(n) {
                        n.key === l && (n.status = ml)
                    }))
                })), u
            }
            var Cl = ["component", "children", "onVisibleChanged", "onAllRemoved"],
                El = ["status"],
                xl = ["eventProps", "visible", "children", "motionName", "motionAppear", "motionEnter", "motionLeave", "motionLeaveImmediately", "motionDeadline", "removeOnLeave", "leavedClassName", "onAppearStart", "onAppearActive", "onAppearEnd", "onEnterStart", "onEnterActive", "onEnterEnd", "onLeaveStart", "onLeaveActive", "onLeaveEnd"];
            ! function(l) {
                var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : hl,
                    u = function(l) {
                        (0, o.Z)(i, l);
                        var u = c(i);

                        function i() {
                            var l;
                            (0, e.Z)(this, i);
                            for (var n = arguments.length, t = new Array(n), r = 0; r < n; r++) t[r] = arguments[r];
                            return (l = u.call.apply(u, [this].concat(t))).state = {
                                keyEntities: []
                            }, l.removeKey = function(n) {
                                var u = l.state.keyEntities.map((function(l) {
                                    return l.key !== n ? l : (0, d.Z)((0, d.Z)({}, l), {}, {
                                        status: yl
                                    })
                                }));
                                return l.setState({
                                    keyEntities: u
                                }), u.filter((function(l) {
                                    return l.status !== yl
                                })).length
                            }, l
                        }
                        return (0, r.Z)(i, [{
                            key: "render",
                            value: function() {
                                var l = this,
                                    u = this.state.keyEntities,
                                    d = this.props,
                                    e = d.component,
                                    r = d.children,
                                    i = d.onVisibleChanged,
                                    o = d.onAllRemoved,
                                    a = (0, D.Z)(d, Cl),
                                    $ = e || f.Fragment,
                                    c = {};
                                return xl.forEach((function(l) {
                                    c[l] = a[l], delete a[l]
                                })), delete a.keys, f.createElement($, a, u.map((function(u) {
                                    var d = u.status,
                                        e = (0, D.Z)(u, El),
                                        a = d === vl || d === ml;
                                    return f.createElement(n, (0, t.Z)({}, c, {
                                        key: e.key,
                                        visible: a,
                                        eventProps: e,
                                        onVisibleChanged: function(n) {
                                            (null === i || void 0 === i || i(n, {
                                                key: e.key
                                            }), n) || 0 === l.removeKey(e.key) && o && o()
                                        }
                                    }), r)
                                })))
                            }
                        }], [{
                            key: "getDerivedStateFromProps",
                            value: function(l, n) {
                                var u = l.keys,
                                    d = n.keyEntities,
                                    t = wl(u);
                                return {
                                    keyEntities: _l(d, t).filter((function(l) {
                                        var n = d.find((function(n) {
                                            var u = n.key;
                                            return l.key === u
                                        }));
                                        return !n || n.status !== yl || l.status !== gl
                                    }))
                                }
                            }
                        }]), i
                    }(f.Component);
                u.defaultProps = {
                    component: "div"
                }
            }(z);
            const Sl = hl;

            function Al(l) {
                var n = l.prefixCls,
                    u = l.motion,
                    d = l.animation,
                    t = l.transitionName;
                return u || (d ? {
                    motionName: "".concat(n, "-").concat(d)
                } : t ? {
                    motionName: t
                } : null)
            }

            function Ml(l) {
                var n = l.prefixCls,
                    u = l.visible,
                    e = l.zIndex,
                    r = l.mask,
                    i = l.maskMotion,
                    o = l.maskAnimation,
                    a = l.maskTransitionName;
                if (!r) return null;
                var $ = {};
                return (i || a || o) && ($ = (0, d.Z)({
                    motionAppear: !0
                }, Al({
                    motion: i,
                    prefixCls: n,
                    transitionName: a,
                    animation: o
                }))), f.createElement(Sl, (0, t.Z)({}, $, {
                    visible: u,
                    removeOnLeave: !0
                }), (function(l) {
                    var u = l.className;
                    return f.createElement("div", {
                        style: {
                            zIndex: e
                        },
                        className: I()("".concat(n, "-mask"), u)
                    })
                }))
            }

            function Ol(l, n) {
                var u = Object.keys(l);
                if (Object.getOwnPropertySymbols) {
                    var d = Object.getOwnPropertySymbols(l);
                    n && (d = d.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(l, n).enumerable
                    }))), u.push.apply(u, d)
                }
                return u
            }

            function Pl(l) {
                for (var n = 1; n < arguments.length; n++) {
                    var u = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? Ol(Object(u), !0).forEach((function(n) {
                        Tl(l, n, u[n])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(u)) : Ol(Object(u)).forEach((function(n) {
                        Object.defineProperty(l, n, Object.getOwnPropertyDescriptor(u, n))
                    }))
                }
                return l
            }

            function Fl(l) {
                return Fl = "function" === typeof Symbol && "symbol" === typeof Symbol.iterator ? function(l) {
                    return typeof l
                } : function(l) {
                    return l && "function" === typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                }, Fl(l)
            }

            function Tl(l, n, u) {
                return n in l ? Object.defineProperty(l, n, {
                    value: u,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : l[n] = u, l
            }
            var Nl, Il = {
                Webkit: "-webkit-",
                Moz: "-moz-",
                ms: "-ms-",
                O: "-o-"
            };

            function Rl() {
                if (void 0 !== Nl) return Nl;
                Nl = "";
                var l = document.createElement("p").style;
                for (var n in Il) n + "Transform" in l && (Nl = n);
                return Nl
            }

            function kl() {
                return Rl() ? "".concat(Rl(), "TransitionProperty") : "transitionProperty"
            }

            function Dl() {
                return Rl() ? "".concat(Rl(), "Transform") : "transform"
            }

            function Ll(l, n) {
                var u = kl();
                u && (l.style[u] = n, "transitionProperty" !== u && (l.style.transitionProperty = n))
            }

            function Zl(l, n) {
                var u = Dl();
                u && (l.style[u] = n, "transform" !== u && (l.style.transform = n))
            }
            var Bl, jl = /matrix\((.*)\)/,
                Gl = /matrix3d\((.*)\)/;

            function Ul(l) {
                var n = l.style.display;
                l.style.display = "none", l.offsetHeight, l.style.display = n
            }

            function Vl(l, n, u) {
                var d = u;
                if ("object" !== Fl(n)) return "undefined" !== typeof d ? ("number" === typeof d && (d = "".concat(d, "px")), void(l.style[n] = d)) : Bl(l, n);
                for (var t in n) n.hasOwnProperty(t) && Vl(l, t, n[t])
            }

            function Hl(l, n) {
                var u = l["page".concat(n ? "Y" : "X", "Offset")],
                    d = "scroll".concat(n ? "Top" : "Left");
                if ("number" !== typeof u) {
                    var t = l.document;
                    "number" !== typeof(u = t.documentElement[d]) && (u = t.body[d])
                }
                return u
            }

            function Wl(l) {
                return Hl(l)
            }

            function Kl(l) {
                return Hl(l, !0)
            }

            function Yl(l) {
                var n = function(l) {
                        var n, u, d, t = l.ownerDocument,
                            e = t.body,
                            r = t && t.documentElement;
                        return n = l.getBoundingClientRect(), u = Math.floor(n.left), d = Math.floor(n.top), {
                            left: u -= r.clientLeft || e.clientLeft || 0,
                            top: d -= r.clientTop || e.clientTop || 0
                        }
                    }(l),
                    u = l.ownerDocument,
                    d = u.defaultView || u.parentWindow;
                return n.left += Wl(d), n.top += Kl(d), n
            }

            function zl(l) {
                return null !== l && void 0 !== l && l == l.window
            }

            function Xl(l) {
                return zl(l) ? l.document : 9 === l.nodeType ? l : l.ownerDocument
            }
            var Jl = new RegExp("^(".concat(/[\-+]?(?:\d*\.|)\d+(?:[eE][\-+]?\d+|)/.source, ")(?!px)[a-z%]+$"), "i"),
                Ql = /^(top|right|bottom|left)$/;

            function ql(l, n) {
                return "left" === l ? n.useCssRight ? "right" : l : n.useCssBottom ? "bottom" : l
            }

            function ln(l) {
                return "left" === l ? "right" : "right" === l ? "left" : "top" === l ? "bottom" : "bottom" === l ? "top" : void 0
            }

            function nn(l, n, u) {
                "static" === Vl(l, "position") && (l.style.position = "relative");
                var d = -999,
                    t = -999,
                    e = ql("left", u),
                    r = ql("top", u),
                    i = ln(e),
                    o = ln(r);
                "left" !== e && (d = 999), "top" !== r && (t = 999);
                var a, $ = "",
                    c = Yl(l);
                ("left" in n || "top" in n) && ($ = (a = l).style.transitionProperty || a.style[kl()] || "", Ll(l, "none")), "left" in n && (l.style[i] = "", l.style[e] = "".concat(d, "px")), "top" in n && (l.style[o] = "", l.style[r] = "".concat(t, "px")), Ul(l);
                var s = Yl(l),
                    f = {};
                for (var p in n)
                    if (n.hasOwnProperty(p)) {
                        var h = ql(p, u),
                            v = "left" === p ? d : t,
                            m = c[p] - s[p];
                        f[h] = h === p ? v + m : v - m
                    }
                Vl(l, f), Ul(l), ("left" in n || "top" in n) && Ll(l, $);
                var g = {};
                for (var y in n)
                    if (n.hasOwnProperty(y)) {
                        var b = ql(y, u),
                            w = n[y] - c[y];
                        g[b] = y === b ? f[b] + w : f[b] - w
                    }
                Vl(l, g)
            }

            function un(l, n) {
                var u = Yl(l),
                    d = function(l) {
                        var n = window.getComputedStyle(l, null),
                            u = n.getPropertyValue("transform") || n.getPropertyValue(Dl());
                        if (u && "none" !== u) {
                            var d = u.replace(/[^0-9\-.,]/g, "").split(",");
                            return {
                                x: parseFloat(d[12] || d[4], 0),
                                y: parseFloat(d[13] || d[5], 0)
                            }
                        }
                        return {
                            x: 0,
                            y: 0
                        }
                    }(l),
                    t = {
                        x: d.x,
                        y: d.y
                    };
                "left" in n && (t.x = d.x + n.left - u.left), "top" in n && (t.y = d.y + n.top - u.top),
                    function(l, n) {
                        var u = window.getComputedStyle(l, null),
                            d = u.getPropertyValue("transform") || u.getPropertyValue(Dl());
                        if (d && "none" !== d) {
                            var t, e = d.match(jl);
                            e ? ((t = (e = e[1]).split(",").map((function(l) {
                                return parseFloat(l, 10)
                            })))[4] = n.x, t[5] = n.y, Zl(l, "matrix(".concat(t.join(","), ")"))) : ((t = d.match(Gl)[1].split(",").map((function(l) {
                                return parseFloat(l, 10)
                            })))[12] = n.x, t[13] = n.y, Zl(l, "matrix3d(".concat(t.join(","), ")")))
                        } else Zl(l, "translateX(".concat(n.x, "px) translateY(").concat(n.y, "px) translateZ(0)"))
                    }(l, t)
            }

            function dn(l, n) {
                for (var u = 0; u < l.length; u++) n(l[u])
            }

            function tn(l) {
                return "border-box" === Bl(l, "boxSizing")
            }
            "undefined" !== typeof window && (Bl = window.getComputedStyle ? function(l, n, u) {
                var d = u,
                    t = "",
                    e = Xl(l);
                return (d = d || e.defaultView.getComputedStyle(l, null)) && (t = d.getPropertyValue(n) || d[n]), t
            } : function(l, n) {
                var u = l.currentStyle && l.currentStyle[n];
                if (Jl.test(u) && !Ql.test(n)) {
                    var d = l.style,
                        t = d.left,
                        e = l.runtimeStyle.left;
                    l.runtimeStyle.left = l.currentStyle.left, d.left = "fontSize" === n ? "1em" : u || 0, u = d.pixelLeft + "px", d.left = t, l.runtimeStyle.left = e
                }
                return "" === u ? "auto" : u
            });
            var en = ["margin", "border", "padding"];

            function rn(l, n, u) {
                var d, t = {},
                    e = l.style;
                for (d in n) n.hasOwnProperty(d) && (t[d] = e[d], e[d] = n[d]);
                for (d in u.call(l), n) n.hasOwnProperty(d) && (e[d] = t[d])
            }

            function on(l, n, u) {
                var d, t, e, r = 0;
                for (t = 0; t < n.length; t++)
                    if (d = n[t])
                        for (e = 0; e < u.length; e++) {
                            var i = void 0;
                            i = "border" === d ? "".concat(d).concat(u[e], "Width") : d + u[e], r += parseFloat(Bl(l, i)) || 0
                        }
                return r
            }
            var an = {
                getParent: function(l) {
                    var n = l;
                    do {
                        n = 11 === n.nodeType && n.host ? n.host : n.parentNode
                    } while (n && 1 !== n.nodeType && 9 !== n.nodeType);
                    return n
                }
            };

            function $n(l, n, u) {
                var d = u;
                if (zl(l)) return "width" === n ? an.viewportWidth(l) : an.viewportHeight(l);
                if (9 === l.nodeType) return "width" === n ? an.docWidth(l) : an.docHeight(l);
                var t = "width" === n ? ["Left", "Right"] : ["Top", "Bottom"],
                    e = "width" === n ? Math.floor(l.getBoundingClientRect().width) : Math.floor(l.getBoundingClientRect().height),
                    r = tn(l),
                    i = 0;
                (null === e || void 0 === e || e <= 0) && (e = void 0, (null === (i = Bl(l, n)) || void 0 === i || Number(i) < 0) && (i = l.style[n] || 0), i = parseFloat(i) || 0), void 0 === d && (d = r ? 1 : -1);
                var o = void 0 !== e || r,
                    a = e || i;
                return -1 === d ? o ? a - on(l, ["border", "padding"], t) : i : o ? 1 === d ? a : a + (2 === d ? -on(l, ["border"], t) : on(l, ["margin"], t)) : i + on(l, en.slice(d), t)
            }
            dn(["Width", "Height"], (function(l) {
                an["doc".concat(l)] = function(n) {
                    var u = n.document;
                    return Math.max(u.documentElement["scroll".concat(l)], u.body["scroll".concat(l)], an["viewport".concat(l)](u))
                }, an["viewport".concat(l)] = function(n) {
                    var u = "client".concat(l),
                        d = n.document,
                        t = d.body,
                        e = d.documentElement[u];
                    return "CSS1Compat" === d.compatMode && e || t && t[u] || e
                }
            }));
            var cn = {
                position: "absolute",
                visibility: "hidden",
                display: "block"
            };

            function sn() {
                for (var l = arguments.length, n = new Array(l), u = 0; u < l; u++) n[u] = arguments[u];
                var d, t = n[0];
                return 0 !== t.offsetWidth ? d = $n.apply(void 0, n) : rn(t, cn, (function() {
                    d = $n.apply(void 0, n)
                })), d
            }

            function fn(l, n) {
                for (var u in n) n.hasOwnProperty(u) && (l[u] = n[u]);
                return l
            }
            dn(["width", "height"], (function(l) {
                var n = l.charAt(0).toUpperCase() + l.slice(1);
                an["outer".concat(n)] = function(n, u) {
                    return n && sn(n, l, u ? 0 : 1)
                };
                var u = "width" === l ? ["Left", "Right"] : ["Top", "Bottom"];
                an[l] = function(n, d) {
                    var t = d;
                    return void 0 !== t ? n ? (tn(n) && (t += on(n, ["padding", "border"], u)), Vl(n, l, t)) : void 0 : n && sn(n, l, -1)
                }
            }));
            var pn = {
                getWindow: function(l) {
                    if (l && l.document && l.setTimeout) return l;
                    var n = l.ownerDocument || l;
                    return n.defaultView || n.parentWindow
                },
                getDocument: Xl,
                offset: function(l, n, u) {
                    if ("undefined" === typeof n) return Yl(l);
                    ! function(l, n, u) {
                        if (u.ignoreShake) {
                            var d = Yl(l),
                                t = d.left.toFixed(0),
                                e = d.top.toFixed(0),
                                r = n.left.toFixed(0),
                                i = n.top.toFixed(0);
                            if (t === r && e === i) return
                        }
                        u.useCssRight || u.useCssBottom ? nn(l, n, u) : u.useCssTransform && Dl() in document.body.style ? un(l, n) : nn(l, n, u)
                    }(l, n, u || {})
                },
                isWindow: zl,
                each: dn,
                css: Vl,
                clone: function(l) {
                    var n, u = {};
                    for (n in l) l.hasOwnProperty(n) && (u[n] = l[n]);
                    if (l.overflow)
                        for (n in l) l.hasOwnProperty(n) && (u.overflow[n] = l.overflow[n]);
                    return u
                },
                mix: fn,
                getWindowScrollLeft: function(l) {
                    return Wl(l)
                },
                getWindowScrollTop: function(l) {
                    return Kl(l)
                },
                merge: function() {
                    for (var l = {}, n = 0; n < arguments.length; n++) pn.mix(l, n < 0 || arguments.length <= n ? void 0 : arguments[n]);
                    return l
                },
                viewportWidth: 0,
                viewportHeight: 0
            };
            fn(pn, an);
            var hn = pn.getParent;

            function vn(l) {
                if (pn.isWindow(l) || 9 === l.nodeType) return null;
                var n, u = pn.getDocument(l).body,
                    d = pn.css(l, "position");
                if (!("fixed" === d || "absolute" === d)) return "html" === l.nodeName.toLowerCase() ? null : hn(l);
                for (n = hn(l); n && n !== u && 9 !== n.nodeType; n = hn(n))
                    if ("static" !== (d = pn.css(n, "position"))) return n;
                return null
            }
            var mn = pn.getParent;

            function gn(l, n) {
                for (var u = {
                        left: 0,
                        right: 1 / 0,
                        top: 0,
                        bottom: 1 / 0
                    }, d = vn(l), t = pn.getDocument(l), e = t.defaultView || t.parentWindow, r = t.body, i = t.documentElement; d;) {
                    if (-1 !== navigator.userAgent.indexOf("MSIE") && 0 === d.clientWidth || d === r || d === i || "visible" === pn.css(d, "overflow")) {
                        if (d === r || d === i) break
                    } else {
                        var o = pn.offset(d);
                        o.left += d.clientLeft, o.top += d.clientTop, u.top = Math.max(u.top, o.top), u.right = Math.min(u.right, o.left + d.clientWidth), u.bottom = Math.min(u.bottom, o.top + d.clientHeight), u.left = Math.max(u.left, o.left)
                    }
                    d = vn(d)
                }
                var a = null;
                pn.isWindow(l) || 9 === l.nodeType || (a = l.style.position, "absolute" === pn.css(l, "position") && (l.style.position = "fixed"));
                var $ = pn.getWindowScrollLeft(e),
                    c = pn.getWindowScrollTop(e),
                    s = pn.viewportWidth(e),
                    f = pn.viewportHeight(e),
                    p = i.scrollWidth,
                    h = i.scrollHeight,
                    v = window.getComputedStyle(r);
                if ("hidden" === v.overflowX && (p = e.innerWidth), "hidden" === v.overflowY && (h = e.innerHeight), l.style && (l.style.position = a), n || function(l) {
                        if (pn.isWindow(l) || 9 === l.nodeType) return !1;
                        var n = pn.getDocument(l),
                            u = n.body,
                            d = null;
                        for (d = mn(l); d && d !== u && d !== n; d = mn(d))
                            if ("fixed" === pn.css(d, "position")) return !0;
                        return !1
                    }(l)) u.left = Math.max(u.left, $), u.top = Math.max(u.top, c), u.right = Math.min(u.right, $ + s), u.bottom = Math.min(u.bottom, c + f);
                else {
                    var m = Math.max(p, $ + s);
                    u.right = Math.min(u.right, m);
                    var g = Math.max(h, c + f);
                    u.bottom = Math.min(u.bottom, g)
                }
                return u.top >= 0 && u.left >= 0 && u.bottom > u.top && u.right > u.left ? u : null
            }

            function yn(l) {
                var n, u, d;
                if (pn.isWindow(l) || 9 === l.nodeType) {
                    var t = pn.getWindow(l);
                    n = {
                        left: pn.getWindowScrollLeft(t),
                        top: pn.getWindowScrollTop(t)
                    }, u = pn.viewportWidth(t), d = pn.viewportHeight(t)
                } else n = pn.offset(l), u = pn.outerWidth(l), d = pn.outerHeight(l);
                return n.width = u, n.height = d, n
            }

            function bn(l, n) {
                var u = n.charAt(0),
                    d = n.charAt(1),
                    t = l.width,
                    e = l.height,
                    r = l.left,
                    i = l.top;
                return "c" === u ? i += e / 2 : "b" === u && (i += e), "c" === d ? r += t / 2 : "r" === d && (r += t), {
                    left: r,
                    top: i
                }
            }

            function wn(l, n, u, d, t) {
                var e = bn(n, u[1]),
                    r = bn(l, u[0]),
                    i = [r.left - e.left, r.top - e.top];
                return {
                    left: Math.round(l.left - i[0] + d[0] - t[0]),
                    top: Math.round(l.top - i[1] + d[1] - t[1])
                }
            }

            function _n(l, n, u) {
                return l.left < u.left || l.left + n.width > u.right
            }

            function Cn(l, n, u) {
                return l.top < u.top || l.top + n.height > u.bottom
            }

            function En(l, n, u) {
                var d = [];
                return pn.each(l, (function(l) {
                    d.push(l.replace(n, (function(l) {
                        return u[l]
                    })))
                })), d
            }

            function xn(l, n) {
                return l[n] = -l[n], l
            }

            function Sn(l, n) {
                return (/%$/.test(l) ? parseInt(l.substring(0, l.length - 1), 10) / 100 * n : parseInt(l, 10)) || 0
            }

            function An(l, n) {
                l[0] = Sn(l[0], n.width), l[1] = Sn(l[1], n.height)
            }

            function Mn(l, n, u, d) {
                var t = u.points,
                    e = u.offset || [0, 0],
                    r = u.targetOffset || [0, 0],
                    i = u.overflow,
                    o = u.source || l;
                e = [].concat(e), r = [].concat(r);
                var a = {},
                    $ = 0,
                    c = gn(o, !(!(i = i || {}) || !i.alwaysByViewport)),
                    s = yn(o);
                An(e, s), An(r, n);
                var f = wn(s, n, t, e, r),
                    p = pn.merge(s, f);
                if (c && (i.adjustX || i.adjustY) && d) {
                    if (i.adjustX && _n(f, s, c)) {
                        var h = En(t, /[lr]/gi, {
                                l: "r",
                                r: "l"
                            }),
                            v = xn(e, 0),
                            m = xn(r, 0);
                        (function(l, n, u) {
                            return l.left > u.right || l.left + n.width < u.left
                        })(wn(s, n, h, v, m), s, c) || ($ = 1, t = h, e = v, r = m)
                    }
                    if (i.adjustY && Cn(f, s, c)) {
                        var g = En(t, /[tb]/gi, {
                                t: "b",
                                b: "t"
                            }),
                            y = xn(e, 1),
                            b = xn(r, 1);
                        (function(l, n, u) {
                            return l.top > u.bottom || l.top + n.height < u.top
                        })(wn(s, n, g, y, b), s, c) || ($ = 1, t = g, e = y, r = b)
                    }
                    $ && (f = wn(s, n, t, e, r), pn.mix(p, f));
                    var w = _n(f, s, c),
                        _ = Cn(f, s, c);
                    if (w || _) {
                        var C = t;
                        w && (C = En(t, /[lr]/gi, {
                            l: "r",
                            r: "l"
                        })), _ && (C = En(t, /[tb]/gi, {
                            t: "b",
                            b: "t"
                        })), t = C, e = u.offset || [0, 0], r = u.targetOffset || [0, 0]
                    }
                    a.adjustX = i.adjustX && w, a.adjustY = i.adjustY && _, (a.adjustX || a.adjustY) && (p = function(l, n, u, d) {
                        var t = pn.clone(l),
                            e = {
                                width: n.width,
                                height: n.height
                            };
                        return d.adjustX && t.left < u.left && (t.left = u.left), d.resizeWidth && t.left >= u.left && t.left + e.width > u.right && (e.width -= t.left + e.width - u.right), d.adjustX && t.left + e.width > u.right && (t.left = Math.max(u.right - e.width, u.left)), d.adjustY && t.top < u.top && (t.top = u.top), d.resizeHeight && t.top >= u.top && t.top + e.height > u.bottom && (e.height -= t.top + e.height - u.bottom), d.adjustY && t.top + e.height > u.bottom && (t.top = Math.max(u.bottom - e.height, u.top)), pn.mix(t, e)
                    }(f, s, c, a))
                }
                return p.width !== s.width && pn.css(o, "width", pn.width(o) + p.width - s.width), p.height !== s.height && pn.css(o, "height", pn.height(o) + p.height - s.height), pn.offset(o, {
                    left: p.left,
                    top: p.top
                }, {
                    useCssRight: u.useCssRight,
                    useCssBottom: u.useCssBottom,
                    useCssTransform: u.useCssTransform,
                    ignoreShake: u.ignoreShake
                }), {
                    points: t,
                    offset: e,
                    targetOffset: r,
                    overflow: a
                }
            }

            function On(l, n, u) {
                var d = u.target || n,
                    t = yn(d),
                    e = ! function(l, n) {
                        var u = gn(l, n),
                            d = yn(l);
                        return !u || d.left + d.width <= u.left || d.top + d.height <= u.top || d.left >= u.right || d.top >= u.bottom
                    }(d, u.overflow && u.overflow.alwaysByViewport);
                return Mn(l, t, u, e)
            }
            On.__getOffsetParent = vn, On.__getVisibleRectForElement = gn;
            var Pn = u(618446),
                Fn = u.n(Pn),
                Tn = function() {
                    if ("undefined" !== typeof Map) return Map;

                    function l(l, n) {
                        var u = -1;
                        return l.some((function(l, d) {
                            return l[0] === n && (u = d, !0)
                        })), u
                    }
                    return function() {
                        function n() {
                            this.__entries__ = []
                        }
                        return Object.defineProperty(n.prototype, "size", {
                            get: function() {
                                return this.__entries__.length
                            },
                            enumerable: !0,
                            configurable: !0
                        }), n.prototype.get = function(n) {
                            var u = l(this.__entries__, n),
                                d = this.__entries__[u];
                            return d && d[1]
                        }, n.prototype.set = function(n, u) {
                            var d = l(this.__entries__, n);
                            ~d ? this.__entries__[d][1] = u : this.__entries__.push([n, u])
                        }, n.prototype.delete = function(n) {
                            var u = this.__entries__,
                                d = l(u, n);
                            ~d && u.splice(d, 1)
                        }, n.prototype.has = function(n) {
                            return !!~l(this.__entries__, n)
                        }, n.prototype.clear = function() {
                            this.__entries__.splice(0)
                        }, n.prototype.forEach = function(l, n) {
                            void 0 === n && (n = null);
                            for (var u = 0, d = this.__entries__; u < d.length; u++) {
                                var t = d[u];
                                l.call(n, t[1], t[0])
                            }
                        }, n
                    }()
                }(),
                Nn = "undefined" !== typeof window && "undefined" !== typeof document && window.document === document,
                In = "undefined" !== typeof u.g && u.g.Math === Math ? u.g : "undefined" !== typeof self && self.Math === Math ? self : "undefined" !== typeof window && window.Math === Math ? window : Function("return this")(),
                Rn = "function" === typeof requestAnimationFrame ? requestAnimationFrame.bind(In) : function(l) {
                    return setTimeout((function() {
                        return l(Date.now())
                    }), 1e3 / 60)
                };
            var kn = ["top", "right", "bottom", "left", "width", "height", "size", "weight"],
                Dn = "undefined" !== typeof MutationObserver,
                Ln = function() {
                    function l() {
                        this.connected_ = !1, this.mutationEventsAdded_ = !1, this.mutationsObserver_ = null, this.observers_ = [], this.onTransitionEnd_ = this.onTransitionEnd_.bind(this), this.refresh = function(l, n) {
                            var u = !1,
                                d = !1,
                                t = 0;

                            function e() {
                                u && (u = !1, l()), d && i()
                            }

                            function r() {
                                Rn(e)
                            }

                            function i() {
                                var l = Date.now();
                                if (u) {
                                    if (l - t < 2) return;
                                    d = !0
                                } else u = !0, d = !1, setTimeout(r, n);
                                t = l
                            }
                            return i
                        }(this.refresh.bind(this), 20)
                    }
                    return l.prototype.addObserver = function(l) {
                        ~this.observers_.indexOf(l) || this.observers_.push(l), this.connected_ || this.connect_()
                    }, l.prototype.removeObserver = function(l) {
                        var n = this.observers_,
                            u = n.indexOf(l);
                        ~u && n.splice(u, 1), !n.length && this.connected_ && this.disconnect_()
                    }, l.prototype.refresh = function() {
                        this.updateObservers_() && this.refresh()
                    }, l.prototype.updateObservers_ = function() {
                        var l = this.observers_.filter((function(l) {
                            return l.gatherActive(), l.hasActive()
                        }));
                        return l.forEach((function(l) {
                            return l.broadcastActive()
                        })), l.length > 0
                    }, l.prototype.connect_ = function() {
                        Nn && !this.connected_ && (document.addEventListener("transitionend", this.onTransitionEnd_), window.addEventListener("resize", this.refresh), Dn ? (this.mutationsObserver_ = new MutationObserver(this.refresh), this.mutationsObserver_.observe(document, {
                            attributes: !0,
                            childList: !0,
                            characterData: !0,
                            subtree: !0
                        })) : (document.addEventListener("DOMSubtreeModified", this.refresh), this.mutationEventsAdded_ = !0), this.connected_ = !0)
                    }, l.prototype.disconnect_ = function() {
                        Nn && this.connected_ && (document.removeEventListener("transitionend", this.onTransitionEnd_), window.removeEventListener("resize", this.refresh), this.mutationsObserver_ && this.mutationsObserver_.disconnect(), this.mutationEventsAdded_ && document.removeEventListener("DOMSubtreeModified", this.refresh), this.mutationsObserver_ = null, this.mutationEventsAdded_ = !1, this.connected_ = !1)
                    }, l.prototype.onTransitionEnd_ = function(l) {
                        var n = l.propertyName,
                            u = void 0 === n ? "" : n;
                        kn.some((function(l) {
                            return !!~u.indexOf(l)
                        })) && this.refresh()
                    }, l.getInstance = function() {
                        return this.instance_ || (this.instance_ = new l), this.instance_
                    }, l.instance_ = null, l
                }(),
                Zn = function(l, n) {
                    for (var u = 0, d = Object.keys(n); u < d.length; u++) {
                        var t = d[u];
                        Object.defineProperty(l, t, {
                            value: n[t],
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        })
                    }
                    return l
                },
                Bn = function(l) {
                    return l && l.ownerDocument && l.ownerDocument.defaultView || In
                },
                jn = Kn(0, 0, 0, 0);

            function Gn(l) {
                return parseFloat(l) || 0
            }

            function Un(l) {
                for (var n = [], u = 1; u < arguments.length; u++) n[u - 1] = arguments[u];
                return n.reduce((function(n, u) {
                    return n + Gn(l["border-" + u + "-width"])
                }), 0)
            }

            function Vn(l) {
                var n = l.clientWidth,
                    u = l.clientHeight;
                if (!n && !u) return jn;
                var d = Bn(l).getComputedStyle(l),
                    t = function(l) {
                        for (var n = {}, u = 0, d = ["top", "right", "bottom", "left"]; u < d.length; u++) {
                            var t = d[u],
                                e = l["padding-" + t];
                            n[t] = Gn(e)
                        }
                        return n
                    }(d),
                    e = t.left + t.right,
                    r = t.top + t.bottom,
                    i = Gn(d.width),
                    o = Gn(d.height);
                if ("border-box" === d.boxSizing && (Math.round(i + e) !== n && (i -= Un(d, "left", "right") + e), Math.round(o + r) !== u && (o -= Un(d, "top", "bottom") + r)), ! function(l) {
                        return l === Bn(l).document.documentElement
                    }(l)) {
                    var a = Math.round(i + e) - n,
                        $ = Math.round(o + r) - u;
                    1 !== Math.abs(a) && (i -= a), 1 !== Math.abs($) && (o -= $)
                }
                return Kn(t.left, t.top, i, o)
            }
            var Hn = "undefined" !== typeof SVGGraphicsElement ? function(l) {
                return l instanceof Bn(l).SVGGraphicsElement
            } : function(l) {
                return l instanceof Bn(l).SVGElement && "function" === typeof l.getBBox
            };

            function Wn(l) {
                return Nn ? Hn(l) ? function(l) {
                    var n = l.getBBox();
                    return Kn(0, 0, n.width, n.height)
                }(l) : Vn(l) : jn
            }

            function Kn(l, n, u, d) {
                return {
                    x: l,
                    y: n,
                    width: u,
                    height: d
                }
            }
            var Yn = function() {
                    function l(l) {
                        this.broadcastWidth = 0, this.broadcastHeight = 0, this.contentRect_ = Kn(0, 0, 0, 0), this.target = l
                    }
                    return l.prototype.isActive = function() {
                        var l = Wn(this.target);
                        return this.contentRect_ = l, l.width !== this.broadcastWidth || l.height !== this.broadcastHeight
                    }, l.prototype.broadcastRect = function() {
                        var l = this.contentRect_;
                        return this.broadcastWidth = l.width, this.broadcastHeight = l.height, l
                    }, l
                }(),
                zn = function(l, n) {
                    var u, d, t, e, r, i, o, a = (d = (u = n).x, t = u.y, e = u.width, r = u.height, i = "undefined" !== typeof DOMRectReadOnly ? DOMRectReadOnly : Object, o = Object.create(i.prototype), Zn(o, {
                        x: d,
                        y: t,
                        width: e,
                        height: r,
                        top: t,
                        right: d + e,
                        bottom: r + t,
                        left: d
                    }), o);
                    Zn(this, {
                        target: l,
                        contentRect: a
                    })
                },
                Xn = function() {
                    function l(l, n, u) {
                        if (this.activeObservations_ = [], this.observations_ = new Tn, "function" !== typeof l) throw new TypeError("The callback provided as parameter 1 is not a function.");
                        this.callback_ = l, this.controller_ = n, this.callbackCtx_ = u
                    }
                    return l.prototype.observe = function(l) {
                        if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
                        if ("undefined" !== typeof Element && Element instanceof Object) {
                            if (!(l instanceof Bn(l).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                            var n = this.observations_;
                            n.has(l) || (n.set(l, new Yn(l)), this.controller_.addObserver(this), this.controller_.refresh())
                        }
                    }, l.prototype.unobserve = function(l) {
                        if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
                        if ("undefined" !== typeof Element && Element instanceof Object) {
                            if (!(l instanceof Bn(l).Element)) throw new TypeError('parameter 1 is not of type "Element".');
                            var n = this.observations_;
                            n.has(l) && (n.delete(l), n.size || this.controller_.removeObserver(this))
                        }
                    }, l.prototype.disconnect = function() {
                        this.clearActive(), this.observations_.clear(), this.controller_.removeObserver(this)
                    }, l.prototype.gatherActive = function() {
                        var l = this;
                        this.clearActive(), this.observations_.forEach((function(n) {
                            n.isActive() && l.activeObservations_.push(n)
                        }))
                    }, l.prototype.broadcastActive = function() {
                        if (this.hasActive()) {
                            var l = this.callbackCtx_,
                                n = this.activeObservations_.map((function(l) {
                                    return new zn(l.target, l.broadcastRect())
                                }));
                            this.callback_.call(l, n, l), this.clearActive()
                        }
                    }, l.prototype.clearActive = function() {
                        this.activeObservations_.splice(0)
                    }, l.prototype.hasActive = function() {
                        return this.activeObservations_.length > 0
                    }, l
                }(),
                Jn = "undefined" !== typeof WeakMap ? new WeakMap : new Tn,
                Qn = function l(n) {
                    if (!(this instanceof l)) throw new TypeError("Cannot call a class as a function.");
                    if (!arguments.length) throw new TypeError("1 argument required, but only 0 present.");
                    var u = Ln.getInstance(),
                        d = new Xn(n, u, this);
                    Jn.set(this, d)
                };
            ["observe", "unobserve", "disconnect"].forEach((function(l) {
                Qn.prototype[l] = function() {
                    var n;
                    return (n = Jn.get(this))[l].apply(n, arguments)
                }
            }));
            const qn = "undefined" !== typeof In.ResizeObserver ? In.ResizeObserver : Qn;

            function lu(l, n) {
                var u = null,
                    d = null;
                var t = new qn((function(l) {
                    var t = (0, k.Z)(l, 1)[0].target;
                    if (document.documentElement.contains(t)) {
                        var e = t.getBoundingClientRect(),
                            r = e.width,
                            i = e.height,
                            o = Math.floor(r),
                            a = Math.floor(i);
                        u === o && d === a || Promise.resolve().then((function() {
                            n({
                                width: o,
                                height: a
                            })
                        })), u = o, d = a
                    }
                }));
                return l && t.observe(l),
                    function() {
                        t.disconnect()
                    }
            }

            function nu(l) {
                return "function" !== typeof l ? null : l()
            }

            function uu(l) {
                return "object" === (0, x.Z)(l) && l ? l : null
            }
            var du = function(l, n) {
                    var u = l.children,
                        d = l.disabled,
                        t = l.target,
                        e = l.align,
                        r = l.onAlign,
                        i = l.monitorWindowResize,
                        o = l.monitorBufferTime,
                        a = void 0 === o ? 0 : o,
                        $ = p().useRef({}),
                        c = p().useRef(),
                        s = p().Children.only(u),
                        f = p().useRef({});
                    f.current.disabled = d, f.current.target = t, f.current.align = e, f.current.onAlign = r;
                    var h = function(l, n) {
                            var u = p().useRef(!1),
                                d = p().useRef(null);

                            function t() {
                                window.clearTimeout(d.current)
                            }
                            return [function e(r) {
                                if (t(), u.current && !0 !== r) d.current = window.setTimeout((function() {
                                    u.current = !1, e()
                                }), n);
                                else {
                                    if (!1 === l()) return;
                                    u.current = !0, d.current = window.setTimeout((function() {
                                        u.current = !1
                                    }), n)
                                }
                            }, function() {
                                u.current = !1, t()
                            }]
                        }((function() {
                            var l = f.current,
                                n = l.disabled,
                                u = l.target,
                                d = l.align,
                                t = l.onAlign;
                            if (!n && u) {
                                var e, r = c.current,
                                    i = nu(u),
                                    o = uu(u);
                                $.current.element = i, $.current.point = o, $.current.align = d;
                                var a = document.activeElement;
                                return i && function(l) {
                                        if (!l) return !1;
                                        if (l instanceof HTMLElement && l.offsetParent) return !0;
                                        if (l instanceof SVGGraphicsElement && l.getBBox) {
                                            var n = l.getBBox(),
                                                u = n.width,
                                                d = n.height;
                                            if (u || d) return !0
                                        }
                                        if (l instanceof HTMLElement && l.getBoundingClientRect) {
                                            var t = l.getBoundingClientRect(),
                                                e = t.width,
                                                r = t.height;
                                            if (e || r) return !0
                                        }
                                        return !1
                                    }(i) ? e = On(r, i, d) : o && (e = function(l, n, u) {
                                        var d, t, e = pn.getDocument(l),
                                            r = e.defaultView || e.parentWindow,
                                            i = pn.getWindowScrollLeft(r),
                                            o = pn.getWindowScrollTop(r),
                                            a = pn.viewportWidth(r),
                                            $ = pn.viewportHeight(r),
                                            c = {
                                                left: d = "pageX" in n ? n.pageX : i + n.clientX,
                                                top: t = "pageY" in n ? n.pageY : o + n.clientY,
                                                width: 0,
                                                height: 0
                                            },
                                            s = d >= 0 && d <= i + a && t >= 0 && t <= o + $,
                                            f = [u.points[0], "cc"];
                                        return Mn(l, c, Pl(Pl({}, u), {}, {
                                            points: f
                                        }), s)
                                    }(r, o, d)),
                                    function(l, n) {
                                        l !== document.activeElement && C(n, l) && "function" === typeof l.focus && l.focus()
                                    }(a, r), t && e && t(r, e), !0
                            }
                            return !1
                        }), a),
                        v = (0, k.Z)(h, 2),
                        m = v[0],
                        g = v[1],
                        y = p().useRef({
                            cancel: function() {}
                        }),
                        b = p().useRef({
                            cancel: function() {}
                        });
                    p().useEffect((function() {
                        var l, n, u = nu(t),
                            d = uu(t);
                        c.current !== b.current.element && (b.current.cancel(), b.current.element = c.current, b.current.cancel = lu(c.current, m)), $.current.element === u && ((l = $.current.point) === (n = d) || l && n && ("pageX" in n && "pageY" in n ? l.pageX === n.pageX && l.pageY === n.pageY : "clientX" in n && "clientY" in n && l.clientX === n.clientX && l.clientY === n.clientY)) && Fn()($.current.align, e) || (m(), y.current.element !== u && (y.current.cancel(), y.current.element = u, y.current.cancel = lu(u, m)))
                    })), p().useEffect((function() {
                        d ? g() : m()
                    }), [d]);
                    var w = p().useRef(null);
                    return p().useEffect((function() {
                        i ? w.current || (w.current = P(window, "resize", m)) : w.current && (w.current.remove(), w.current = null)
                    }), [i]), p().useEffect((function() {
                        return function() {
                            y.current.cancel(), b.current.cancel(), w.current && w.current.remove(), g()
                        }
                    }), []), p().useImperativeHandle(n, (function() {
                        return {
                            forceAlign: function() {
                                return m(!0)
                            }
                        }
                    })), p().isValidElement(s) && (s = p().cloneElement(s, {
                        ref: M(s.ref, c)
                    })), s
                },
                tu = p().forwardRef(du);
            tu.displayName = "Align";
            const eu = tu;
            var ru = F() ? f.useLayoutEffect : f.useEffect;
            const iu = ru;

            function ou() {
                ou = function() {
                    return l
                };
                var l = {},
                    n = Object.prototype,
                    u = n.hasOwnProperty,
                    d = "function" == typeof Symbol ? Symbol : {},
                    t = d.iterator || "@@iterator",
                    e = d.asyncIterator || "@@asyncIterator",
                    r = d.toStringTag || "@@toStringTag";

                function i(l, n, u) {
                    return Object.defineProperty(l, n, {
                        value: u,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), l[n]
                }
                try {
                    i({}, "")
                } catch (l) {
                    i = function(l, n, u) {
                        return l[n] = u
                    }
                }

                function o(l, n, u, d) {
                    var t = n && n.prototype instanceof c ? n : c,
                        e = Object.create(t.prototype),
                        r = new C(d || []);
                    return e._invoke = function(l, n, u) {
                        var d = "suspendedStart";
                        return function(t, e) {
                            if ("executing" === d) throw new Error("Generator is already running");
                            if ("completed" === d) {
                                if ("throw" === t) throw e;
                                return S()
                            }
                            for (u.method = t, u.arg = e;;) {
                                var r = u.delegate;
                                if (r) {
                                    var i = b(r, u);
                                    if (i) {
                                        if (i === $) continue;
                                        return i
                                    }
                                }
                                if ("next" === u.method) u.sent = u._sent = u.arg;
                                else if ("throw" === u.method) {
                                    if ("suspendedStart" === d) throw d = "completed", u.arg;
                                    u.dispatchException(u.arg)
                                } else "return" === u.method && u.abrupt("return", u.arg);
                                d = "executing";
                                var o = a(l, n, u);
                                if ("normal" === o.type) {
                                    if (d = u.done ? "completed" : "suspendedYield", o.arg === $) continue;
                                    return {
                                        value: o.arg,
                                        done: u.done
                                    }
                                }
                                "throw" === o.type && (d = "completed", u.method = "throw", u.arg = o.arg)
                            }
                        }
                    }(l, u, r), e
                }

                function a(l, n, u) {
                    try {
                        return {
                            type: "normal",
                            arg: l.call(n, u)
                        }
                    } catch (l) {
                        return {
                            type: "throw",
                            arg: l
                        }
                    }
                }
                l.wrap = o;
                var $ = {};

                function c() {}

                function s() {}

                function f() {}
                var p = {};
                i(p, t, (function() {
                    return this
                }));
                var h = Object.getPrototypeOf,
                    v = h && h(h(E([])));
                v && v !== n && u.call(v, t) && (p = v);
                var m = f.prototype = c.prototype = Object.create(p);

                function g(l) {
                    ["next", "throw", "return"].forEach((function(n) {
                        i(l, n, (function(l) {
                            return this._invoke(n, l)
                        }))
                    }))
                }

                function y(l, n) {
                    function d(t, e, r, i) {
                        var o = a(l[t], l, e);
                        if ("throw" !== o.type) {
                            var $ = o.arg,
                                c = $.value;
                            return c && "object" == (0, x.Z)(c) && u.call(c, "__await") ? n.resolve(c.__await).then((function(l) {
                                d("next", l, r, i)
                            }), (function(l) {
                                d("throw", l, r, i)
                            })) : n.resolve(c).then((function(l) {
                                $.value = l, r($)
                            }), (function(l) {
                                return d("throw", l, r, i)
                            }))
                        }
                        i(o.arg)
                    }
                    var t;
                    this._invoke = function(l, u) {
                        function e() {
                            return new n((function(n, t) {
                                d(l, u, n, t)
                            }))
                        }
                        return t = t ? t.then(e, e) : e()
                    }
                }

                function b(l, n) {
                    var u = l.iterator[n.method];
                    if (void 0 === u) {
                        if (n.delegate = null, "throw" === n.method) {
                            if (l.iterator.return && (n.method = "return", n.arg = void 0, b(l, n), "throw" === n.method)) return $;
                            n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method")
                        }
                        return $
                    }
                    var d = a(u, l.iterator, n.arg);
                    if ("throw" === d.type) return n.method = "throw", n.arg = d.arg, n.delegate = null, $;
                    var t = d.arg;
                    return t ? t.done ? (n[l.resultName] = t.value, n.next = l.nextLoc, "return" !== n.method && (n.method = "next", n.arg = void 0), n.delegate = null, $) : t : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, $)
                }

                function w(l) {
                    var n = {
                        tryLoc: l[0]
                    };
                    1 in l && (n.catchLoc = l[1]), 2 in l && (n.finallyLoc = l[2], n.afterLoc = l[3]), this.tryEntries.push(n)
                }

                function _(l) {
                    var n = l.completion || {};
                    n.type = "normal", delete n.arg, l.completion = n
                }

                function C(l) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], l.forEach(w, this), this.reset(!0)
                }

                function E(l) {
                    if (l) {
                        var n = l[t];
                        if (n) return n.call(l);
                        if ("function" == typeof l.next) return l;
                        if (!isNaN(l.length)) {
                            var d = -1,
                                e = function n() {
                                    for (; ++d < l.length;)
                                        if (u.call(l, d)) return n.value = l[d], n.done = !1, n;
                                    return n.value = void 0, n.done = !0, n
                                };
                            return e.next = e
                        }
                    }
                    return {
                        next: S
                    }
                }

                function S() {
                    return {
                        value: void 0,
                        done: !0
                    }
                }
                return s.prototype = f, i(m, "constructor", f), i(f, "constructor", s), s.displayName = i(f, r, "GeneratorFunction"), l.isGeneratorFunction = function(l) {
                    var n = "function" == typeof l && l.constructor;
                    return !!n && (n === s || "GeneratorFunction" === (n.displayName || n.name))
                }, l.mark = function(l) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(l, f) : (l.__proto__ = f, i(l, r, "GeneratorFunction")), l.prototype = Object.create(m), l
                }, l.awrap = function(l) {
                    return {
                        __await: l
                    }
                }, g(y.prototype), i(y.prototype, e, (function() {
                    return this
                })), l.AsyncIterator = y, l.async = function(n, u, d, t, e) {
                    void 0 === e && (e = Promise);
                    var r = new y(o(n, u, d, t), e);
                    return l.isGeneratorFunction(u) ? r : r.next().then((function(l) {
                        return l.done ? l.value : r.next()
                    }))
                }, g(m), i(m, r, "Generator"), i(m, t, (function() {
                    return this
                })), i(m, "toString", (function() {
                    return "[object Generator]"
                })), l.keys = function(l) {
                    var n = [];
                    for (var u in l) n.push(u);
                    return n.reverse(),
                        function u() {
                            for (; n.length;) {
                                var d = n.pop();
                                if (d in l) return u.value = d, u.done = !1, u
                            }
                            return u.done = !0, u
                        }
                }, l.values = E, C.prototype = {
                    constructor: C,
                    reset: function(l) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(_), !l)
                            for (var n in this) "t" === n.charAt(0) && u.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = void 0)
                    },
                    stop: function() {
                        this.done = !0;
                        var l = this.tryEntries[0].completion;
                        if ("throw" === l.type) throw l.arg;
                        return this.rval
                    },
                    dispatchException: function(l) {
                        if (this.done) throw l;
                        var n = this;

                        function d(u, d) {
                            return r.type = "throw", r.arg = l, n.next = u, d && (n.method = "next", n.arg = void 0), !!d
                        }
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var e = this.tryEntries[t],
                                r = e.completion;
                            if ("root" === e.tryLoc) return d("end");
                            if (e.tryLoc <= this.prev) {
                                var i = u.call(e, "catchLoc"),
                                    o = u.call(e, "finallyLoc");
                                if (i && o) {
                                    if (this.prev < e.catchLoc) return d(e.catchLoc, !0);
                                    if (this.prev < e.finallyLoc) return d(e.finallyLoc)
                                } else if (i) {
                                    if (this.prev < e.catchLoc) return d(e.catchLoc, !0)
                                } else {
                                    if (!o) throw new Error("try statement without catch or finally");
                                    if (this.prev < e.finallyLoc) return d(e.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(l, n) {
                        for (var d = this.tryEntries.length - 1; d >= 0; --d) {
                            var t = this.tryEntries[d];
                            if (t.tryLoc <= this.prev && u.call(t, "finallyLoc") && this.prev < t.finallyLoc) {
                                var e = t;
                                break
                            }
                        }
                        e && ("break" === l || "continue" === l) && e.tryLoc <= n && n <= e.finallyLoc && (e = null);
                        var r = e ? e.completion : {};
                        return r.type = l, r.arg = n, e ? (this.method = "next", this.next = e.finallyLoc, $) : this.complete(r)
                    },
                    complete: function(l, n) {
                        if ("throw" === l.type) throw l.arg;
                        return "break" === l.type || "continue" === l.type ? this.next = l.arg : "return" === l.type ? (this.rval = this.arg = l.arg, this.method = "return", this.next = "end") : "normal" === l.type && n && (this.next = n), $
                    },
                    finish: function(l) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var u = this.tryEntries[n];
                            if (u.finallyLoc === l) return this.complete(u.completion, u.afterLoc), _(u), $
                        }
                    },
                    catch: function(l) {
                        for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                            var u = this.tryEntries[n];
                            if (u.tryLoc === l) {
                                var d = u.completion;
                                if ("throw" === d.type) {
                                    var t = d.arg;
                                    _(u)
                                }
                                return t
                            }
                        }
                        throw new Error("illegal catch attempt")
                    },
                    delegateYield: function(l, n, u) {
                        return this.delegate = {
                            iterator: E(l),
                            resultName: n,
                            nextLoc: u
                        }, "next" === this.method && (this.arg = void 0), $
                    }
                }, l
            }
            var au = u(115861),
                $u = ["measure", "alignPre", "align", null, "motion"];
            var cu = f.forwardRef((function(l, n) {
                var u = l.visible,
                    e = l.prefixCls,
                    r = l.className,
                    i = l.style,
                    o = l.children,
                    a = l.zIndex,
                    $ = l.stretch,
                    c = l.destroyPopupOnHide,
                    s = l.forceRender,
                    p = l.align,
                    h = l.point,
                    v = l.getRootDomNode,
                    m = l.getClassNameFromAlign,
                    g = l.onAlign,
                    y = l.onMouseEnter,
                    b = l.onMouseLeave,
                    w = l.onMouseDown,
                    C = l.onTouchStart,
                    E = l.onClick,
                    x = (0, f.useRef)(),
                    S = (0, f.useRef)(),
                    A = (0, f.useState)(),
                    M = (0, k.Z)(A, 2),
                    O = M[0],
                    P = M[1],
                    F = function(l) {
                        var n = f.useState({
                                width: 0,
                                height: 0
                            }),
                            u = (0, k.Z)(n, 2),
                            d = u[0],
                            t = u[1];
                        return [f.useMemo((function() {
                            var n = {};
                            if (l) {
                                var u = d.width,
                                    t = d.height; - 1 !== l.indexOf("height") && t ? n.height = t : -1 !== l.indexOf("minHeight") && t && (n.minHeight = t), -1 !== l.indexOf("width") && u ? n.width = u : -1 !== l.indexOf("minWidth") && u && (n.minWidth = u)
                            }
                            return n
                        }), [l, d]), function(l) {
                            t({
                                width: l.offsetWidth,
                                height: l.offsetHeight
                            })
                        }]
                    }($),
                    T = (0, k.Z)(F, 2),
                    N = T[0],
                    R = T[1];
                var D = function(l, n) {
                        var u = ol(null),
                            d = (0, k.Z)(u, 2),
                            t = d[0],
                            e = d[1],
                            r = (0, f.useRef)();

                        function i(l) {
                            e(l, !0)
                        }

                        function o() {
                            _.cancel(r.current)
                        }
                        return (0, f.useEffect)((function() {
                            i("measure")
                        }), [l]), (0, f.useEffect)((function() {
                            "measure" === t && n(), t && (r.current = _((0, au.Z)(ou().mark((function l() {
                                var n, u;
                                return ou().wrap((function(l) {
                                    for (;;) switch (l.prev = l.next) {
                                        case 0:
                                            n = $u.indexOf(t), (u = $u[n + 1]) && -1 !== n && i(u);
                                        case 3:
                                        case "end":
                                            return l.stop()
                                    }
                                }), l)
                            })))))
                        }), [t]), (0, f.useEffect)((function() {
                            return function() {
                                o()
                            }
                        }), []), [t, function(l) {
                            o(), r.current = _((function() {
                                i((function(l) {
                                    switch (t) {
                                        case "align":
                                            return "motion";
                                        case "motion":
                                            return "stable"
                                    }
                                    return l
                                })), null === l || void 0 === l || l()
                            }))
                        }]
                    }(u, (function() {
                        $ && R(v())
                    })),
                    L = (0, k.Z)(D, 2),
                    Z = L[0],
                    B = L[1],
                    j = (0, f.useState)(0),
                    G = (0, k.Z)(j, 2),
                    U = G[0],
                    V = G[1],
                    H = (0, f.useRef)();

                function W() {
                    var l;
                    null === (l = x.current) || void 0 === l || l.forceAlign()
                }

                function K(l, n) {
                    var u = m(n);
                    O !== u && P(u), V((function(l) {
                        return l + 1
                    })), "align" === Z && (null === g || void 0 === g || g(l, n))
                }
                iu((function() {
                    "alignPre" === Z && V(0)
                }), [Z]), iu((function() {
                    "align" === Z && (U < 3 ? W() : B((function() {
                        var l;
                        null === (l = H.current) || void 0 === l || l.call(H)
                    })))
                }), [U]);
                var Y = (0, d.Z)({}, Al(l));

                function z() {
                    return new Promise((function(l) {
                        H.current = l
                    }))
                }["onAppearEnd", "onEnterEnd", "onLeaveEnd"].forEach((function(l) {
                    var n = Y[l];
                    Y[l] = function(l, u) {
                        return B(), null === n || void 0 === n ? void 0 : n(l, u)
                    }
                })), f.useEffect((function() {
                    Y.motionName || "motion" !== Z || B()
                }), [Y.motionName, Z]), f.useImperativeHandle(n, (function() {
                    return {
                        forceAlign: W,
                        getElement: function() {
                            return S.current
                        }
                    }
                }));
                var X = (0, d.Z)((0, d.Z)({}, N), {}, {
                        zIndex: a,
                        opacity: "motion" !== Z && "stable" !== Z && u ? 0 : void 0,
                        pointerEvents: u || "stable" === Z ? void 0 : "none"
                    }, i),
                    J = !0;
                null === p || void 0 === p || !p.points || "align" !== Z && "stable" !== Z || (J = !1);
                var Q = o;
                return f.Children.count(o) > 1 && (Q = f.createElement("div", {
                    className: "".concat(e, "-content")
                }, o)), f.createElement(Sl, (0, t.Z)({
                    visible: u,
                    ref: S,
                    leavedClassName: "".concat(e, "-hidden")
                }, Y, {
                    onAppearPrepare: z,
                    onEnterPrepare: z,
                    removeOnLeave: c,
                    forceRender: s
                }), (function(l, n) {
                    var u = l.className,
                        t = l.style,
                        i = I()(e, r, O, u);
                    return f.createElement(eu, {
                        target: h || v,
                        key: "popup",
                        ref: x,
                        monitorWindowResize: !0,
                        disabled: J,
                        align: p,
                        onAlign: K
                    }, f.createElement("div", {
                        ref: n,
                        className: i,
                        onMouseEnter: y,
                        onMouseLeave: b,
                        onMouseDownCapture: w,
                        onTouchStartCapture: C,
                        onClick: E,
                        style: (0, d.Z)((0, d.Z)({}, t), X)
                    }, Q))
                }))
            }));
            cu.displayName = "PopupInner";
            const su = cu;
            var fu = f.forwardRef((function(l, n) {
                var u = l.prefixCls,
                    e = l.visible,
                    r = l.zIndex,
                    i = l.children,
                    o = l.mobile,
                    a = (o = void 0 === o ? {} : o).popupClassName,
                    $ = o.popupStyle,
                    c = o.popupMotion,
                    s = void 0 === c ? {} : c,
                    p = o.popupRender,
                    h = l.onClick,
                    v = f.useRef();
                f.useImperativeHandle(n, (function() {
                    return {
                        forceAlign: function() {},
                        getElement: function() {
                            return v.current
                        }
                    }
                }));
                var m = (0, d.Z)({
                        zIndex: r
                    }, $),
                    g = i;
                return f.Children.count(i) > 1 && (g = f.createElement("div", {
                    className: "".concat(u, "-content")
                }, i)), p && (g = p(g)), f.createElement(Sl, (0, t.Z)({
                    visible: e,
                    ref: v,
                    removeOnLeave: !0
                }, s), (function(l, n) {
                    var t = l.className,
                        e = l.style,
                        r = I()(u, a, t);
                    return f.createElement("div", {
                        ref: n,
                        className: r,
                        onClick: h,
                        style: (0, d.Z)((0, d.Z)({}, e), m)
                    }, g)
                }))
            }));
            fu.displayName = "MobilePopupInner";
            const pu = fu;
            var hu = ["visible", "mobile"],
                vu = f.forwardRef((function(l, n) {
                    var u = l.visible,
                        e = l.mobile,
                        r = (0, D.Z)(l, hu),
                        i = (0, f.useState)(u),
                        o = (0, k.Z)(i, 2),
                        a = o[0],
                        $ = o[1],
                        c = (0, f.useState)(!1),
                        s = (0, k.Z)(c, 2),
                        p = s[0],
                        h = s[1],
                        v = (0, d.Z)((0, d.Z)({}, r), {}, {
                            visible: a
                        });
                    (0, f.useEffect)((function() {
                        $(u), u && e && h(function() {
                            if ("undefined" === typeof navigator || "undefined" === typeof window) return !1;
                            var l = navigator.userAgent || navigator.vendor || window.opera;
                            return /(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(l) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(null === l || void 0 === l ? void 0 : l.substr(0, 4))
                        }())
                    }), [u, e]);
                    var m = p ? f.createElement(pu, (0, t.Z)({}, v, {
                        mobile: e,
                        ref: n
                    })) : f.createElement(su, (0, t.Z)({}, v, {
                        ref: n
                    }));
                    return f.createElement("div", null, f.createElement(Ml, v), m)
                }));
            vu.displayName = "Popup";
            const mu = vu;
            const gu = f.createContext(null);

            function yu() {}

            function bu() {
                return ""
            }

            function wu(l) {
                return l ? l.ownerDocument : window.document
            }
            var _u = ["onClick", "onMouseDown", "onTouchStart", "onMouseEnter", "onMouseLeave", "onFocus", "onBlur", "onContextMenu"];
            const Cu = (Eu = T, xu = function(l) {
                (0, o.Z)(u, l);
                var n = c(u);

                function u(l) {
                    var d, r;
                    return (0, e.Z)(this, u), d = n.call(this, l), (0, s.Z)((0, i.Z)(d), "popupRef", f.createRef()), (0, s.Z)((0, i.Z)(d), "triggerRef", f.createRef()), (0, s.Z)((0, i.Z)(d), "portalContainer", void 0), (0, s.Z)((0, i.Z)(d), "attachId", void 0), (0, s.Z)((0, i.Z)(d), "clickOutsideHandler", void 0), (0, s.Z)((0, i.Z)(d), "touchOutsideHandler", void 0), (0, s.Z)((0, i.Z)(d), "contextMenuOutsideHandler1", void 0), (0, s.Z)((0, i.Z)(d), "contextMenuOutsideHandler2", void 0), (0, s.Z)((0, i.Z)(d), "mouseDownTimeout", void 0), (0, s.Z)((0, i.Z)(d), "focusTime", void 0), (0, s.Z)((0, i.Z)(d), "preClickTime", void 0), (0, s.Z)((0, i.Z)(d), "preTouchTime", void 0), (0, s.Z)((0, i.Z)(d), "delayTimer", void 0), (0, s.Z)((0, i.Z)(d), "hasPopupMouseDown", void 0), (0, s.Z)((0, i.Z)(d), "onMouseEnter", (function(l) {
                        var n = d.props.mouseEnterDelay;
                        d.fireEvents("onMouseEnter", l), d.delaySetPopupVisible(!0, n, n ? null : l)
                    })), (0, s.Z)((0, i.Z)(d), "onMouseMove", (function(l) {
                        d.fireEvents("onMouseMove", l), d.setPoint(l)
                    })), (0, s.Z)((0, i.Z)(d), "onMouseLeave", (function(l) {
                        d.fireEvents("onMouseLeave", l), d.delaySetPopupVisible(!1, d.props.mouseLeaveDelay)
                    })), (0, s.Z)((0, i.Z)(d), "onPopupMouseEnter", (function() {
                        d.clearDelayTimer()
                    })), (0, s.Z)((0, i.Z)(d), "onPopupMouseLeave", (function(l) {
                        var n;
                        l.relatedTarget && !l.relatedTarget.setTimeout && C(null === (n = d.popupRef.current) || void 0 === n ? void 0 : n.getElement(), l.relatedTarget) || d.delaySetPopupVisible(!1, d.props.mouseLeaveDelay)
                    })), (0, s.Z)((0, i.Z)(d), "onFocus", (function(l) {
                        d.fireEvents("onFocus", l), d.clearDelayTimer(), d.isFocusToShow() && (d.focusTime = Date.now(), d.delaySetPopupVisible(!0, d.props.focusDelay))
                    })), (0, s.Z)((0, i.Z)(d), "onMouseDown", (function(l) {
                        d.fireEvents("onMouseDown", l), d.preClickTime = Date.now()
                    })), (0, s.Z)((0, i.Z)(d), "onTouchStart", (function(l) {
                        d.fireEvents("onTouchStart", l), d.preTouchTime = Date.now()
                    })), (0, s.Z)((0, i.Z)(d), "onBlur", (function(l) {
                        d.fireEvents("onBlur", l), d.clearDelayTimer(), d.isBlurToHide() && d.delaySetPopupVisible(!1, d.props.blurDelay)
                    })), (0, s.Z)((0, i.Z)(d), "onContextMenu", (function(l) {
                        l.preventDefault(), d.fireEvents("onContextMenu", l), d.setPopupVisible(!0, l)
                    })), (0, s.Z)((0, i.Z)(d), "onContextMenuClose", (function() {
                        d.isContextMenuToShow() && d.close()
                    })), (0, s.Z)((0, i.Z)(d), "onClick", (function(l) {
                        if (d.fireEvents("onClick", l), d.focusTime) {
                            var n;
                            if (d.preClickTime && d.preTouchTime ? n = Math.min(d.preClickTime, d.preTouchTime) : d.preClickTime ? n = d.preClickTime : d.preTouchTime && (n = d.preTouchTime), Math.abs(n - d.focusTime) < 20) return;
                            d.focusTime = 0
                        }
                        d.preClickTime = 0, d.preTouchTime = 0, d.isClickToShow() && (d.isClickToHide() || d.isBlurToHide()) && l && l.preventDefault && l.preventDefault();
                        var u = !d.state.popupVisible;
                        (d.isClickToHide() && !u || u && d.isClickToShow()) && d.setPopupVisible(!d.state.popupVisible, l)
                    })), (0, s.Z)((0, i.Z)(d), "onPopupMouseDown", (function() {
                        var l;
                        d.hasPopupMouseDown = !0, clearTimeout(d.mouseDownTimeout), d.mouseDownTimeout = window.setTimeout((function() {
                            d.hasPopupMouseDown = !1
                        }), 0), d.context && (l = d.context).onPopupMouseDown.apply(l, arguments)
                    })), (0, s.Z)((0, i.Z)(d), "onDocumentClick", (function(l) {
                        if (!d.props.mask || d.props.maskClosable) {
                            var n = l.target,
                                u = d.getRootDomNode(),
                                t = d.getPopupDomNode();
                            C(u, n) && !d.isContextMenuOnly() || C(t, n) || d.hasPopupMouseDown || d.close()
                        }
                    })), (0, s.Z)((0, i.Z)(d), "getRootDomNode", (function() {
                        var l = d.props.getTriggerDOMNode;
                        if (l) return l(d.triggerRef.current);
                        try {
                            var n = E(d.triggerRef.current);
                            if (n) return n
                        } catch (l) {}
                        return v().findDOMNode((0, i.Z)(d))
                    })), (0, s.Z)((0, i.Z)(d), "getPopupClassNameFromAlign", (function(l) {
                        var n = [],
                            u = d.props,
                            t = u.popupPlacement,
                            e = u.builtinPlacements,
                            r = u.prefixCls,
                            i = u.alignPoint,
                            o = u.getPopupClassNameFromAlign;
                        return t && e && n.push(function(l, n, u, d) {
                            for (var t = u.points, e = Object.keys(l), r = 0; r < e.length; r += 1) {
                                var i = e[r];
                                if (R(l[i].points, t, d)) return "".concat(n, "-placement-").concat(i)
                            }
                            return ""
                        }(e, r, l, i)), o && n.push(o(l)), n.join(" ")
                    })), (0, s.Z)((0, i.Z)(d), "getComponent", (function() {
                        var l = d.props,
                            n = l.prefixCls,
                            u = l.destroyPopupOnHide,
                            e = l.popupClassName,
                            r = l.onPopupAlign,
                            i = l.popupMotion,
                            o = l.popupAnimation,
                            a = l.popupTransitionName,
                            $ = l.popupStyle,
                            c = l.mask,
                            s = l.maskAnimation,
                            p = l.maskTransitionName,
                            h = l.maskMotion,
                            v = l.zIndex,
                            m = l.popup,
                            g = l.stretch,
                            y = l.alignPoint,
                            b = l.mobile,
                            w = l.forceRender,
                            _ = l.onPopupClick,
                            C = d.state,
                            E = C.popupVisible,
                            x = C.point,
                            S = d.getPopupAlign(),
                            A = {};
                        return d.isMouseEnterToShow() && (A.onMouseEnter = d.onPopupMouseEnter), d.isMouseLeaveToHide() && (A.onMouseLeave = d.onPopupMouseLeave), A.onMouseDown = d.onPopupMouseDown, A.onTouchStart = d.onPopupMouseDown, f.createElement(mu, (0, t.Z)({
                            prefixCls: n,
                            destroyPopupOnHide: u,
                            visible: E,
                            point: y && x,
                            className: e,
                            align: S,
                            onAlign: r,
                            animation: o,
                            getClassNameFromAlign: d.getPopupClassNameFromAlign
                        }, A, {
                            stretch: g,
                            getRootDomNode: d.getRootDomNode,
                            style: $,
                            mask: c,
                            zIndex: v,
                            transitionName: a,
                            maskAnimation: s,
                            maskTransitionName: p,
                            maskMotion: h,
                            ref: d.popupRef,
                            motion: i,
                            mobile: b,
                            forceRender: w,
                            onClick: _
                        }), "function" === typeof m ? m() : m)
                    })), (0, s.Z)((0, i.Z)(d), "attachParent", (function(l) {
                        _.cancel(d.attachId);
                        var n, u = d.props,
                            t = u.getPopupContainer,
                            e = u.getDocument,
                            r = d.getRootDomNode();
                        t ? (r || 0 === t.length) && (n = t(r)) : n = e(d.getRootDomNode()).body, n ? n.appendChild(l) : d.attachId = _((function() {
                            d.attachParent(l)
                        }))
                    })), (0, s.Z)((0, i.Z)(d), "getContainer", (function() {
                        if (!d.portalContainer) {
                            var l = (0, d.props.getDocument)(d.getRootDomNode()).createElement("div");
                            l.style.position = "absolute", l.style.top = "0", l.style.left = "0", l.style.width = "100%", d.portalContainer = l
                        }
                        return d.attachParent(d.portalContainer), d.portalContainer
                    })), (0, s.Z)((0, i.Z)(d), "setPoint", (function(l) {
                        d.props.alignPoint && l && d.setState({
                            point: {
                                pageX: l.pageX,
                                pageY: l.pageY
                            }
                        })
                    })), (0, s.Z)((0, i.Z)(d), "handlePortalUpdate", (function() {
                        d.state.prevPopupVisible !== d.state.popupVisible && d.props.afterPopupVisibleChange(d.state.popupVisible)
                    })), (0, s.Z)((0, i.Z)(d), "triggerContextValue", {
                        onPopupMouseDown: d.onPopupMouseDown
                    }), r = "popupVisible" in l ? !!l.popupVisible : !!l.defaultPopupVisible, d.state = {
                        prevPopupVisible: r,
                        popupVisible: r
                    }, _u.forEach((function(l) {
                        d["fire".concat(l)] = function(n) {
                            d.fireEvents(l, n)
                        }
                    })), d
                }
                return (0, r.Z)(u, [{
                    key: "componentDidMount",
                    value: function() {
                        this.componentDidUpdate()
                    }
                }, {
                    key: "componentDidUpdate",
                    value: function() {
                        var l, n = this.props;
                        if (this.state.popupVisible) return this.clickOutsideHandler || !this.isClickToHide() && !this.isContextMenuToShow() || (l = n.getDocument(this.getRootDomNode()), this.clickOutsideHandler = P(l, "mousedown", this.onDocumentClick)), this.touchOutsideHandler || (l = l || n.getDocument(this.getRootDomNode()), this.touchOutsideHandler = P(l, "touchstart", this.onDocumentClick)), !this.contextMenuOutsideHandler1 && this.isContextMenuToShow() && (l = l || n.getDocument(this.getRootDomNode()), this.contextMenuOutsideHandler1 = P(l, "scroll", this.onContextMenuClose)), void(!this.contextMenuOutsideHandler2 && this.isContextMenuToShow() && (this.contextMenuOutsideHandler2 = P(window, "blur", this.onContextMenuClose)));
                        this.clearOutsideHandler()
                    }
                }, {
                    key: "componentWillUnmount",
                    value: function() {
                        this.clearDelayTimer(), this.clearOutsideHandler(), clearTimeout(this.mouseDownTimeout), _.cancel(this.attachId)
                    }
                }, {
                    key: "getPopupDomNode",
                    value: function() {
                        var l;
                        return (null === (l = this.popupRef.current) || void 0 === l ? void 0 : l.getElement()) || null
                    }
                }, {
                    key: "getPopupAlign",
                    value: function() {
                        var l = this.props,
                            n = l.popupPlacement,
                            u = l.popupAlign,
                            t = l.builtinPlacements;
                        return n && t ? function(l, n, u) {
                            var t = l[n] || {};
                            return (0, d.Z)((0, d.Z)({}, t), u)
                        }(t, n, u) : u
                    }
                }, {
                    key: "setPopupVisible",
                    value: function(l, n) {
                        var u = this.props.alignPoint,
                            d = this.state.popupVisible;
                        this.clearDelayTimer(), d !== l && ("popupVisible" in this.props || this.setState({
                            popupVisible: l,
                            prevPopupVisible: d
                        }), this.props.onPopupVisibleChange(l)), u && n && l && this.setPoint(n)
                    }
                }, {
                    key: "delaySetPopupVisible",
                    value: function(l, n, u) {
                        var d = this,
                            t = 1e3 * n;
                        if (this.clearDelayTimer(), t) {
                            var e = u ? {
                                pageX: u.pageX,
                                pageY: u.pageY
                            } : null;
                            this.delayTimer = window.setTimeout((function() {
                                d.setPopupVisible(l, e), d.clearDelayTimer()
                            }), t)
                        } else this.setPopupVisible(l, u)
                    }
                }, {
                    key: "clearDelayTimer",
                    value: function() {
                        this.delayTimer && (clearTimeout(this.delayTimer), this.delayTimer = null)
                    }
                }, {
                    key: "clearOutsideHandler",
                    value: function() {
                        this.clickOutsideHandler && (this.clickOutsideHandler.remove(), this.clickOutsideHandler = null), this.contextMenuOutsideHandler1 && (this.contextMenuOutsideHandler1.remove(), this.contextMenuOutsideHandler1 = null), this.contextMenuOutsideHandler2 && (this.contextMenuOutsideHandler2.remove(), this.contextMenuOutsideHandler2 = null), this.touchOutsideHandler && (this.touchOutsideHandler.remove(), this.touchOutsideHandler = null)
                    }
                }, {
                    key: "createTwoChains",
                    value: function(l) {
                        var n = this.props.children.props,
                            u = this.props;
                        return n[l] && u[l] ? this["fire".concat(l)] : n[l] || u[l]
                    }
                }, {
                    key: "isClickToShow",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.showAction;
                        return -1 !== n.indexOf("click") || -1 !== u.indexOf("click")
                    }
                }, {
                    key: "isContextMenuOnly",
                    value: function() {
                        var l = this.props.action;
                        return "contextMenu" === l || 1 === l.length && "contextMenu" === l[0]
                    }
                }, {
                    key: "isContextMenuToShow",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.showAction;
                        return -1 !== n.indexOf("contextMenu") || -1 !== u.indexOf("contextMenu")
                    }
                }, {
                    key: "isClickToHide",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.hideAction;
                        return -1 !== n.indexOf("click") || -1 !== u.indexOf("click")
                    }
                }, {
                    key: "isMouseEnterToShow",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.showAction;
                        return -1 !== n.indexOf("hover") || -1 !== u.indexOf("mouseEnter")
                    }
                }, {
                    key: "isMouseLeaveToHide",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.hideAction;
                        return -1 !== n.indexOf("hover") || -1 !== u.indexOf("mouseLeave")
                    }
                }, {
                    key: "isFocusToShow",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.showAction;
                        return -1 !== n.indexOf("focus") || -1 !== u.indexOf("focus")
                    }
                }, {
                    key: "isBlurToHide",
                    value: function() {
                        var l = this.props,
                            n = l.action,
                            u = l.hideAction;
                        return -1 !== n.indexOf("focus") || -1 !== u.indexOf("blur")
                    }
                }, {
                    key: "forcePopupAlign",
                    value: function() {
                        var l;
                        this.state.popupVisible && (null === (l = this.popupRef.current) || void 0 === l || l.forceAlign())
                    }
                }, {
                    key: "fireEvents",
                    value: function(l, n) {
                        var u = this.props.children.props[l];
                        u && u(n);
                        var d = this.props[l];
                        d && d(n)
                    }
                }, {
                    key: "close",
                    value: function() {
                        this.setPopupVisible(!1)
                    }
                }, {
                    key: "render",
                    value: function() {
                        var l = this.state.popupVisible,
                            n = this.props,
                            u = n.children,
                            t = n.forceRender,
                            e = n.alignPoint,
                            r = n.className,
                            i = n.autoDestroy,
                            o = f.Children.only(u),
                            a = {
                                key: "trigger"
                            };
                        this.isContextMenuToShow() ? a.onContextMenu = this.onContextMenu : a.onContextMenu = this.createTwoChains("onContextMenu"), this.isClickToHide() || this.isClickToShow() ? (a.onClick = this.onClick, a.onMouseDown = this.onMouseDown, a.onTouchStart = this.onTouchStart) : (a.onClick = this.createTwoChains("onClick"), a.onMouseDown = this.createTwoChains("onMouseDown"), a.onTouchStart = this.createTwoChains("onTouchStart")), this.isMouseEnterToShow() ? (a.onMouseEnter = this.onMouseEnter, e && (a.onMouseMove = this.onMouseMove)) : a.onMouseEnter = this.createTwoChains("onMouseEnter"), this.isMouseLeaveToHide() ? a.onMouseLeave = this.onMouseLeave : a.onMouseLeave = this.createTwoChains("onMouseLeave"), this.isFocusToShow() || this.isBlurToHide() ? (a.onFocus = this.onFocus, a.onBlur = this.onBlur) : (a.onFocus = this.createTwoChains("onFocus"), a.onBlur = this.createTwoChains("onBlur"));
                        var $ = I()(o && o.props && o.props.className, r);
                        $ && (a.className = $);
                        var c = (0, d.Z)({}, a);
                        O(o) && (c.ref = M(this.triggerRef, o.ref));
                        var s, p = f.cloneElement(o, c);
                        return (l || this.popupRef.current || t) && (s = f.createElement(Eu, {
                            key: "portal",
                            getContainer: this.getContainer,
                            didUpdate: this.handlePortalUpdate
                        }, this.getComponent())), !l && i && (s = null), f.createElement(gu.Provider, {
                            value: this.triggerContextValue
                        }, p, s)
                    }
                }], [{
                    key: "getDerivedStateFromProps",
                    value: function(l, n) {
                        var u = l.popupVisible,
                            d = {};
                        return void 0 !== u && n.popupVisible !== u && (d.popupVisible = u, d.prevPopupVisible = n.popupVisible), d
                    }
                }]), u
            }(f.Component), (0, s.Z)(xu, "contextType", gu), (0, s.Z)(xu, "defaultProps", {
                prefixCls: "rc-trigger-popup",
                getPopupClassNameFromAlign: bu,
                getDocument: wu,
                onPopupVisibleChange: yu,
                afterPopupVisibleChange: yu,
                onPopupAlign: yu,
                popupClassName: "",
                mouseEnterDelay: 0,
                mouseLeaveDelay: .1,
                focusDelay: 0,
                blurDelay: .15,
                popupStyle: {},
                destroyPopupOnHide: !1,
                popupAlign: {},
                defaultPopupVisible: !1,
                mask: !1,
                maskClosable: !0,
                action: [],
                showAction: [],
                hideAction: [],
                autoDestroy: !1
            }), xu);
            var Eu, xu
        },
        588599: (l, n, u) => {
            "use strict";
            var d = u(564836).default;
            n.Z = function(l) {
                return t.default.Children.map(l, e)
            };
            var t = d(u(184481));

            function e(l) {
                return l
            }
        },
        427712: (l, n) => {
            "use strict";
            n.Z = void 0;
            var u = {
                    MAC_ENTER: 3,
                    BACKSPACE: 8,
                    TAB: 9,
                    NUM_CENTER: 12,
                    ENTER: 13,
                    SHIFT: 16,
                    CTRL: 17,
                    ALT: 18,
                    PAUSE: 19,
                    CAPS_LOCK: 20,
                    ESC: 27,
                    SPACE: 32,
                    PAGE_UP: 33,
                    PAGE_DOWN: 34,
                    END: 35,
                    HOME: 36,
                    LEFT: 37,
                    UP: 38,
                    RIGHT: 39,
                    DOWN: 40,
                    PRINT_SCREEN: 44,
                    INSERT: 45,
                    DELETE: 46,
                    ZERO: 48,
                    ONE: 49,
                    TWO: 50,
                    THREE: 51,
                    FOUR: 52,
                    FIVE: 53,
                    SIX: 54,
                    SEVEN: 55,
                    EIGHT: 56,
                    NINE: 57,
                    QUESTION_MARK: 63,
                    A: 65,
                    B: 66,
                    C: 67,
                    D: 68,
                    E: 69,
                    F: 70,
                    G: 71,
                    H: 72,
                    I: 73,
                    J: 74,
                    K: 75,
                    L: 76,
                    M: 77,
                    N: 78,
                    O: 79,
                    P: 80,
                    Q: 81,
                    R: 82,
                    S: 83,
                    T: 84,
                    U: 85,
                    V: 86,
                    W: 87,
                    X: 88,
                    Y: 89,
                    Z: 90,
                    META: 91,
                    WIN_KEY_RIGHT: 92,
                    CONTEXT_MENU: 93,
                    NUM_ZERO: 96,
                    NUM_ONE: 97,
                    NUM_TWO: 98,
                    NUM_THREE: 99,
                    NUM_FOUR: 100,
                    NUM_FIVE: 101,
                    NUM_SIX: 102,
                    NUM_SEVEN: 103,
                    NUM_EIGHT: 104,
                    NUM_NINE: 105,
                    NUM_MULTIPLY: 106,
                    NUM_PLUS: 107,
                    NUM_MINUS: 109,
                    NUM_PERIOD: 110,
                    NUM_DIVISION: 111,
                    F1: 112,
                    F2: 113,
                    F3: 114,
                    F4: 115,
                    F5: 116,
                    F6: 117,
                    F7: 118,
                    F8: 119,
                    F9: 120,
                    F10: 121,
                    F11: 122,
                    F12: 123,
                    NUMLOCK: 144,
                    SEMICOLON: 186,
                    DASH: 189,
                    EQUALS: 187,
                    COMMA: 188,
                    PERIOD: 190,
                    SLASH: 191,
                    APOSTROPHE: 192,
                    SINGLE_QUOTE: 222,
                    OPEN_SQUARE_BRACKET: 219,
                    BACKSLASH: 220,
                    CLOSE_SQUARE_BRACKET: 221,
                    WIN_KEY: 224,
                    MAC_FF_META: 224,
                    WIN_IME: 229,
                    isTextModifyingKeyEvent: function(l) {
                        var n = l.keyCode;
                        if (l.altKey && !l.ctrlKey || l.metaKey || n >= u.F1 && n <= u.F12) return !1;
                        switch (n) {
                            case u.ALT:
                            case u.CAPS_LOCK:
                            case u.CONTEXT_MENU:
                            case u.CTRL:
                            case u.DOWN:
                            case u.END:
                            case u.ESC:
                            case u.HOME:
                            case u.INSERT:
                            case u.LEFT:
                            case u.MAC_FF_META:
                            case u.META:
                            case u.NUMLOCK:
                            case u.NUM_CENTER:
                            case u.PAGE_DOWN:
                            case u.PAGE_UP:
                            case u.PAUSE:
                            case u.PRINT_SCREEN:
                            case u.RIGHT:
                            case u.SHIFT:
                            case u.UP:
                            case u.WIN_KEY:
                            case u.WIN_KEY_RIGHT:
                                return !1;
                            default:
                                return !0
                        }
                    },
                    isCharacterKey: function(l) {
                        if (l >= u.ZERO && l <= u.NINE) return !0;
                        if (l >= u.NUM_ZERO && l <= u.NUM_MULTIPLY) return !0;
                        if (l >= u.A && l <= u.Z) return !0;
                        if (-1 !== window.navigator.userAgent.indexOf("WebKit") && 0 === l) return !0;
                        switch (l) {
                            case u.SPACE:
                            case u.QUESTION_MARK:
                            case u.NUM_PLUS:
                            case u.NUM_MINUS:
                            case u.NUM_PERIOD:
                            case u.NUM_DIVISION:
                            case u.SEMICOLON:
                            case u.DASH:
                            case u.EQUALS:
                            case u.COMMA:
                            case u.PERIOD:
                            case u.SLASH:
                            case u.APOSTROPHE:
                            case u.SINGLE_QUOTE:
                            case u.OPEN_SQUARE_BRACKET:
                            case u.BACKSLASH:
                            case u.CLOSE_SQUARE_BRACKET:
                                return !0;
                            default:
                                return !1
                        }
                    }
                },
                d = u;
            n.Z = d
        },
        26816: (l, n) => {
            "use strict";
            n.Z = function() {
                var l = [].slice.call(arguments, 0);
                if (1 === l.length) return l[0];
                return function() {
                    for (var n = 0; n < l.length; n++) l[n] && l[n].apply && l[n].apply(this, arguments)
                }
            }
        },
        951162: (l, n) => {
            "use strict";
            var u = "function" === typeof Symbol && Symbol.for,
                d = u ? Symbol.for("react.element") : 60103,
                t = u ? Symbol.for("react.portal") : 60106,
                e = u ? Symbol.for("react.fragment") : 60107,
                r = u ? Symbol.for("react.strict_mode") : 60108,
                i = u ? Symbol.for("react.profiler") : 60114,
                o = u ? Symbol.for("react.provider") : 60109,
                a = u ? Symbol.for("react.context") : 60110,
                $ = u ? Symbol.for("react.async_mode") : 60111,
                c = u ? Symbol.for("react.concurrent_mode") : 60111,
                s = u ? Symbol.for("react.forward_ref") : 60112,
                f = u ? Symbol.for("react.suspense") : 60113,
                p = u ? Symbol.for("react.suspense_list") : 60120,
                h = u ? Symbol.for("react.memo") : 60115,
                v = u ? Symbol.for("react.lazy") : 60116,
                m = u ? Symbol.for("react.block") : 60121,
                g = u ? Symbol.for("react.fundamental") : 60117,
                y = u ? Symbol.for("react.responder") : 60118,
                b = u ? Symbol.for("react.scope") : 60119;

            function w(l) {
                if ("object" === typeof l && null !== l) {
                    var n = l.$$typeof;
                    switch (n) {
                        case d:
                            switch (l = l.type) {
                                case $:
                                case c:
                                case e:
                                case i:
                                case r:
                                case f:
                                    return l;
                                default:
                                    switch (l = l && l.$$typeof) {
                                        case a:
                                        case s:
                                        case v:
                                        case h:
                                        case o:
                                            return l;
                                        default:
                                            return n
                                    }
                            }
                        case t:
                            return n
                    }
                }
            }

            function _(l) {
                return w(l) === c
            }
            n.isMemo = function(l) {
                return w(l) === h
            }
        },
        211805: (l, n, u) => {
            "use strict";
            l.exports = u(951162)
        },
        573692: (l, n, u) => {
            "use strict";
            l.exports = r;
            var d = u(857824),
                t = r.prototype,
                e = new Date % 1e9;

            function r(l) {
                l = l || {}, this.id = l.id || (1e9 * Math.random() >>> 0) + e++, this.max = l.max || 1 / 0, this.items = l.items || [], this._lookup = {}, this.size = this.items.length, this.lastModified = new Date(l.lastModified || new Date);
                for (var n, u, d = this.items.length; d--;) n = this.items[d], u = new Date(n.expires) - new Date, this._lookup[n.key] = n, u > 0 ? this.expire(n.key, u) : u <= 0 && this.delete(n.key)
            }
            t.has = function(l) {
                return l in this._lookup
            }, t.get = function(l) {
                if (!this.has(l)) return null;
                var n = this._lookup[l];
                return n.refresh && this.expire(l, n.refresh), this.items.splice(this.items.indexOf(n), 1), this.items.push(n), n.value
            }, t.meta = function(l) {
                if (!this.has(l)) return null;
                var n = this._lookup[l];
                return "meta" in n ? n.meta : null
            }, t.set = function(l, n, u) {
                var d = this._lookup[l],
                    t = this._lookup[l] = {
                        key: l,
                        value: n
                    };
                return this.lastModified = new Date, d ? (clearTimeout(d.timeout), this.items.splice(this.items.indexOf(d), 1, t)) : (this.size >= this.max && this.delete(this.items[0].key), this.items.push(t), this.size++), u && ("ttl" in u && this.expire(l, u.ttl), "meta" in u && (t.meta = u.meta), u.refresh && (t.refresh = u.ttl)), this
            }, t.delete = function(l) {
                var n = this._lookup[l];
                return !!n && (this.lastModified = new Date, this.items.splice(this.items.indexOf(n), 1), clearTimeout(n.timeout), delete this._lookup[l], this.size--, this)
            }, t.expire = function(l, n) {
                var u = n || 0,
                    t = this._lookup[l];
                if (!t) return this;
                if ("string" === typeof u && (u = d(n)), "number" !== typeof u) throw new TypeError("Expiration time must be a string or number.");
                return clearTimeout(t.timeout), t.timeout = setTimeout(this.delete.bind(this, t.key), u), t.expires = Number(new Date) + u, this
            }, t.clear = function() {
                for (var l = this.items.length; l--;) this.delete(this.items[l].key);
                return this
            }, t.toJSON = function() {
                for (var l, n = new Array(this.items.length), u = n.length; u--;) l = this.items[u], n[u] = {
                    key: l.key,
                    meta: l.meta,
                    value: l.value,
                    expires: l.expires,
                    refresh: l.refresh
                };
                return {
                    id: this.id,
                    max: isFinite(this.max) ? this.max : void 0,
                    lastModified: this.lastModified,
                    items: n
                }
            }
        },
        564836: l => {
            l.exports = function(l) {
                return l && l.__esModule ? l : {
                    default: l
                }
            }, l.exports.__esModule = !0, l.exports.default = l.exports
        },
        130907: (l, n, u) => {
            "use strict";

            function d(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }
            u.d(n, {
                Z: () => d
            })
        },
        115861: (l, n, u) => {
            "use strict";

            function d(l, n, u, d, t, e, r) {
                try {
                    var i = l[e](r),
                        o = i.value
                } catch (l) {
                    return void u(l)
                }
                i.done ? n(o) : Promise.resolve(o).then(d, t)
            }

            function t(l) {
                return function() {
                    var n = this,
                        u = arguments;
                    return new Promise((function(t, e) {
                        var r = l.apply(n, u);

                        function i(l) {
                            d(r, t, e, i, o, "next", l)
                        }

                        function o(l) {
                            d(r, t, e, i, o, "throw", l)
                        }
                        i(void 0)
                    }))
                }
            }
            u.d(n, {
                Z: () => t
            })
        },
        215671: (l, n, u) => {
            "use strict";

            function d(l, n) {
                if (!(l instanceof n)) throw new TypeError("Cannot call a class as a function")
            }
            u.d(n, {
                Z: () => d
            })
        },
        143144: (l, n, u) => {
            "use strict";

            function d(l, n) {
                for (var u = 0; u < n.length; u++) {
                    var d = n[u];
                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(l, d.key, d)
                }
            }

            function t(l, n, u) {
                return n && d(l.prototype, n), u && d(l, u), Object.defineProperty(l, "prototype", {
                    writable: !1
                }), l
            }
            u.d(n, {
                Z: () => t
            })
        },
        661120: (l, n, u) => {
            "use strict";

            function d(l) {
                return d = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(l) {
                    return l.__proto__ || Object.getPrototypeOf(l)
                }, d(l)
            }
            u.d(n, {
                Z: () => d
            })
        },
        360136: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => t
            });
            var d = u(589611);

            function t(l, n) {
                if ("function" !== typeof n && null !== n) throw new TypeError("Super expression must either be null or a function");
                l.prototype = Object.create(n && n.prototype, {
                    constructor: {
                        value: l,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(l, "prototype", {
                    writable: !1
                }), n && (0, d.Z)(l, n)
            }
        },
        145987: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => t
            });
            var d = u(263366);

            function t(l, n) {
                if (null == l) return {};
                var u, t, e = (0, d.Z)(l, n);
                if (Object.getOwnPropertySymbols) {
                    var r = Object.getOwnPropertySymbols(l);
                    for (t = 0; t < r.length; t++) u = r[t], n.indexOf(u) >= 0 || Object.prototype.propertyIsEnumerable.call(l, u) && (e[u] = l[u])
                }
                return e
            }
        },
        182963: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => e
            });
            var d = u(671002),
                t = u(497326);

            function e(l, n) {
                if (n && ("object" === (0, d.Z)(n) || "function" === typeof n)) return n;
                if (void 0 !== n) throw new TypeError("Derived constructors may only return object or undefined");
                return (0, t.Z)(l)
            }
        },
        870885: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => t
            });
            var d = u(840181);

            function t(l, n) {
                return function(l) {
                    if (Array.isArray(l)) return l
                }(l) || function(l, n) {
                    var u = null == l ? null : "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                    if (null != u) {
                        var d, t, e = [],
                            r = !0,
                            i = !1;
                        try {
                            for (u = u.call(l); !(r = (d = u.next()).done) && (e.push(d.value), !n || e.length !== n); r = !0);
                        } catch (l) {
                            i = !0, t = l
                        } finally {
                            try {
                                r || null == u.return || u.return()
                            } finally {
                                if (i) throw t
                            }
                        }
                        return e
                    }
                }(l, n) || (0, d.Z)(l, n) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }
        },
        671002: (l, n, u) => {
            "use strict";

            function d(l) {
                return d = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(l) {
                    return typeof l
                } : function(l) {
                    return l && "function" == typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                }, d(l)
            }
            u.d(n, {
                Z: () => d
            })
        },
        840181: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => t
            });
            var d = u(130907);

            function t(l, n) {
                if (l) {
                    if ("string" === typeof l) return (0, d.Z)(l, n);
                    var u = Object.prototype.toString.call(l).slice(8, -1);
                    return "Object" === u && l.constructor && (u = l.constructor.name), "Map" === u || "Set" === u ? Array.from(l) : "Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u) ? (0, d.Z)(l, n) : void 0
                }
            }
        },
        700433: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => C
            });
            var d = u(812581),
                t = u(815864),
                e = u(131316),
                r = u(191089);
            var i = u(425738),
                o = /^[\d]+(?:[~\u2053\u223C\uFF5E][\d]+)?$/;
            var a = u(400457);

            function $(l, n) {
                var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                if (u) return (u = u.call(l)).next.bind(u);
                if (Array.isArray(l) || (u = function(l, n) {
                        if (!l) return;
                        if ("string" === typeof l) return c(l, n);
                        var u = Object.prototype.toString.call(l).slice(8, -1);
                        "Object" === u && l.constructor && (u = l.constructor.name);
                        if ("Map" === u || "Set" === u) return Array.from(l);
                        if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return c(l, n)
                    }(l)) || n && l && "number" === typeof l.length) {
                    u && (l = u);
                    var d = 0;
                    return function() {
                        return d >= l.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: l[d++]
                        }
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function c(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function s(l, n) {
                var u = Object.keys(l);
                if (Object.getOwnPropertySymbols) {
                    var d = Object.getOwnPropertySymbols(l);
                    n && (d = d.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(l, n).enumerable
                    }))), u.push.apply(u, d)
                }
                return u
            }

            function f(l) {
                for (var n = 1; n < arguments.length; n++) {
                    var u = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? s(Object(u), !0).forEach((function(n) {
                        p(l, n, u[n])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(u)) : s(Object(u)).forEach((function(n) {
                        Object.defineProperty(l, n, Object.getOwnPropertyDescriptor(u, n))
                    }))
                }
                return l
            }

            function p(l, n, u) {
                return n in l ? Object.defineProperty(l, n, {
                    value: u,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : l[n] = u, l
            }
            var h = {
                formatExtension: function(l, n, u) {
                    return "".concat(l).concat(u.ext()).concat(n)
                }
            };

            function v(l, n, u, t) {
                if (u = u ? f(f({}, h), u) : h, t = new d.ZP(t), l.country && "001" !== l.country) {
                    if (!t.hasCountry(l.country)) throw new Error("Unknown country: ".concat(l.country));
                    t.country(l.country)
                } else {
                    if (!l.countryCallingCode) return l.phone || "";
                    t.selectNumberingPlan(l.countryCallingCode)
                }
                var e, r = t.countryCallingCode(),
                    i = u.v2 ? l.nationalNumber : l.phone;
                switch (n) {
                    case "NATIONAL":
                        return i ? g(e = m(i, l.carrierCode, "NATIONAL", t, u), l.ext, t, u.formatExtension) : "";
                    case "INTERNATIONAL":
                        return i ? (e = m(i, null, "INTERNATIONAL", t, u), g(e = "+".concat(r, " ").concat(e), l.ext, t, u.formatExtension)) : "+".concat(r);
                    case "E.164":
                        return "+".concat(r).concat(i);
                    case "RFC3966":
                        return (0, a.Y)({
                            number: "+".concat(r).concat(i),
                            ext: l.ext
                        });
                    case "IDD":
                        if (!u.fromCountry) return;
                        var $ = function(l, n, u, t, e) {
                            if ((0, d.Gg)(t, e.metadata) === u) {
                                var r = m(l, n, "NATIONAL", e);
                                return "1" === u ? u + " " + r : r
                            }
                            var i = function(l, n, u) {
                                var t = new d.ZP(u);
                                return t.selectNumberingPlan(l, n), t.defaultIDDPrefix() ? t.defaultIDDPrefix() : o.test(t.IDDPrefix()) ? t.IDDPrefix() : void 0
                            }(t, void 0, e.metadata);
                            if (i) return "".concat(i, " ").concat(u, " ").concat(m(l, null, "INTERNATIONAL", e))
                        }(i, l.carrierCode, r, u.fromCountry, t);
                        return g($, l.ext, t, u.formatExtension);
                    default:
                        throw new Error('Unknown "format" argument passed to "formatNumber()": "'.concat(n, '"'))
                }
            }

            function m(l, n, u, d, t) {
                var r = function(l, n) {
                    for (var u, d = $(l); !(u = d()).done;) {
                        var t = u.value;
                        if (t.leadingDigitsPatterns().length > 0) {
                            var r = t.leadingDigitsPatterns()[t.leadingDigitsPatterns().length - 1];
                            if (0 !== n.search(r)) continue
                        }
                        if ((0, e.Z)(n, t.pattern())) return t
                    }
                }(d.formats(), l);
                return r ? (0, i.Z)(l, r, {
                    useInternationalFormat: "INTERNATIONAL" === u,
                    withNationalPrefix: !r.nationalPrefixIsOptionalWhenFormattingInNationalFormat() || !t || !1 !== t.nationalPrefix,
                    carrierCode: n,
                    metadata: d
                }) : l
            }

            function g(l, n, u, d) {
                return n ? d(l, n, u) : l
            }

            function y(l, n) {
                var u = Object.keys(l);
                if (Object.getOwnPropertySymbols) {
                    var d = Object.getOwnPropertySymbols(l);
                    n && (d = d.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(l, n).enumerable
                    }))), u.push.apply(u, d)
                }
                return u
            }

            function b(l) {
                for (var n = 1; n < arguments.length; n++) {
                    var u = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? y(Object(u), !0).forEach((function(n) {
                        w(l, n, u[n])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(u)) : y(Object(u)).forEach((function(n) {
                        Object.defineProperty(l, n, Object.getOwnPropertyDescriptor(u, n))
                    }))
                }
                return l
            }

            function w(l, n, u) {
                return n in l ? Object.defineProperty(l, n, {
                    value: u,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : l[n] = u, l
            }

            function _(l, n) {
                for (var u = 0; u < n.length; u++) {
                    var d = n[u];
                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(l, d.key, d)
                }
            }
            var C = function() {
                    function l(n, u, t) {
                        if (function(l, n) {
                                if (!(l instanceof n)) throw new TypeError("Cannot call a class as a function")
                            }(this, l), !n) throw new TypeError("`country` or `countryCallingCode` not passed");
                        if (!u) throw new TypeError("`nationalNumber` not passed");
                        if (!t) throw new TypeError("`metadata` not passed");
                        var e = new d.ZP(t);
                        E(n) && (this.country = n, e.country(n), n = e.countryCallingCode()), this.countryCallingCode = n, this.nationalNumber = u, this.number = "+" + this.countryCallingCode + this.nationalNumber, this.metadata = t
                    }
                    var n, u, i;
                    return n = l, (u = [{
                        key: "setExt",
                        value: function(l) {
                            this.ext = l
                        }
                    }, {
                        key: "isPossible",
                        value: function() {
                            return (0, t.Z)(this, {
                                v2: !0
                            }, this.metadata)
                        }
                    }, {
                        key: "isValid",
                        value: function() {
                            return function(l, n, u) {
                                if (n = n || {}, u = new d.ZP(u), !l.country) return !1;
                                if (u.selectNumberingPlan(l.country, l.countryCallingCode), u.hasTypes()) return void 0 !== (0, r.Z)(l, n, u.metadata);
                                var t = n.v2 ? l.nationalNumber : l.phone;
                                return (0, e.Z)(t, u.nationalNumberPattern())
                            }(this, {
                                v2: !0
                            }, this.metadata)
                        }
                    }, {
                        key: "isNonGeographic",
                        value: function() {
                            return new d.ZP(this.metadata).isNonGeographicCallingCode(this.countryCallingCode)
                        }
                    }, {
                        key: "isEqual",
                        value: function(l) {
                            return this.number === l.number && this.ext === l.ext
                        }
                    }, {
                        key: "getType",
                        value: function() {
                            return (0, r.Z)(this, {
                                v2: !0
                            }, this.metadata)
                        }
                    }, {
                        key: "format",
                        value: function(l, n) {
                            return v(this, l, n ? b(b({}, n), {}, {
                                v2: !0
                            }) : {
                                v2: !0
                            }, this.metadata)
                        }
                    }, {
                        key: "formatNational",
                        value: function(l) {
                            return this.format("NATIONAL", l)
                        }
                    }, {
                        key: "formatInternational",
                        value: function(l) {
                            return this.format("INTERNATIONAL", l)
                        }
                    }, {
                        key: "getURI",
                        value: function(l) {
                            return this.format("RFC3966", l)
                        }
                    }]) && _(n.prototype, u), i && _(n, i), Object.defineProperty(n, "prototype", {
                        writable: !1
                    }), l
                }(),
                E = function(l) {
                    return /^[A-Z]{2}$/.test(l)
                }
        },
        295619: (l, n, u) => {
            "use strict";
            u.d(n, {
                ex: () => d,
                sJ: () => t,
                uv: () => i,
                xc: () => r,
                xg: () => e,
                xy: () => o
            });
            var d = 2,
                t = 17,
                e = 3,
                r = "0-9\uff10-\uff19\u0660-\u0669\u06f0-\u06f9",
                i = "".concat("-\u2010-\u2015\u2212\u30fc\uff0d").concat("\uff0f/").concat("\uff0e.").concat(" \xa0\xad\u200b\u2060\u3000").concat("()\uff08\uff09\uff3b\uff3d\\[\\]").concat("~\u2053\u223c\uff5e"),
                o = "+\uff0b"
        },
        400457: (l, n, u) => {
            "use strict";
            u.d(n, {
                Y: () => o,
                m: () => i
            });
            var d = u(293345);

            function t(l, n) {
                return function(l) {
                    if (Array.isArray(l)) return l
                }(l) || function(l, n) {
                    var u = null == l ? null : "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                    if (null == u) return;
                    var d, t, e = [],
                        r = !0,
                        i = !1;
                    try {
                        for (u = u.call(l); !(r = (d = u.next()).done) && (e.push(d.value), !n || e.length !== n); r = !0);
                    } catch (l) {
                        i = !0, t = l
                    } finally {
                        try {
                            r || null == u.return || u.return()
                        } finally {
                            if (i) throw t
                        }
                    }
                    return e
                }(l, n) || e(l, n) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function e(l, n) {
                if (l) {
                    if ("string" === typeof l) return r(l, n);
                    var u = Object.prototype.toString.call(l).slice(8, -1);
                    return "Object" === u && l.constructor && (u = l.constructor.name), "Map" === u || "Set" === u ? Array.from(l) : "Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u) ? r(l, n) : void 0
                }
            }

            function r(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function i(l) {
                for (var n, u, r, i = function(l, n) {
                        var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                        if (u) return (u = u.call(l)).next.bind(u);
                        if (Array.isArray(l) || (u = e(l)) || n && l && "number" === typeof l.length) {
                            u && (l = u);
                            var d = 0;
                            return function() {
                                return d >= l.length ? {
                                    done: !0
                                } : {
                                    done: !1,
                                    value: l[d++]
                                }
                            }
                        }
                        throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                    }((l = l.replace(/^tel:/, "tel=")).split(";")); !(r = i()).done;) {
                    var o = t(r.value.split("="), 2),
                        a = o[0],
                        $ = o[1];
                    switch (a) {
                        case "tel":
                            n = $;
                            break;
                        case "ext":
                            u = $;
                            break;
                        case "phone-context":
                            "+" === $[0] && (n = $ + n)
                    }
                }
                if (!(0, d.ZP)(n)) return {};
                var c = {
                    number: n
                };
                return u && (c.ext = u), c
            }

            function o(l) {
                var n = l.number,
                    u = l.ext;
                if (!n) return "";
                if ("+" !== n[0]) throw new Error('"formatRFC3966()" expects "number" to be in E.164 format.');
                return "tel:".concat(n).concat(u ? ";ext=" + u : "")
            }
        },
        962354: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => t
            });
            var d = u(295619);

            function t(l) {
                return l.replace(new RegExp("[".concat(d.uv, "]+"), "g"), " ").trim()
            }
        },
        187856: (l, n, u) => {
            "use strict";

            function d(l, n) {
                var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                if (u) return (u = u.call(l)).next.bind(u);
                if (Array.isArray(l) || (u = function(l, n) {
                        if (!l) return;
                        if ("string" === typeof l) return t(l, n);
                        var u = Object.prototype.toString.call(l).slice(8, -1);
                        "Object" === u && l.constructor && (u = l.constructor.name);
                        if ("Map" === u || "Set" === u) return Array.from(l);
                        if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return t(l, n)
                    }(l)) || n && l && "number" === typeof l.length) {
                    u && (l = u);
                    var d = 0;
                    return function() {
                        return d >= l.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: l[d++]
                        }
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function t(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function e(l, n) {
                return r(l, void 0, n)
            }

            function r(l, n, u) {
                var t = u.type(n),
                    e = t && t.possibleLengths() || u.possibleLengths();
                if (!e) return "IS_POSSIBLE";
                if ("FIXED_LINE_OR_MOBILE" === n) {
                    if (!u.type("FIXED_LINE")) return r(l, "MOBILE", u);
                    var i = u.type("MOBILE");
                    i && (e = function(l, n) {
                        for (var u, t = l.slice(), e = d(n); !(u = e()).done;) {
                            var r = u.value;
                            l.indexOf(r) < 0 && t.push(r)
                        }
                        return t.sort((function(l, n) {
                            return l - n
                        }))
                    }(e, i.possibleLengths()))
                } else if (n && !t) return "INVALID_LENGTH";
                var o = l.length,
                    a = e[0];
                return a === o ? "IS_POSSIBLE" : a > o ? "TOO_SHORT" : e[e.length - 1] < o ? "TOO_LONG" : e.indexOf(o, 1) >= 0 ? "IS_POSSIBLE" : "INVALID_LENGTH"
            }
            u.d(n, {
                Z: () => e
            })
        },
        133878: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => e
            });
            var d = u(295619),
                t = function(l) {
                    return "([".concat(d.xc, "]{1,").concat(l, "})")
                };

            function e(l) {
                var n = "#?";
                return ";ext=" + t("20") + "|" + ("[ \xa0\\t,]*(?:e?xt(?:ensi(?:o\u0301?|\xf3))?n?|\uff45?\uff58\uff54\uff4e?|\u0434\u043e\u0431|anexo)[:\\.\uff0e]?[ \xa0\\t,-]*" + t("20") + n) + "|" + ("[ \xa0\\t,]*(?:[x\uff58#\uff03~\uff5e]|int|\uff49\uff4e\uff54)[:\\.\uff0e]?[ \xa0\\t,-]*" + t("9") + n) + "|" + ("[- ]+" + t("6") + "#") + "|" + ("[ \xa0\\t]*(?:,{2}|;)[:\\.\uff0e]?[ \xa0\\t,-]*" + t("15") + n) + "|" + ("[ \xa0\\t]*(?:,)+[:\\.\uff0e]?[ \xa0\\t,-]*" + t("9") + n)
            }
        },
        513661: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => i
            });
            var d = u(113633),
                t = u(399471),
                e = u(812581),
                r = u(295619);

            function i(l, n, u, i) {
                if (!l) return {};
                if ("+" !== l[0]) {
                    var o = (0, d.Z)(l, n, u, i);
                    if (!o || o === l) {
                        if (n || u) {
                            var a = (0, t.Z)(l, n, u, i),
                                $ = a.countryCallingCode,
                                c = a.number;
                            if ($) return {
                                countryCallingCode: $,
                                number: c
                            }
                        }
                        return {
                            number: l
                        }
                    }
                    l = "+" + o
                }
                if ("0" === l[1]) return {};
                i = new e.ZP(i);
                for (var s = 2; s - 1 <= r.xg && s <= l.length;) {
                    var f = l.slice(1, s);
                    if (i.hasCallingCode(f)) return i.selectNumberingPlan(f), {
                        countryCallingCode: f,
                        number: l.slice(s)
                    };
                    s++
                }
                return {}
            }
        },
        399471: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => i
            });
            var d = u(812581),
                t = u(131316),
                e = u(117428),
                r = u(187856);

            function i(l, n, u, i) {
                var o = n ? (0, d.Gg)(n, i) : u;
                if (0 === l.indexOf(o)) {
                    (i = new d.ZP(i)).selectNumberingPlan(n, u);
                    var a = l.slice(o.length),
                        $ = (0, e.Z)(a, i).nationalNumber,
                        c = (0, e.Z)(l, i).nationalNumber;
                    if (!(0, t.Z)(c, i.nationalNumberPattern()) && (0, t.Z)($, i.nationalNumberPattern()) || "TOO_LONG" === (0, r.Z)(c, i)) return {
                        countryCallingCode: o,
                        number: a
                    }
                }
                return {
                    number: l
                }
            }
        },
        117428: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => r
            });
            var d = u(5227),
                t = u(131316),
                e = u(187856);

            function r(l, n) {
                var u = (0, d.Z)(l, n),
                    r = u.carrierCode,
                    i = u.nationalNumber;
                if (i !== l) {
                    if (! function(l, n, u) {
                            if ((0, t.Z)(l, u.nationalNumberPattern()) && !(0, t.Z)(n, u.nationalNumberPattern())) return !1;
                            return !0
                        }(l, i, n)) return {
                        nationalNumber: l
                    };
                    if (n.possibleLengths() && ! function(l, n) {
                            switch ((0, e.Z)(l, n)) {
                                case "TOO_SHORT":
                                case "INVALID_LENGTH":
                                    return !1;
                                default:
                                    return !0
                            }
                        }(i, n)) return {
                        nationalNumber: l
                    }
                }
                return {
                    nationalNumber: i,
                    carrierCode: r
                }
            }
        },
        5227: (l, n, u) => {
            "use strict";

            function d(l, n) {
                if (l && n.numberingPlan.nationalPrefixForParsing()) {
                    var u = new RegExp("^(?:" + n.numberingPlan.nationalPrefixForParsing() + ")"),
                        d = u.exec(l);
                    if (d) {
                        var t, e, r, i = d.length - 1,
                            o = i > 0 && d[i];
                        if (n.nationalPrefixTransformRule() && o) t = l.replace(u, n.nationalPrefixTransformRule()), i > 1 && (e = d[1]);
                        else {
                            var a = d[0];
                            t = l.slice(a.length), o && (e = d[1])
                        }
                        if (o) {
                            var $ = l.indexOf(d[1]);
                            l.slice(0, $) === n.numberingPlan.nationalPrefix() && (r = n.numberingPlan.nationalPrefix())
                        } else r = d[0];
                        return {
                            nationalNumber: t,
                            nationalPrefix: r,
                            carrierCode: e
                        }
                    }
                }
                return {
                    nationalNumber: l
                }
            }
            u.d(n, {
                Z: () => d
            })
        },
        792691: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => i
            });
            var d = u(812581),
                t = u(191089);

            function e(l, n) {
                var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                if (u) return (u = u.call(l)).next.bind(u);
                if (Array.isArray(l) || (u = function(l, n) {
                        if (!l) return;
                        if ("string" === typeof l) return r(l, n);
                        var u = Object.prototype.toString.call(l).slice(8, -1);
                        "Object" === u && l.constructor && (u = l.constructor.name);
                        if ("Map" === u || "Set" === u) return Array.from(l);
                        if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return r(l, n)
                    }(l)) || n && l && "number" === typeof l.length) {
                    u && (l = u);
                    var d = 0;
                    return function() {
                        return d >= l.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: l[d++]
                        }
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function r(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function i(l, n, u) {
                var r = u.getCountryCodesForCallingCode(l);
                if (r) return 1 === r.length ? r[0] : function(l, n, u) {
                    u = new d.ZP(u);
                    for (var r, i = e(l); !(r = i()).done;) {
                        var o = r.value;
                        if (u.country(o), u.leadingDigits()) {
                            if (n && 0 === n.search(u.leadingDigits())) return o
                        } else if ((0, t.Z)({
                                phone: n,
                                country: o
                            }, void 0, u.metadata)) return o
                    }
                }(r, n, u.metadata)
            }
        },
        191089: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => o
            });
            var d = u(812581),
                t = u(131316);

            function e(l, n) {
                var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                if (u) return (u = u.call(l)).next.bind(u);
                if (Array.isArray(l) || (u = function(l, n) {
                        if (!l) return;
                        if ("string" === typeof l) return r(l, n);
                        var u = Object.prototype.toString.call(l).slice(8, -1);
                        "Object" === u && l.constructor && (u = l.constructor.name);
                        if ("Map" === u || "Set" === u) return Array.from(l);
                        if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return r(l, n)
                    }(l)) || n && l && "number" === typeof l.length) {
                    u && (l = u);
                    var d = 0;
                    return function() {
                        return d >= l.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: l[d++]
                        }
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function r(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }
            var i = ["MOBILE", "PREMIUM_RATE", "TOLL_FREE", "SHARED_COST", "VOIP", "PERSONAL_NUMBER", "PAGER", "UAN", "VOICEMAIL"];

            function o(l, n, u) {
                if (n = n || {}, l.country) {
                    (u = new d.ZP(u)).selectNumberingPlan(l.country, l.countryCallingCode);
                    var r = n.v2 ? l.nationalNumber : l.phone;
                    if ((0, t.Z)(r, u.nationalNumberPattern())) {
                        if (a(r, "FIXED_LINE", u)) return u.type("MOBILE") && "" === u.type("MOBILE").pattern() ? "FIXED_LINE_OR_MOBILE" : u.type("MOBILE") ? a(r, "MOBILE", u) ? "FIXED_LINE_OR_MOBILE" : "FIXED_LINE" : "FIXED_LINE_OR_MOBILE";
                        for (var o, $ = e(i); !(o = $()).done;) {
                            var c = o.value;
                            if (a(r, c, u)) return c
                        }
                    }
                }
            }

            function a(l, n, u) {
                return !(!(n = u.type(n)) || !n.pattern()) && (!(n.possibleLengths() && n.possibleLengths().indexOf(l.length) < 0) && (0, t.Z)(l, n.pattern()))
            }
        },
        293345: (l, n, u) => {
            "use strict";
            u.d(n, {
                ZP: () => $,
                ch: () => c
            });
            var d = u(295619),
                t = u(133878),
                e = "[" + d.xc + "]{" + d.ex + "}",
                r = "[" + d.xy + "]{0,1}(?:[" + d.uv + "]*[" + d.xc + "]){3,}[" + d.uv + d.xc + "]*",
                i = new RegExp("^[" + d.xy + "]{0,1}(?:[" + d.uv + "]*[" + d.xc + "]){1,2}$", "i"),
                o = r + "(?:" + (0, t.Z)() + ")?",
                a = new RegExp("^" + e + "$|^" + o + "$", "i");

            function $(l) {
                return l.length >= d.ex && a.test(l)
            }

            function c(l) {
                return i.test(l)
            }
        },
        131316: (l, n, u) => {
            "use strict";

            function d(l, n) {
                return l = l || "", new RegExp("^(?:" + n + ")$").test(l)
            }
            u.d(n, {
                Z: () => d
            })
        },
        113633: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => r
            });
            var d = u(812581),
                t = u(295619),
                e = new RegExp("([" + t.xc + "])");

            function r(l, n, u, t) {
                if (n) {
                    var r = new d.ZP(t);
                    r.selectNumberingPlan(n, u);
                    var i = new RegExp(r.IDDPrefix());
                    if (0 === l.search(i)) {
                        var o = (l = l.slice(l.match(i)[0].length)).match(e);
                        if (!(o && null != o[1] && o[1].length > 0 && "0" === o[1])) return l
                    }
                }
            }
        },
        815864: (l, n, u) => {
            "use strict";
            u.d(n, {
                D: () => r,
                Z: () => e
            });
            var d = u(812581),
                t = u(187856);

            function e(l, n, u) {
                if (void 0 === n && (n = {}), u = new d.ZP(u), n.v2) {
                    if (!l.countryCallingCode) throw new Error("Invalid phone number object passed");
                    u.selectNumberingPlan(l.countryCallingCode)
                } else {
                    if (!l.phone) return !1;
                    if (l.country) {
                        if (!u.hasCountry(l.country)) throw new Error("Unknown country: ".concat(l.country));
                        u.country(l.country)
                    } else {
                        if (!l.countryCallingCode) throw new Error("Invalid phone number object passed");
                        u.selectNumberingPlan(l.countryCallingCode)
                    }
                }
                if (u.possibleLengths()) return r(l.phone || l.nationalNumber, u);
                if (l.countryCallingCode && u.isNonGeographicCallingCode(l.countryCallingCode)) return !0;
                throw new Error('Missing "possibleLengths" in metadata. Perhaps the metadata has been generated before v1.0.18.')
            }

            function r(l, n) {
                return "IS_POSSIBLE" === (0, t.Z)(l, n)
            }
        },
        812581: (l, n, u) => {
            "use strict";

            function d(l, n) {
                l = l.split("-"), n = n.split("-");
                for (var u = l[0].split("."), d = n[0].split("."), t = 0; t < 3; t++) {
                    var e = Number(u[t]),
                        r = Number(d[t]);
                    if (e > r) return 1;
                    if (r > e) return -1;
                    if (!isNaN(e) && isNaN(r)) return 1;
                    if (isNaN(e) && !isNaN(r)) return -1
                }
                return l[1] && n[1] ? l[1] > n[1] ? 1 : l[1] < n[1] ? -1 : 0 : !l[1] && n[1] ? 1 : l[1] && !n[1] ? -1 : 0
            }

            function t(l) {
                return t = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(l) {
                    return typeof l
                } : function(l) {
                    return l && "function" == typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                }, t(l)
            }

            function e(l, n) {
                if (!(l instanceof n)) throw new TypeError("Cannot call a class as a function")
            }

            function r(l, n) {
                for (var u = 0; u < n.length; u++) {
                    var d = n[u];
                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(l, d.key, d)
                }
            }

            function i(l, n, u) {
                return n && r(l.prototype, n), u && r(l, u), Object.defineProperty(l, "prototype", {
                    writable: !1
                }), l
            }
            u.d(n, {
                ZP: () => $,
                Gg: () => g
            });
            var o = " ext. ",
                a = /^\d+$/,
                $ = function() {
                    function l(n) {
                        e(this, l),
                            function(l) {
                                if (!l) throw new Error("[libphonenumber-js] `metadata` argument not passed. Check your arguments.");
                                if (!v(l) || !v(l.countries)) throw new Error("[libphonenumber-js] `metadata` argument was passed but it's not a valid metadata. Must be an object having `.countries` child object property. Got ".concat(v(l) ? "an object of shape: { " + Object.keys(l).join(", ") + " }" : "a " + m(l) + ": " + l, "."))
                            }(n), this.metadata = n, y.call(this, n)
                    }
                    return i(l, [{
                        key: "getCountries",
                        value: function() {
                            return Object.keys(this.metadata.countries).filter((function(l) {
                                return "001" !== l
                            }))
                        }
                    }, {
                        key: "getCountryMetadata",
                        value: function(l) {
                            return this.metadata.countries[l]
                        }
                    }, {
                        key: "nonGeographic",
                        value: function() {
                            if (!(this.v1 || this.v2 || this.v3)) return this.metadata.nonGeographic || this.metadata.nonGeographical
                        }
                    }, {
                        key: "hasCountry",
                        value: function(l) {
                            return void 0 !== this.getCountryMetadata(l)
                        }
                    }, {
                        key: "hasCallingCode",
                        value: function(l) {
                            if (this.getCountryCodesForCallingCode(l)) return !0;
                            if (this.nonGeographic()) {
                                if (this.nonGeographic()[l]) return !0
                            } else {
                                var n = this.countryCallingCodes()[l];
                                if (n && 1 === n.length && "001" === n[0]) return !0
                            }
                        }
                    }, {
                        key: "isNonGeographicCallingCode",
                        value: function(l) {
                            return this.nonGeographic() ? !!this.nonGeographic()[l] : !this.getCountryCodesForCallingCode(l)
                        }
                    }, {
                        key: "country",
                        value: function(l) {
                            return this.selectNumberingPlan(l)
                        }
                    }, {
                        key: "selectNumberingPlan",
                        value: function(l, n) {
                            if (l && a.test(l) && (n = l, l = null), l && "001" !== l) {
                                if (!this.hasCountry(l)) throw new Error("Unknown country: ".concat(l));
                                this.numberingPlan = new c(this.getCountryMetadata(l), this)
                            } else if (n) {
                                if (!this.hasCallingCode(n)) throw new Error("Unknown calling code: ".concat(n));
                                this.numberingPlan = new c(this.getNumberingPlanMetadata(n), this)
                            } else this.numberingPlan = void 0;
                            return this
                        }
                    }, {
                        key: "getCountryCodesForCallingCode",
                        value: function(l) {
                            var n = this.countryCallingCodes()[l];
                            if (n) {
                                if (1 === n.length && 3 === n[0].length) return;
                                return n
                            }
                        }
                    }, {
                        key: "getCountryCodeForCallingCode",
                        value: function(l) {
                            var n = this.getCountryCodesForCallingCode(l);
                            if (n) return n[0]
                        }
                    }, {
                        key: "getNumberingPlanMetadata",
                        value: function(l) {
                            var n = this.getCountryCodeForCallingCode(l);
                            if (n) return this.getCountryMetadata(n);
                            if (this.nonGeographic()) {
                                var u = this.nonGeographic()[l];
                                if (u) return u
                            } else {
                                var d = this.countryCallingCodes()[l];
                                if (d && 1 === d.length && "001" === d[0]) return this.metadata.countries["001"]
                            }
                        }
                    }, {
                        key: "countryCallingCode",
                        value: function() {
                            return this.numberingPlan.callingCode()
                        }
                    }, {
                        key: "IDDPrefix",
                        value: function() {
                            return this.numberingPlan.IDDPrefix()
                        }
                    }, {
                        key: "defaultIDDPrefix",
                        value: function() {
                            return this.numberingPlan.defaultIDDPrefix()
                        }
                    }, {
                        key: "nationalNumberPattern",
                        value: function() {
                            return this.numberingPlan.nationalNumberPattern()
                        }
                    }, {
                        key: "possibleLengths",
                        value: function() {
                            return this.numberingPlan.possibleLengths()
                        }
                    }, {
                        key: "formats",
                        value: function() {
                            return this.numberingPlan.formats()
                        }
                    }, {
                        key: "nationalPrefixForParsing",
                        value: function() {
                            return this.numberingPlan.nationalPrefixForParsing()
                        }
                    }, {
                        key: "nationalPrefixTransformRule",
                        value: function() {
                            return this.numberingPlan.nationalPrefixTransformRule()
                        }
                    }, {
                        key: "leadingDigits",
                        value: function() {
                            return this.numberingPlan.leadingDigits()
                        }
                    }, {
                        key: "hasTypes",
                        value: function() {
                            return this.numberingPlan.hasTypes()
                        }
                    }, {
                        key: "type",
                        value: function(l) {
                            return this.numberingPlan.type(l)
                        }
                    }, {
                        key: "ext",
                        value: function() {
                            return this.numberingPlan.ext()
                        }
                    }, {
                        key: "countryCallingCodes",
                        value: function() {
                            return this.v1 ? this.metadata.country_phone_code_to_countries : this.metadata.country_calling_codes
                        }
                    }, {
                        key: "chooseCountryByCountryCallingCode",
                        value: function(l) {
                            return this.selectNumberingPlan(l)
                        }
                    }, {
                        key: "hasSelectedNumberingPlan",
                        value: function() {
                            return void 0 !== this.numberingPlan
                        }
                    }]), l
                }(),
                c = function() {
                    function l(n, u) {
                        e(this, l), this.globalMetadataObject = u, this.metadata = n, y.call(this, u.metadata)
                    }
                    return i(l, [{
                        key: "callingCode",
                        value: function() {
                            return this.metadata[0]
                        }
                    }, {
                        key: "getDefaultCountryMetadataForRegion",
                        value: function() {
                            return this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())
                        }
                    }, {
                        key: "IDDPrefix",
                        value: function() {
                            if (!this.v1 && !this.v2) return this.metadata[1]
                        }
                    }, {
                        key: "defaultIDDPrefix",
                        value: function() {
                            if (!this.v1 && !this.v2) return this.metadata[12]
                        }
                    }, {
                        key: "nationalNumberPattern",
                        value: function() {
                            return this.v1 || this.v2 ? this.metadata[1] : this.metadata[2]
                        }
                    }, {
                        key: "possibleLengths",
                        value: function() {
                            if (!this.v1) return this.metadata[this.v2 ? 2 : 3]
                        }
                    }, {
                        key: "_getFormats",
                        value: function(l) {
                            return l[this.v1 ? 2 : this.v2 ? 3 : 4]
                        }
                    }, {
                        key: "formats",
                        value: function() {
                            var l = this,
                                n = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || [];
                            return n.map((function(n) {
                                return new s(n, l)
                            }))
                        }
                    }, {
                        key: "nationalPrefix",
                        value: function() {
                            return this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]
                        }
                    }, {
                        key: "_getNationalPrefixFormattingRule",
                        value: function(l) {
                            return l[this.v1 ? 4 : this.v2 ? 5 : 6]
                        }
                    }, {
                        key: "nationalPrefixFormattingRule",
                        value: function() {
                            return this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())
                        }
                    }, {
                        key: "_nationalPrefixForParsing",
                        value: function() {
                            return this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]
                        }
                    }, {
                        key: "nationalPrefixForParsing",
                        value: function() {
                            return this._nationalPrefixForParsing() || this.nationalPrefix()
                        }
                    }, {
                        key: "nationalPrefixTransformRule",
                        value: function() {
                            return this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]
                        }
                    }, {
                        key: "_getNationalPrefixIsOptionalWhenFormatting",
                        value: function() {
                            return !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]
                        }
                    }, {
                        key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
                        value: function() {
                            return this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) || this._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())
                        }
                    }, {
                        key: "leadingDigits",
                        value: function() {
                            return this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]
                        }
                    }, {
                        key: "types",
                        value: function() {
                            return this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]
                        }
                    }, {
                        key: "hasTypes",
                        value: function() {
                            return (!this.types() || 0 !== this.types().length) && !!this.types()
                        }
                    }, {
                        key: "type",
                        value: function(l) {
                            if (this.hasTypes() && h(this.types(), l)) return new p(h(this.types(), l), this)
                        }
                    }, {
                        key: "ext",
                        value: function() {
                            return this.v1 || this.v2 ? o : this.metadata[13] || o
                        }
                    }]), l
                }(),
                s = function() {
                    function l(n, u) {
                        e(this, l), this._format = n, this.metadata = u
                    }
                    return i(l, [{
                        key: "pattern",
                        value: function() {
                            return this._format[0]
                        }
                    }, {
                        key: "format",
                        value: function() {
                            return this._format[1]
                        }
                    }, {
                        key: "leadingDigitsPatterns",
                        value: function() {
                            return this._format[2] || []
                        }
                    }, {
                        key: "nationalPrefixFormattingRule",
                        value: function() {
                            return this._format[3] || this.metadata.nationalPrefixFormattingRule()
                        }
                    }, {
                        key: "nationalPrefixIsOptionalWhenFormattingInNationalFormat",
                        value: function() {
                            return !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()
                        }
                    }, {
                        key: "nationalPrefixIsMandatoryWhenFormattingInNationalFormat",
                        value: function() {
                            return this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()
                        }
                    }, {
                        key: "usesNationalPrefix",
                        value: function() {
                            return !(!this.nationalPrefixFormattingRule() || f.test(this.nationalPrefixFormattingRule()))
                        }
                    }, {
                        key: "internationalFormat",
                        value: function() {
                            return this._format[5] || this.format()
                        }
                    }]), l
                }(),
                f = /^\(?\$1\)?$/,
                p = function() {
                    function l(n, u) {
                        e(this, l), this.type = n, this.metadata = u
                    }
                    return i(l, [{
                        key: "pattern",
                        value: function() {
                            return this.metadata.v1 ? this.type : this.type[0]
                        }
                    }, {
                        key: "possibleLengths",
                        value: function() {
                            if (!this.metadata.v1) return this.type[1] || this.metadata.possibleLengths()
                        }
                    }]), l
                }();

            function h(l, n) {
                switch (n) {
                    case "FIXED_LINE":
                        return l[0];
                    case "MOBILE":
                        return l[1];
                    case "TOLL_FREE":
                        return l[2];
                    case "PREMIUM_RATE":
                        return l[3];
                    case "PERSONAL_NUMBER":
                        return l[4];
                    case "VOICEMAIL":
                        return l[5];
                    case "UAN":
                        return l[6];
                    case "PAGER":
                        return l[7];
                    case "VOIP":
                        return l[8];
                    case "SHARED_COST":
                        return l[9]
                }
            }
            var v = function(l) {
                    return "object" === t(l)
                },
                m = function(l) {
                    return t(l)
                };

            function g(l, n) {
                if ((n = new $(n)).hasCountry(l)) return n.country(l).countryCallingCode();
                throw new Error("Unknown country: ".concat(l))
            }

            function y(l) {
                var n = l.version;
                "number" === typeof n ? (this.v1 = 1 === n, this.v2 = 2 === n, this.v3 = 3 === n, this.v4 = 4 === n) : n ? -1 === d(n, "1.2.0") ? this.v2 = !0 : -1 === d(n, "1.7.35") ? this.v3 = !0 : this.v4 = !0 : this.v1 = !0
            }
        },
        492844: (l, n, u) => {
            "use strict";
            u.d(n, {
                h: () => K
            });
            var d = u(321293);

            function t(l, n) {
                var u = Array.prototype.slice.call(n);
                return u.push(d.Z), l.apply(this, u)
            }
            var e = u(295619);

            function r(l) {
                return r = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(l) {
                    return typeof l
                } : function(l) {
                    return l && "function" == typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                }, r(l)
            }

            function i(l, n) {
                for (var u = 0; u < n.length; u++) {
                    var d = n[u];
                    d.enumerable = d.enumerable || !1, d.configurable = !0, "value" in d && (d.writable = !0), Object.defineProperty(l, d.key, d)
                }
            }

            function o(l, n) {
                if (n && ("object" === r(n) || "function" === typeof n)) return n;
                if (void 0 !== n) throw new TypeError("Derived constructors may only return object or undefined");
                return a(l)
            }

            function a(l) {
                if (void 0 === l) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return l
            }

            function $(l) {
                var n = "function" === typeof Map ? new Map : void 0;
                return $ = function(l) {
                    if (null === l || (u = l, -1 === Function.toString.call(u).indexOf("[native code]"))) return l;
                    var u;
                    if ("function" !== typeof l) throw new TypeError("Super expression must either be null or a function");
                    if ("undefined" !== typeof n) {
                        if (n.has(l)) return n.get(l);
                        n.set(l, d)
                    }

                    function d() {
                        return c(l, arguments, p(this).constructor)
                    }
                    return d.prototype = Object.create(l.prototype, {
                        constructor: {
                            value: d,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), f(d, l)
                }, $(l)
            }

            function c(l, n, u) {
                return c = s() ? Reflect.construct : function(l, n, u) {
                    var d = [null];
                    d.push.apply(d, n);
                    var t = new(Function.bind.apply(l, d));
                    return u && f(t, u.prototype), t
                }, c.apply(null, arguments)
            }

            function s() {
                if ("undefined" === typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" === typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (l) {
                    return !1
                }
            }

            function f(l, n) {
                return f = Object.setPrototypeOf || function(l, n) {
                    return l.__proto__ = n, l
                }, f(l, n)
            }

            function p(l) {
                return p = Object.setPrototypeOf ? Object.getPrototypeOf : function(l) {
                    return l.__proto__ || Object.getPrototypeOf(l)
                }, p(l)
            }
            var h = function(l) {
                    ! function(l, n) {
                        if ("function" !== typeof n && null !== n) throw new TypeError("Super expression must either be null or a function");
                        l.prototype = Object.create(n && n.prototype, {
                            constructor: {
                                value: l,
                                writable: !0,
                                configurable: !0
                            }
                        }), Object.defineProperty(l, "prototype", {
                            writable: !1
                        }), n && f(l, n)
                    }($, l);
                    var n, u, d, t, e, r = (n = $, u = s(), function() {
                        var l, d = p(n);
                        if (u) {
                            var t = p(this).constructor;
                            l = Reflect.construct(d, arguments, t)
                        } else l = d.apply(this, arguments);
                        return o(this, l)
                    });

                    function $(l) {
                        var n;
                        return function(l, n) {
                            if (!(l instanceof n)) throw new TypeError("Cannot call a class as a function")
                        }(this, $), n = r.call(this, l), Object.setPrototypeOf(a(n), $.prototype), n.name = n.constructor.name, n
                    }
                    return d = $, t && i(d.prototype, t), e && i(d, e), Object.defineProperty(d, "prototype", {
                        writable: !1
                    }), d
                }($(Error)),
                v = u(812581),
                m = u(293345),
                g = u(133878),
                y = new RegExp("(?:" + (0, g.Z)() + ")$", "i");
            var b = u(829233);

            function w(l, n) {
                var u = "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                if (u) return (u = u.call(l)).next.bind(u);
                if (Array.isArray(l) || (u = function(l, n) {
                        if (!l) return;
                        if ("string" === typeof l) return _(l, n);
                        var u = Object.prototype.toString.call(l).slice(8, -1);
                        "Object" === u && l.constructor && (u = l.constructor.name);
                        if ("Map" === u || "Set" === u) return Array.from(l);
                        if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return _(l, n)
                    }(l)) || n && l && "number" === typeof l.length) {
                    u && (l = u);
                    var d = 0;
                    return function() {
                        return d >= l.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: l[d++]
                        }
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function _(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function C(l) {
                for (var n, u = "", d = w(l.split("")); !(n = d()).done;) {
                    u += E(n.value, u) || ""
                }
                return u
            }

            function E(l, n) {
                if ("+" === l) {
                    if (n) return;
                    return "+"
                }
                return (0, b.xh)(l)
            }
            var x = u(815864),
                S = u(400457),
                A = u(700433),
                M = u(131316),
                O = u(513661),
                P = u(117428),
                F = u(792691),
                T = new RegExp("[" + e.xy + e.xc + "]"),
                N = new RegExp("[^" + e.xc + "#]+$");

            function I(l, n, u) {
                if (n = n || {}, u = new v.ZP(u), n.defaultCountry && !u.hasCountry(n.defaultCountry)) {
                    if (n.v2) throw new h("INVALID_COUNTRY");
                    throw new Error("Unknown country: ".concat(n.defaultCountry))
                }
                var d = function(l, n, u) {
                        if (l && 0 === l.indexOf("tel:")) return (0, S.m)(l);
                        var d = function(l, n, u) {
                            if (!l) return;
                            if (l.length > 250) {
                                if (u) throw new h("TOO_LONG");
                                return
                            }
                            if (!1 === n) return l;
                            var d = l.search(T);
                            if (d < 0) return;
                            return l.slice(d).replace(N, "")
                        }(l, u, n);
                        if (!d) return {};
                        if (!(0, m.ZP)(d)) return (0, m.ch)(d) ? {
                            error: "TOO_SHORT"
                        } : {};
                        var t = function(l) {
                            var n = l.search(y);
                            if (n < 0) return {};
                            for (var u = l.slice(0, n), d = l.match(y), t = 1; t < d.length;) {
                                if (d[t]) return {
                                    number: u,
                                    ext: d[t]
                                };
                                t++
                            }
                        }(d);
                        if (t.ext) return t;
                        return {
                            number: d
                        }
                    }(l, n.v2, n.extract),
                    t = d.number,
                    r = d.ext,
                    i = d.error;
                if (!t) {
                    if (n.v2) {
                        if ("TOO_SHORT" === i) throw new h("TOO_SHORT");
                        throw new h("NOT_A_NUMBER")
                    }
                    return {}
                }
                var o = function(l, n, u, d) {
                        var t, e = (0, O.Z)(C(l), n, u, d.metadata),
                            r = e.countryCallingCode,
                            i = e.number;
                        if (r) d.selectNumberingPlan(r);
                        else {
                            if (!i || !n && !u) return {};
                            d.selectNumberingPlan(n, u), n && (t = n), r = u || (0, v.Gg)(n, d.metadata)
                        }
                        if (!i) return {
                            countryCallingCode: r
                        };
                        var o = (0, P.Z)(C(i), d),
                            a = o.nationalNumber,
                            $ = o.carrierCode,
                            c = (0, F.Z)(r, a, d);
                        c && (t = c, "001" === c || d.country(t));
                        return {
                            country: t,
                            countryCallingCode: r,
                            nationalNumber: a,
                            carrierCode: $
                        }
                    }(t, n.defaultCountry, n.defaultCallingCode, u),
                    a = o.country,
                    $ = o.nationalNumber,
                    c = o.countryCallingCode,
                    s = o.carrierCode;
                if (!u.hasSelectedNumberingPlan()) {
                    if (n.v2) throw new h("INVALID_COUNTRY");
                    return {}
                }
                if (!$ || $.length < e.ex) {
                    if (n.v2) throw new h("TOO_SHORT");
                    return {}
                }
                if ($.length > e.sJ) {
                    if (n.v2) throw new h("TOO_LONG");
                    return {}
                }
                if (n.v2) {
                    var f = new A.Z(c, $, u.metadata);
                    return a && (f.country = a), s && (f.carrierCode = s), r && (f.ext = r), f
                }
                var p = !!(n.extended ? u.hasSelectedNumberingPlan() : a) && (0, M.Z)($, u.nationalNumberPattern());
                return n.extended ? {
                    country: a,
                    countryCallingCode: c,
                    carrierCode: s,
                    valid: p,
                    possible: !!p || !(!0 !== n.extended || !u.possibleLengths() || !(0, x.D)($, u)),
                    phone: $,
                    ext: r
                } : p ? function(l, n, u) {
                    var d = {
                        country: l,
                        phone: n
                    };
                    u && (d.ext = u);
                    return d
                }(a, $, r) : {}
            }

            function R(l, n) {
                var u = Object.keys(l);
                if (Object.getOwnPropertySymbols) {
                    var d = Object.getOwnPropertySymbols(l);
                    n && (d = d.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(l, n).enumerable
                    }))), u.push.apply(u, d)
                }
                return u
            }

            function k(l) {
                for (var n = 1; n < arguments.length; n++) {
                    var u = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? R(Object(u), !0).forEach((function(n) {
                        D(l, n, u[n])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(u)) : R(Object(u)).forEach((function(n) {
                        Object.defineProperty(l, n, Object.getOwnPropertyDescriptor(u, n))
                    }))
                }
                return l
            }

            function D(l, n, u) {
                return n in l ? Object.defineProperty(l, n, {
                    value: u,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : l[n] = u, l
            }

            function L(l, n, u) {
                return I(l, k(k({}, n), {}, {
                    v2: !0
                }), u)
            }

            function Z(l) {
                return Z = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(l) {
                    return typeof l
                } : function(l) {
                    return l && "function" == typeof Symbol && l.constructor === Symbol && l !== Symbol.prototype ? "symbol" : typeof l
                }, Z(l)
            }

            function B(l, n) {
                var u = Object.keys(l);
                if (Object.getOwnPropertySymbols) {
                    var d = Object.getOwnPropertySymbols(l);
                    n && (d = d.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(l, n).enumerable
                    }))), u.push.apply(u, d)
                }
                return u
            }

            function j(l, n, u) {
                return n in l ? Object.defineProperty(l, n, {
                    value: u,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : l[n] = u, l
            }

            function G(l, n) {
                return function(l) {
                    if (Array.isArray(l)) return l
                }(l) || function(l, n) {
                    var u = null == l ? null : "undefined" !== typeof Symbol && l[Symbol.iterator] || l["@@iterator"];
                    if (null == u) return;
                    var d, t, e = [],
                        r = !0,
                        i = !1;
                    try {
                        for (u = u.call(l); !(r = (d = u.next()).done) && (e.push(d.value), !n || e.length !== n); r = !0);
                    } catch (l) {
                        i = !0, t = l
                    } finally {
                        try {
                            r || null == u.return || u.return()
                        } finally {
                            if (i) throw t
                        }
                    }
                    return e
                }(l, n) || function(l, n) {
                    if (!l) return;
                    if ("string" === typeof l) return U(l, n);
                    var u = Object.prototype.toString.call(l).slice(8, -1);
                    "Object" === u && l.constructor && (u = l.constructor.name);
                    if ("Map" === u || "Set" === u) return Array.from(l);
                    if ("Arguments" === u || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(u)) return U(l, n)
                }(l, n) || function() {
                    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function U(l, n) {
                (null == n || n > l.length) && (n = l.length);
                for (var u = 0, d = new Array(n); u < n; u++) d[u] = l[u];
                return d
            }

            function V() {
                var l = H(arguments),
                    n = l.text,
                    u = l.options,
                    d = l.metadata;
                return L(n, u, d)
            }

            function H(l) {
                var n, u, d, t = G(Array.prototype.slice.call(l), 4),
                    e = t[0],
                    r = t[1],
                    i = t[2],
                    o = t[3];
                if ("string" !== typeof e) throw new TypeError("A text for parsing must be a string.");
                if (n = e, r && "string" !== typeof r) {
                    if (!W(r)) throw new Error("Invalid second argument: ".concat(r));
                    i ? (u = r, d = i) : d = r
                } else o ? (u = i, d = o) : (u = void 0, d = i), r && (u = function(l) {
                    for (var n = 1; n < arguments.length; n++) {
                        var u = null != arguments[n] ? arguments[n] : {};
                        n % 2 ? B(Object(u), !0).forEach((function(n) {
                            j(l, n, u[n])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(l, Object.getOwnPropertyDescriptors(u)) : B(Object(u)).forEach((function(n) {
                            Object.defineProperty(l, n, Object.getOwnPropertyDescriptor(u, n))
                        }))
                    }
                    return l
                }({
                    defaultCountry: r
                }, u));
                return {
                    text: n,
                    options: u,
                    metadata: d
                }
            }
            var W = function(l) {
                return "object" === Z(l)
            };

            function K() {
                return t(V, arguments)
            }
        },
        321293: (l, n, u) => {
            "use strict";
            u.d(n, {
                Z: () => d
            });
            const d = {
                version: 4,
                country_calling_codes: {
                    1: ["US", "AG", "AI", "AS", "BB", "BM", "BS", "CA", "DM", "DO", "GD", "GU", "JM", "KN", "KY", "LC", "MP", "MS", "PR", "SX", "TC", "TT", "VC", "VG", "VI"],
                    7: ["RU", "KZ"],
                    20: ["EG"],
                    27: ["ZA"],
                    30: ["GR"],
                    31: ["NL"],
                    32: ["BE"],
                    33: ["FR"],
                    34: ["ES"],
                    36: ["HU"],
                    39: ["IT", "VA"],
                    40: ["RO"],
                    41: ["CH"],
                    43: ["AT"],
                    44: ["GB", "GG", "IM", "JE"],
                    45: ["DK"],
                    46: ["SE"],
                    47: ["NO", "SJ"],
                    48: ["PL"],
                    49: ["DE"],
                    51: ["PE"],
                    52: ["MX"],
                    53: ["CU"],
                    54: ["AR"],
                    55: ["BR"],
                    56: ["CL"],
                    57: ["CO"],
                    58: ["VE"],
                    60: ["MY"],
                    61: ["AU", "CC", "CX"],
                    62: ["ID"],
                    63: ["PH"],
                    64: ["NZ"],
                    65: ["SG"],
                    66: ["TH"],
                    81: ["JP"],
                    82: ["KR"],
                    84: ["VN"],
                    86: ["CN"],
                    90: ["TR"],
                    91: ["IN"],
                    92: ["PK"],
                    93: ["AF"],
                    94: ["LK"],
                    95: ["MM"],
                    98: ["IR"],
                    211: ["SS"],
                    212: ["MA", "EH"],
                    213: ["DZ"],
                    216: ["TN"],
                    218: ["LY"],
                    220: ["GM"],
                    221: ["SN"],
                    222: ["MR"],
                    223: ["ML"],
                    224: ["GN"],
                    225: ["CI"],
                    226: ["BF"],
                    227: ["NE"],
                    228: ["TG"],
                    229: ["BJ"],
                    230: ["MU"],
                    231: ["LR"],
                    232: ["SL"],
                    233: ["GH"],
                    234: ["NG"],
                    235: ["TD"],
                    236: ["CF"],
                    237: ["CM"],
                    238: ["CV"],
                    239: ["ST"],
                    240: ["GQ"],
                    241: ["GA"],
                    242: ["CG"],
                    243: ["CD"],
                    244: ["AO"],
                    245: ["GW"],
                    246: ["IO"],
                    247: ["AC"],
                    248: ["SC"],
                    249: ["SD"],
                    250: ["RW"],
                    251: ["ET"],
                    252: ["SO"],
                    253: ["DJ"],
                    254: ["KE"],
                    255: ["TZ"],
                    256: ["UG"],
                    257: ["BI"],
                    258: ["MZ"],
                    260: ["ZM"],
                    261: ["MG"],
                    262: ["RE", "YT"],
                    263: ["ZW"],
                    264: ["NA"],
                    265: ["MW"],
                    266: ["LS"],
                    267: ["BW"],
                    268: ["SZ"],
                    269: ["KM"],
                    290: ["SH", "TA"],
                    291: ["ER"],
                    297: ["AW"],
                    298: ["FO"],
                    299: ["GL"],
                    350: ["GI"],
                    351: ["PT"],
                    352: ["LU"],
                    353: ["IE"],
                    354: ["IS"],
                    355: ["AL"],
                    356: ["MT"],
                    357: ["CY"],
                    358: ["FI", "AX"],
                    359: ["BG"],
                    370: ["LT"],
                    371: ["LV"],
                    372: ["EE"],
                    373: ["MD"],
                    374: ["AM"],
                    375: ["BY"],
                    376: ["AD"],
                    377: ["MC"],
                    378: ["SM"],
                    380: ["UA"],
                    381: ["RS"],
                    382: ["ME"],
                    383: ["XK"],
                    385: ["HR"],
                    386: ["SI"],
                    387: ["BA"],
                    389: ["MK"],
                    420: ["CZ"],
                    421: ["SK"],
                    423: ["LI"],
                    500: ["FK"],
                    501: ["BZ"],
                    502: ["GT"],
                    503: ["SV"],
                    504: ["HN"],
                    505: ["NI"],
                    506: ["CR"],
                    507: ["PA"],
                    508: ["PM"],
                    509: ["HT"],
                    590: ["GP", "BL", "MF"],
                    591: ["BO"],
                    592: ["GY"],
                    593: ["EC"],
                    594: ["GF"],
                    595: ["PY"],
                    596: ["MQ"],
                    597: ["SR"],
                    598: ["UY"],
                    599: ["CW", "BQ"],
                    670: ["TL"],
                    672: ["NF"],
                    673: ["BN"],
                    674: ["NR"],
                    675: ["PG"],
                    676: ["TO"],
                    677: ["SB"],
                    678: ["VU"],
                    679: ["FJ"],
                    680: ["PW"],
                    681: ["WF"],
                    682: ["CK"],
                    683: ["NU"],
                    685: ["WS"],
                    686: ["KI"],
                    687: ["NC"],
                    688: ["TV"],
                    689: ["PF"],
                    690: ["TK"],
                    691: ["FM"],
                    692: ["MH"],
                    850: ["KP"],
                    852: ["HK"],
                    853: ["MO"],
                    855: ["KH"],
                    856: ["LA"],
                    880: ["BD"],
                    886: ["TW"],
                    960: ["MV"],
                    961: ["LB"],
                    962: ["JO"],
                    963: ["SY"],
                    964: ["IQ"],
                    965: ["KW"],
                    966: ["SA"],
                    967: ["YE"],
                    968: ["OM"],
                    970: ["PS"],
                    971: ["AE"],
                    972: ["IL"],
                    973: ["BH"],
                    974: ["QA"],
                    975: ["BT"],
                    976: ["MN"],
                    977: ["NP"],
                    992: ["TJ"],
                    993: ["TM"],
                    994: ["AZ"],
                    995: ["GE"],
                    996: ["KG"],
                    998: ["UZ"]
                },
                countries: {
                    AC: ["247", "00", "(?:[01589]\\d|[46])\\d{4}", [5, 6], 0, 0, 0, 0, 0, 0, 0, [
                        ["6[2-467]\\d{3}", [5]],
                        ["4\\d{4}", [5]], 0, 0, 0, 0, ["(?:0[1-9]|[1589]\\d)\\d{4}", [6]]
                    ]],
                    AD: ["376", "00", "(?:1|6\\d)\\d{7}|[135-9]\\d{5}", [6, 8, 9],
                        [
                            ["(\\d{3})(\\d{3})", "$1 $2", ["[135-9]"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["1"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["[78]\\d{5}", [6]],
                            ["690\\d{6}|[356]\\d{5}", [6, 9]],
                            ["180[02]\\d{4}", [8]],
                            ["[19]\\d{5}", [6]]
                        ]
                    ],
                    AE: ["971", "00", "(?:[4-7]\\d|9[0-689])\\d{7}|800\\d{2,9}|[2-4679]\\d{7}", [5, 6, 7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d{3})(\\d{2,9})", "$1 $2", ["60|8"]],
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[236]|[479][2-8]"], "0$1"],
                            ["(\\d{3})(\\d)(\\d{5})", "$1 $2 $3", ["[479]"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["[2-4679][2-8]\\d{6}", [8]],
                            ["5[024-68]\\d{7}", [9]],
                            ["400\\d{6}|800\\d{2,9}"],
                            ["900[02]\\d{5}", [9]], 0, 0, ["600[25]\\d{5}", [9]], 0, 0, ["700[05]\\d{5}", [9]]
                        ]
                    ],
                    AF: ["93", "00", "[2-7]\\d{8}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:[25][0-8]|[34][0-4]|6[0-5])[2-9]\\d{6}"],
                            ["7\\d{8}"]
                        ]
                    ],
                    AG: ["1", "011", "(?:268|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([457]\\d{6})$", "268$1", 0, "268", [
                        ["268(?:4(?:6[0-38]|84)|56[0-2])\\d{4}"],
                        ["268(?:464|7(?:1[3-9]|[28]\\d|3[0246]|64|7[0-689]))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, ["26840[69]\\d{4}"],
                        ["26848[01]\\d{4}"]
                    ]],
                    AI: ["1", "011", "(?:264|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2457]\\d{6})$", "264$1", 0, "264", [
                        ["264(?:292|4(?:6[12]|9[78]))\\d{4}"],
                        ["264(?:235|4(?:69|76)|5(?:3[6-9]|8[1-4])|7(?:29|72))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, ["264724\\d{4}"]
                    ]],
                    AL: ["355", "00", "(?:700\\d\\d|900)\\d{3}|8\\d{5,7}|(?:[2-5]|6\\d)\\d{7}", [6, 7, 8, 9],
                        [
                            ["(\\d{3})(\\d{3,4})", "$1 $2", ["80|9"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["4[2-6]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2358][2-5]|4"], "0$1"],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[23578]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["6"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["4505[0-2]\\d{3}|(?:[2358][16-9]\\d[2-9]|4410)\\d{4}|(?:[2358][2-5][2-9]|4(?:[2-57-9][2-9]|6\\d))\\d{5}", [8]],
                            ["6(?:[78][2-9]|9\\d)\\d{6}", [9]],
                            ["800\\d{4}", [7]],
                            ["900[1-9]\\d\\d", [6]],
                            ["700[2-9]\\d{4}", [8]], 0, 0, 0, 0, ["808[1-9]\\d\\d", [6]]
                        ]
                    ],
                    AM: ["374", "00", "(?:[1-489]\\d|55|60|77)\\d{6}", [8],
                        [
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[89]0"], "0 $1"],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["2|3[12]"], "(0$1)"],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["1|47"], "(0$1)"],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["[3-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:1[0-25]|47)\\d|2(?:2[2-46]|3[1-8]|4[2-69]|5[2-7]|6[1-9]|8[1-7])|3[12]2)\\d{5}"],
                            ["(?:33|4[1349]|55|77|88|9[13-9])\\d{6}"],
                            ["800\\d{5}"],
                            ["90[016]\\d{5}"], 0, 0, 0, 0, ["60(?:2[78]|3[5-9]|4[02-9]|5[0-46-9]|[6-8]\\d|9[01])\\d{4}"],
                            ["80[1-4]\\d{5}"]
                        ]
                    ],
                    AO: ["244", "00", "[29]\\d{8}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[29]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2\\d(?:[0134][25-9]|[25-9]\\d)\\d{5}"],
                            ["9[1-59]\\d{7}"]
                        ]
                    ],
                    AR: ["54", "00", "(?:11|[89]\\d\\d)\\d{8}|[2368]\\d{9}", [10, 11],
                        [
                            ["(\\d{4})(\\d{2})(\\d{4})", "$1 $2-$3", ["2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])", "2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 1],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["1"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[68]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2-$3", ["[23]"], "0$1", 1],
                            ["(\\d)(\\d{4})(\\d{2})(\\d{4})", "$2 15-$3-$4", ["9(?:2[2-469]|3[3-578])", "9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))", "9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]", "9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]"], "0$1", 0, "$1 $2 $3-$4"],
                            ["(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 15-$3-$4", ["91"], "0$1", 0, "$1 $2 $3-$4"],
                            ["(\\d{3})(\\d{3})(\\d{5})", "$1-$2-$3", ["8"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 15-$3-$4", ["9"], "0$1", 0, "$1 $2 $3-$4"]
                        ], "0", 0, "0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?", "9$1", 0, 0, [
                            ["3888[013-9]\\d{5}|3(?:7(?:1[15]|81)|8(?:21|4[16]|69|9[12]))[46]\\d{5}|(?:29(?:54|66)|3(?:7(?:55|77)|865))[2-8]\\d{5}|(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|(?:2(?:284|3(?:02|23)|657|920)|3(?:4(?:8[27]|92)|541|878))[2-7]\\d{5}|(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:[47]6|62|89)|564))[2-6]\\d{5}|(?:(?:11[1-8]|670)\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|[58][3-6])))\\d{6}|2(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\d{5}|(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}", [10]],
                            ["93(?:7(?:1[15]|81)[46]|8(?:(?:21|4[16]|69|9[12])[46]|88[013-9]))\\d{5}|9(?:29(?:54|66)|3(?:7(?:55|77)|865))[2-8]\\d{5}|9(?:2(?:2(?:2[59]|44|52)|3(?:26|44)|473|9(?:[07]2|2[26]|34|46))|3327)[45]\\d{5}|9(?:2(?:284|3(?:02|23)|657|920)|3(?:4(?:8[27]|92)|541|878))[2-7]\\d{5}|9(?:2(?:(?:26|62)2|320|477|9(?:42|83))|3(?:329|4(?:[47]6|62|89)|564))[2-6]\\d{5}|(?:675\\d|9(?:11[1-8]\\d|2(?:2(?:0[45]|1[2-6]|3[3-6])|3(?:[06]4|7[45])|494|6(?:04|1[2-8]|[36][45]|4[3-6])|80[45]|9(?:[17][4-6]|[48][45]|9[3-6]))|3(?:364|4(?:1[2-7]|[235][4-6]|84)|5(?:1[2-9]|[38][4-6])|6(?:2[45]|44)|7[069][45]|8(?:0[45]|[17][2-6]|3[4-6]|[58][3-6]))))\\d{6}|92(?:2(?:21|4[23]|6[145]|7[1-4]|8[356]|9[267])|3(?:16|3[13-8]|43|5[346-8]|9[3-5])|475|6(?:2[46]|4[78]|5[1568])|9(?:03|2[1457-9]|3[1356]|4[08]|[56][23]|82))4\\d{5}|9(?:2(?:2(?:57|81)|3(?:24|46|92)|9(?:01|23|64))|3(?:4(?:42|71)|5(?:25|37|4[347]|71)|7(?:18|5[17])))[3-6]\\d{5}|9(?:2(?:2(?:02|2[3467]|4[156]|5[45]|6[6-8]|91)|3(?:1[47]|25|[45][25]|96)|47[48]|625|932)|3(?:38[2578]|4(?:0[0-24-9]|3[78]|4[457]|58|6[03-9]|72|83|9[136-8])|5(?:2[124]|[368][23]|4[2689]|7[2-6])|7(?:16|2[15]|3[145]|4[13]|5[468]|7[2-5]|8[26])|8(?:2[5-7]|3[278]|4[3-5]|5[78]|6[1-378]|[78]7|94)))[4-6]\\d{5}"],
                            ["800\\d{7,8}"],
                            ["60[04579]\\d{7}", [10]], 0, 0, ["810\\d{7}", [10]]
                        ]
                    ],
                    AS: ["1", "011", "(?:[58]\\d\\d|684|900)\\d{7}", [10], 0, "1", 0, "1|([267]\\d{6})$", "684$1", 0, "684", [
                        ["6846(?:22|33|44|55|77|88|9[19])\\d{4}"],
                        ["684(?:2(?:48|5[2468]|72)|7(?:3[13]|70|82))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    AT: ["43", "00", "1\\d{3,12}|2\\d{6,12}|43(?:(?:0\\d|5[02-9])\\d{3,9}|2\\d{4,5}|[3467]\\d{4}|8\\d{4,6}|9\\d{4,7})|5\\d{4,12}|8\\d{7,12}|9\\d{8,12}|(?:[367]\\d|4[0-24-9])\\d{4,11}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13],
                        [
                            ["(\\d)(\\d{3,12})", "$1 $2", ["1(?:11|[2-9])"], "0$1"],
                            ["(\\d{3})(\\d{2})", "$1 $2", ["517"], "0$1"],
                            ["(\\d{2})(\\d{3,5})", "$1 $2", ["5[079]"], "0$1"],
                            ["(\\d{3})(\\d{3,10})", "$1 $2", ["(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]"], "0$1"],
                            ["(\\d{4})(\\d{3,9})", "$1 $2", ["[2-467]|5[2-6]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["5"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4,7})", "$1 $2 $3", ["5"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1(?:11\\d|[2-9]\\d{3,11})|(?:316|463|(?:51|66|73)2)\\d{3,10}|(?:2(?:1[467]|2[13-8]|5[2357]|6[1-46-8]|7[1-8]|8[124-7]|9[1458])|3(?:1[1-578]|3[23568]|4[5-7]|5[1378]|6[1-38]|8[3-68])|4(?:2[1-8]|35|7[1368]|8[2457])|5(?:2[1-8]|3[357]|4[147]|5[12578]|6[37])|6(?:13|2[1-47]|4[135-8]|5[468])|7(?:2[1-8]|35|4[13478]|5[68]|6[16-8]|7[1-6]|9[45]))\\d{4,10}"],
                            ["6(?:5[0-3579]|6[013-9]|[7-9]\\d)\\d{4,10}", [7, 8, 9, 10, 11, 12, 13]],
                            ["800\\d{6,10}", [9, 10, 11, 12, 13]],
                            ["(?:8[69][2-68]|9(?:0[01]|3[019]))\\d{6,10}", [9, 10, 11, 12, 13]], 0, 0, 0, 0, ["5(?:0[1-9]|17|[79]\\d)\\d{2,10}|7[28]0\\d{6,10}", [5, 6, 7, 8, 9, 10, 11, 12, 13]],
                            ["8(?:10|2[018])\\d{6,10}|828\\d{5}", [8, 9, 10, 11, 12, 13]]
                        ]
                    ],
                    AU: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{7}(?:\\d(?:\\d{2})?)?|8[0-24-9]\\d{7})|[2-478]\\d{8}|1\\d{4,7}", [5, 6, 7, 8, 9, 10, 12],
                        [
                            ["(\\d{2})(\\d{3,4})", "$1 $2", ["16"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2,4})", "$1 $2 $3", ["16"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["14|4"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[2378]"], "(0$1)"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:30|[89])"]]
                        ], "0", 0, "0|(183[12])", 0, 0, 0, [
                            ["(?:(?:2(?:[0-26-9]\\d|3[0-8]|4[02-9]|5[0135-9])|3(?:[0-3589]\\d|4[0-578]|6[1-9]|7[0-35-9])|7(?:[013-57-9]\\d|2[0-8]))\\d{3}|8(?:51(?:0(?:0[03-9]|[12479]\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\d|7[89]|9[0-4]))|(?:6[0-8]|[78]\\d)\\d{3}|9(?:[02-9]\\d{3}|1(?:(?:[0-58]\\d|6[0135-9])\\d|7(?:0[0-24-9]|[1-9]\\d)|9(?:[0-46-9]\\d|5[0-79])))))\\d{3}", [9]],
                            ["4(?:83[0-38]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]],
                            ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                            ["190[0-26]\\d{6}", [10]], 0, 0, 0, ["163\\d{2,6}", [5, 6, 7, 8, 9]],
                            ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                            ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                        ], "0011"
                    ],
                    AW: ["297", "00", "(?:[25-79]\\d\\d|800)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[25-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["5(?:2\\d|8[1-9])\\d{4}"],
                            ["(?:290|5[69]\\d|6(?:[03]0|22|4[0-2]|[69]\\d)|7(?:[34]\\d|7[07])|9(?:6[45]|9[4-8]))\\d{4}"],
                            ["800\\d{4}"],
                            ["900\\d{4}"], 0, 0, 0, 0, ["(?:28\\d|501)\\d{4}"]
                        ]
                    ],
                    AX: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "2\\d{4,9}|35\\d{4,5}|(?:60\\d\\d|800)\\d{4,6}|7\\d{5,11}|(?:[14]\\d|3[0-46-9]|50)\\d{4,8}", [5, 6, 7, 8, 9, 10, 11, 12], 0, "0", 0, 0, 0, 0, "18", [
                        ["18[1-8]\\d{3,6}", [6, 7, 8, 9]],
                        ["4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", [6, 7, 8, 9, 10]],
                        ["800\\d{4,6}", [7, 8, 9]],
                        ["[67]00\\d{5,6}", [8, 9]], 0, 0, ["20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}"]
                    ], "00"],
                    AZ: ["994", "00", "365\\d{6}|(?:[124579]\\d|60|88)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["90"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[28]|2|365|46", "1[28]|2|365[45]|46", "1[28]|2|365(?:4|5[02])|46"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[13-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2[12]428|3655[02])\\d{4}|(?:2(?:22[0-79]|63[0-28])|3654)\\d{5}|(?:(?:1[28]|46)\\d|2(?:[014-6]2|[23]3))\\d{6}"],
                            ["36554\\d{4}|(?:[16]0|4[04]|5[015]|7[07]|99)\\d{7}"],
                            ["88\\d{7}"],
                            ["900200\\d{3}"]
                        ]
                    ],
                    BA: ["387", "00", "6\\d{8}|(?:[35689]\\d|49|70)\\d{6}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[1-3]|[7-9]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2-$3", ["[3-5]|6[56]"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["6"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:3(?:[05-79][2-9]|1[4579]|[23][24-9]|4[2-4689]|8[2457-9])|49[2-579]|5(?:0[2-49]|[13][2-9]|[268][2-4679]|4[4689]|5[2-79]|7[2-69]|9[2-4689]))\\d{5}", [8]],
                            ["6040\\d{5}|6(?:03|[1-356]|44|7\\d)\\d{6}"],
                            ["8[08]\\d{6}", [8]],
                            ["9[0246]\\d{6}", [8]], 0, 0, ["703[235]0\\d{3}|70(?:2[0-5]|3[0146]|[56]0)\\d{4}", [8]], 0, 0, ["8[12]\\d{6}", [8]]
                        ]
                    ],
                    BB: ["1", "011", "(?:246|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "246$1", 0, "246", [
                        ["246521[0369]\\d{3}|246(?:2(?:2[78]|7[0-4])|4(?:1[024-6]|2\\d|3[2-9])|5(?:20|[34]\\d|54|7[1-3])|6(?:2\\d|38)|7[35]7|9(?:1[89]|63))\\d{4}"],
                        ["246(?:(?:2(?:[3568]\\d|4[0-57-9])|3(?:5[2-9]|6[0-6])|4(?:46|5\\d)|69[5-7]|8(?:[2-5]\\d|83))\\d|52(?:1[147]|20))\\d{3}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["(?:246976|900[2-9]\\d\\d)\\d{4}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, ["246(?:292|367|4(?:1[7-9]|3[01]|4[47-9]|67)|7(?:1[2-9]|2\\d|3[016]|53))\\d{4}"], 0, ["24631\\d{5}"]
                    ]],
                    BD: ["880", "00", "[1-469]\\d{9}|8[0-79]\\d{7,8}|[2-79]\\d{8}|[2-9]\\d{7}|[3-9]\\d{6}|[57-9]\\d{5}", [6, 7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{4,6})", "$1-$2", ["31[5-8]|[459]1"], "0$1"],
                            ["(\\d{3})(\\d{3,7})", "$1-$2", ["3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:28|4[14]|5)|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]"], "0$1"],
                            ["(\\d{4})(\\d{3,6})", "$1-$2", ["[13-9]|22"], "0$1"],
                            ["(\\d)(\\d{7,8})", "$1-$2", ["2"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:4(?:31\\d\\d|423)|5222)\\d{3}(?:\\d{2})?|8332[6-9]\\d\\d|(?:3(?:03[56]|224)|4(?:22[25]|653))\\d{3,4}|(?:3(?:42[47]|529|823)|4(?:027|525|65(?:28|8))|562|6257|7(?:1(?:5[3-5]|6[12]|7[156]|89)|22[589]56|32|42675|52(?:[25689](?:56|8)|[347]8)|71(?:6[1267]|75|89)|92374)|82(?:2[59]|32)56|9(?:03[23]56|23(?:256|373)|31|5(?:1|2[4589]56)))\\d{3}|(?:3(?:02[348]|22[35]|324|422)|4(?:22[67]|32[236-9]|6(?:2[46]|5[57])|953)|5526|6(?:024|6655)|81)\\d{4,5}|(?:2(?:7(?:1[0-267]|2[0-289]|3[0-29]|4[01]|5[1-3]|6[013]|7[0178]|91)|8(?:0[125]|1[1-6]|2[0157-9]|3[1-69]|41|6[1-35]|7[1-5]|8[1-8]|9[0-6])|9(?:0[0-2]|1[0-4]|2[568]|3[3-6]|5[5-7]|6[0136-9]|7[0-7]|8[014-9]))|3(?:0(?:2[025-79]|3[2-4])|181|22[12]|32[2356]|824)|4(?:02[09]|22[348]|32[045]|523|6(?:27|54))|666(?:22|53)|7(?:22[57-9]|42[56]|82[35])8|8(?:0[124-9]|2(?:181|2[02-4679]8)|4[12]|[5-7]2)|9(?:[04]2|2(?:2|328)|81))\\d{4}|(?:2(?:222|[45]\\d)\\d|3(?:1(?:2[5-7]|[5-7])|425|822)|4(?:033|1\\d|[257]1|332|4(?:2[246]|5[25])|6(?:2[35]|56|62)|8(?:23|54)|92[2-5])|5(?:02[03489]|22[457]|32[35-79]|42[46]|6(?:[18]|53)|724|826)|6(?:023|2(?:2[2-5]|5[3-5]|8)|32[3478]|42[34]|52[47]|6(?:[18]|6(?:2[34]|5[24]))|[78]2[2-5]|92[2-6])|7(?:02|21\\d|[3-589]1|6[12]|72[24])|8(?:217|3[12]|[5-7]1)|9[24]1)\\d{5}|(?:(?:3[2-8]|5[2-57-9]|6[03-589])1|4[4689][18])\\d{5}|[59]1\\d{5}"],
                            ["(?:1[13-9]\\d|644)\\d{7}|(?:3[78]|44|66)[02-9]\\d{7}", [10]],
                            ["80[03]\\d{7}", [10]], 0, 0, 0, 0, 0, ["96(?:0[469]|1[0-47]|3[389]|6[69]|7[78])\\d{6}", [10]]
                        ]
                    ],
                    BE: ["32", "00", "4\\d{8}|[1-9]\\d{7}", [8, 9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:80|9)0"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[239]|4[23]"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[15-8]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["80[2-8]\\d{5}|(?:1[0-69]|[23][2-8]|4[23]|5\\d|6[013-57-9]|71|8[1-79]|9[2-4])\\d{6}", [8]],
                            ["4[5-9]\\d{7}", [9]],
                            ["800[1-9]\\d{4}", [8]],
                            ["(?:70(?:2[0-57]|3[04-7]|44|6[569]|7[0579])|90(?:0[0-8]|1[36]|2[0-3568]|3[0-689]|[47][2-68]|5[1-68]|6[0-378]|9[34679]))\\d{4}", [8]], 0, 0, ["78(?:0[57]|1[014-8]|2[25]|3[15-8]|48|[56]0|7[06-8]|9\\d)\\d{4}", [8]], 0, 0, ["7879\\d{4}", [8]]
                        ]
                    ],
                    BF: ["226", "00", "[025-7]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[025-7]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:0(?:49|5[23]|6[5-7]|9[016-9])|4(?:4[569]|5[4-6]|6[5-7]|7[0179])|5(?:[34]\\d|50|6[5-7]))\\d{4}"],
                            ["(?:0[1-35-7]|5[1-8]|[67]\\d)\\d{6}"]
                        ]
                    ],
                    BG: ["359", "00", "[2-7]\\d{6,7}|[89]\\d{6,8}|2\\d{5}", [6, 7, 8, 9],
                        [
                            ["(\\d)(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["2"], "0$1"],
                            ["(\\d{3})(\\d{4})", "$1 $2", ["43[1-6]|70[1-9]"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:70|8)0"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3", ["43[1-7]|7"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[48]|9[08]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["2\\d{5,7}|(?:43[1-6]|70[1-9])\\d{4,5}|(?:[36]\\d|4[124-7]|[57][1-9]|8[1-6]|9[1-7])\\d{5,6}", [6, 7, 8]],
                            ["(?:43[07-9]|99[69]\\d)\\d{5}|(?:8[7-9]|98)\\d{7}", [8, 9]],
                            ["800\\d{5}", [8]],
                            ["90\\d{6}", [8]], 0, 0, 0, 0, 0, ["700\\d{5}", [8]]
                        ]
                    ],
                    BH: ["973", "00", "[136-9]\\d{7}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[13679]|8[047]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:1(?:3[1356]|6[0156]|7\\d)\\d|6(?:1[16]\\d|500|6(?:0\\d|3[12]|44|7[7-9]|88)|9[69][69])|7(?:1(?:11|78)|7\\d\\d))\\d{4}"],
                            ["(?:3(?:[1-79]\\d|8[0-47-9])\\d|6(?:3(?:00|33|6[16])|6(?:3[03-9]|[69]\\d|7[0-6])))\\d{4}"],
                            ["80\\d{6}"],
                            ["(?:87|9[014578])\\d{6}"], 0, 0, 0, 0, 0, ["84\\d{6}"]
                        ]
                    ],
                    BI: ["257", "00", "(?:[267]\\d|31)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2367]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:22|31)\\d{6}"],
                            ["(?:29|6[1257-9]|7[125-9])\\d{6}"]
                        ]
                    ],
                    BJ: ["229", "00", "(?:[25689]\\d|40)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-689]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:02|1[037]|2[45]|3[68]|4\\d)\\d{5}"],
                            ["(?:40|5[1-9]|6\\d|9[013-9])\\d{6}"], 0, 0, 0, 0, ["81\\d{6}"], 0, ["857[58]\\d{4}"]
                        ]
                    ],
                    BL: ["590", "00", "(?:590|(?:69|80)\\d|976)\\d{6}", [9], 0, "0", 0, 0, 0, 0, 0, [
                        ["590(?:2[7-9]|5[12]|87)\\d{4}"],
                        ["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],
                        ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["976[01]\\d{5}"]
                    ]],
                    BM: ["1", "011", "(?:441|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-8]\\d{6})$", "441$1", 0, "441", [
                        ["441(?:[46]\\d\\d|5(?:4\\d|60|89))\\d{4}"],
                        ["441(?:[2378]\\d|5[0-39])\\d{5}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    BN: ["673", "00", "[2-578]\\d{6}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-578]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["22[0-7]\\d{4}|(?:2[013-9]|[34]\\d|5[0-25-9])\\d{5}"],
                            ["(?:22[89]|[78]\\d\\d)\\d{4}"], 0, 0, 0, 0, 0, 0, ["5[34]\\d{5}"]
                        ]
                    ],
                    BO: ["591", "00(?:1\\d)?", "(?:[2-467]\\d\\d|8001)\\d{5}", [8, 9],
                        [
                            ["(\\d)(\\d{7})", "$1 $2", ["[23]|4[46]"]],
                            ["(\\d{8})", "$1", ["[67]"]],
                            ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["8"]]
                        ], "0", 0, "0(1\\d)?", 0, 0, 0, [
                            ["(?:2(?:2\\d\\d|5(?:11|[258]\\d|9[67])|6(?:12|2\\d|9[34])|8(?:2[34]|39|62))|3(?:3\\d\\d|4(?:6\\d|8[24])|8(?:25|42|5[257]|86|9[25])|9(?:[27]\\d|3[2-4]|4[248]|5[24]|6[2-6]))|4(?:4\\d\\d|6(?:11|[24689]\\d|72)))\\d{4}", [8]],
                            ["[67]\\d{7}", [8]],
                            ["8001[07]\\d{4}", [9]]
                        ]
                    ],
                    BQ: ["599", "00", "(?:[34]1|7\\d)\\d{5}", [7], 0, 0, 0, 0, 0, 0, "[347]", [
                        ["(?:318[023]|41(?:6[023]|70)|7(?:1[578]|2[05]|50)\\d)\\d{3}"],
                        ["(?:31(?:8[14-8]|9[14578])|416[14-9]|7(?:0[01]|7[07]|8\\d|9[056])\\d)\\d{3}"]
                    ]],
                    BR: ["55", "00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)", "(?:[1-46-9]\\d\\d|5(?:[0-46-9]\\d|5[0-46-9]))\\d{8}|[1-9]\\d{9}|[3589]\\d{8}|[34]\\d{7}", [8, 9, 10, 11],
                        [
                            ["(\\d{4})(\\d{4})", "$1-$2", ["300|4(?:0[02]|37)", "4(?:02|37)0|[34]00"]],
                            ["(\\d{3})(\\d{2,3})(\\d{4})", "$1 $2 $3", ["(?:[358]|90)0"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2-$3", ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]"], "($1)"],
                            ["(\\d{2})(\\d{5})(\\d{4})", "$1 $2-$3", ["[16][1-9]|[2-57-9]"], "($1)"]
                        ], "0", 0, "(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\d{10,11}))?", "$2", 0, 0, [
                            ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-5]\\d{7}", [10]],
                            ["(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])(?:7|9\\d)\\d{7}", [10, 11]],
                            ["800\\d{6,7}", [9, 10]],
                            ["300\\d{6}|[59]00\\d{6,7}", [9, 10]], 0, 0, 0, 0, 0, ["(?:30[03]\\d{3}|4(?:0(?:0\\d|20)|370))\\d{4}|300\\d{5}", [8, 10]]
                        ]
                    ],
                    BS: ["1", "011", "(?:242|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([3-8]\\d{6})$", "242$1", 0, "242", [
                        ["242(?:3(?:02|[236][1-9]|4[0-24-9]|5[0-68]|7[347]|8[0-4]|9[2-467])|461|502|6(?:0[1-4]|12|2[013]|[45]0|7[67]|8[78]|9[89])|7(?:02|88))\\d{4}"],
                        ["242(?:3(?:5[79]|7[56]|95)|4(?:[23][1-9]|4[1-35-9]|5[1-8]|6[2-8]|7\\d|81)|5(?:2[45]|3[35]|44|5[1-46-9]|65|77)|6[34]6|7(?:27|38)|8(?:0[1-9]|1[02-9]|2\\d|[89]9))\\d{4}"],
                        ["242300\\d{4}|8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, ["242225\\d{4}"]
                    ]],
                    BT: ["975", "00", "[17]\\d{7}|[2-8]\\d{6}", [7, 8],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-68]|7[246]"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[67]|7"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2[3-6]|[34][5-7]|5[236]|6[2-46]|7[246]|8[2-4])\\d{5}", [7]],
                            ["(?:1[67]|77)\\d{6}", [8]]
                        ]
                    ],
                    BW: ["267", "00", "(?:0800|(?:[37]|800)\\d)\\d{6}|(?:[2-6]\\d|90)\\d{5}", [7, 8, 10],
                        [
                            ["(\\d{2})(\\d{5})", "$1 $2", ["90"]],
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[24-6]|3[15-79]"]],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37]"]],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["0"]],
                            ["(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:4[0-48]|6[0-24]|9[0578])|3(?:1[0-35-9]|55|[69]\\d|7[013])|4(?:6[03]|7[1267]|9[0-5])|5(?:3[03489]|4[0489]|7[1-47]|88|9[0-49])|6(?:2[1-35]|5[149]|8[067]))\\d{4}", [7]],
                            ["(?:321|7(?:[1-7]\\d|8[01]))\\d{5}", [8]],
                            ["(?:0800|800\\d)\\d{6}", [10]],
                            ["90\\d{5}", [7]], 0, 0, 0, 0, ["79(?:1(?:[01]\\d|2[0-7])|2[0-7]\\d)\\d{3}", [8]]
                        ]
                    ],
                    BY: ["375", "810", "(?:[12]\\d|33|44|902)\\d{7}|8(?:0[0-79]\\d{5,7}|[1-7]\\d{9})|8(?:1[0-489]|[5-79]\\d)\\d{7}|8[1-79]\\d{6,7}|8[0-79]\\d{5}|8\\d{5}", [6, 7, 8, 9, 10, 11],
                        [
                            ["(\\d{3})(\\d{3})", "$1 $2", ["800"], "8 $1"],
                            ["(\\d{3})(\\d{2})(\\d{2,4})", "$1 $2 $3", ["800"], "8 $1"],
                            ["(\\d{4})(\\d{2})(\\d{3})", "$1 $2-$3", ["1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])", "1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])"], "8 0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["1(?:[56]|7[467])|2[1-3]"], "8 0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-4]"], "8 0$1"],
                            ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[89]"], "8 $1"]
                        ], "8", 0, "0|80?", 0, 0, 0, [
                            ["(?:1(?:5(?:1[1-5]|[24]\\d|6[2-4]|9[1-7])|6(?:[235]\\d|4[1-7])|7\\d\\d)|2(?:1(?:[246]\\d|3[0-35-9]|5[1-9])|2(?:[235]\\d|4[0-8])|3(?:[26]\\d|3[02-79]|4[024-7]|5[03-7])))\\d{5}", [9]],
                            ["(?:2(?:5[5-79]|9[1-9])|(?:33|44)\\d)\\d{6}", [9]],
                            ["800\\d{3,7}|8(?:0[13]|20\\d)\\d{7}"],
                            ["(?:810|902)\\d{7}", [10]], 0, 0, 0, 0, ["249\\d{6}", [9]]
                        ], "8~10"
                    ],
                    BZ: ["501", "00", "(?:0800\\d|[2-8])\\d{6}", [7, 11],
                        [
                            ["(\\d{3})(\\d{4})", "$1-$2", ["[2-8]"]],
                            ["(\\d)(\\d{3})(\\d{4})(\\d{3})", "$1-$2-$3-$4", ["0"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:[02]\\d|36|[68]0)|[3-58](?:[02]\\d|[68]0)|7(?:[02]\\d|32|[68]0))\\d{4}", [7]],
                            ["6[0-35-7]\\d{5}", [7]],
                            ["0800\\d{7}", [11]]
                        ]
                    ],
                    CA: ["1", "011", "(?:[2-8]\\d|90)\\d{8}|3\\d{6}", [7, 10], 0, "1", 0, 0, 0, 0, 0, [
                        ["(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|6[578])|4(?:03|1[68]|3[178]|50|68|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|13|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|73)|90[25])[2-9]\\d{6}", [10]],
                        ["", [10]],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}", [10]],
                        ["900[2-9]\\d{6}", [10]],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|(?:5(?:00|2[125-7]|33|44|66|77|88)|622)[2-9]\\d{6}", [10]], 0, ["310\\d{4}", [7]], 0, ["600[2-9]\\d{6}", [10]]
                    ]],
                    CC: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10, 12], 0, "0", 0, "0|([59]\\d{7})$", "8$1", 0, 0, [
                        ["8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\d|70[23]|959))\\d{3}", [9]],
                        ["4(?:83[0-38]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]],
                        ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                        ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                        ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                    ], "0011"],
                    CD: ["243", "00", "[189]\\d{8}|[1-68]\\d{6}", [7, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                            ["(\\d{2})(\\d{5})", "$1 $2", ["[1-6]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["12\\d{7}|[1-6]\\d{6}"],
                            ["88\\d{5}|(?:8[0-59]|9[017-9])\\d{7}"]
                        ]
                    ],
                    CF: ["236", "00", "(?:[27]\\d{3}|8776)\\d{4}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[278]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2[12]\\d{6}"],
                            ["7[02457]\\d{6}"], 0, ["8776\\d{4}"]
                        ]
                    ],
                    CG: ["242", "00", "222\\d{6}|(?:0\\d|80)\\d{7}", [9],
                        [
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["8"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[02]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["222[1-589]\\d{5}"],
                            ["026(?:1[0-5]|6[6-9])\\d{4}|0(?:[14-6]\\d\\d|2(?:40|5[5-8]|6[07-9]))\\d{5}"], 0, ["80(?:0\\d\\d|120)\\d{4}"]
                        ]
                    ],
                    CH: ["41", "00", "8\\d{11}|[2-9]\\d{8}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8[047]|90"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-79]|81"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2[12467]|3[1-4]|4[134]|5[256]|6[12]|[7-9]1)\\d{7}"],
                            ["7[35-9]\\d{7}"],
                            ["800\\d{6}"],
                            ["90[016]\\d{6}"],
                            ["878\\d{6}"], 0, ["5[18]\\d{7}"],
                            ["74[0248]\\d{6}"], 0, ["84[0248]\\d{6}"]
                        ]
                    ],
                    CI: ["225", "00", "[02]\\d{9}", [10],
                        [
                            ["(\\d{2})(\\d{2})(\\d)(\\d{5})", "$1 $2 $3 $4", ["2"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3 $4", ["0"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:[15]\\d{3}|7(?:2(?:0[23]|1[2357]|2[245]|3[45]|4[3-5])|3(?:06|1[69]|[2-6]7)))\\d{5}"],
                            ["0704[0-7]\\d{5}|0(?:[15]\\d\\d|7(?:0[0-37-9]|[4-9][7-9]))\\d{6}"]
                        ]
                    ],
                    CK: ["682", "00", "[2-578]\\d{4}", [5],
                        [
                            ["(\\d{2})(\\d{3})", "$1 $2", ["[2-578]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2\\d|3[13-7]|4[1-5])\\d{3}"],
                            ["[578]\\d{4}"]
                        ]
                    ],
                    CL: ["56", "(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0", "12300\\d{6}|6\\d{9,10}|[2-9]\\d{8}", [9, 10, 11],
                        [
                            ["(\\d{5})(\\d{4})", "$1 $2", ["219", "2196"], "($1)"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["44"]],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2[1-36]"], "($1)"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["9[2-9]"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])"], "($1)"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["60|8"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
                            ["(\\d{3})(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["60"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:1982[0-6]|3314[05-9])\\d{3}|(?:2(?:1(?:160|962)|3(?:2\\d\\d|3(?:[0346]\\d|1[0-35-9]|2[1-9]|5[0-24-9]|7[0-3])|600)|646[59])|80[1-9]\\d\\d|9(?:3(?:[0-57-9]\\d\\d|6(?:0[02-9]|[1-9]\\d))|6(?:[0-8]\\d\\d|9(?:[02-79]\\d|1[05-9]))|7[1-9]\\d\\d|9(?:[03-9]\\d\\d|1(?:[0235-9]\\d|4[0-24-9])|2(?:[0-79]\\d|8[0-46-9]))))\\d{4}|(?:22|3[2-5]|[47][1-35]|5[1-3578]|6[13-57]|8[1-9]|9[2458])\\d{7}", [9]],
                            ["", [9]],
                            ["(?:123|8)00\\d{6}", [9, 11]], 0, 0, 0, 0, 0, ["44\\d{7}", [9]],
                            ["600\\d{7,8}", [10, 11]]
                        ]
                    ],
                    CM: ["237", "00", "[26]\\d{8}|88\\d{6,7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["88"]],
                            ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[26]|88"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:22|33)\\d{6}", [9]],
                            ["(?:24[23]|6[25-9]\\d)\\d{6}", [9]],
                            ["88\\d{6,7}"]
                        ]
                    ],
                    CN: ["86", "00|1(?:[12]\\d|79)\\d\\d00", "1[127]\\d{8,9}|2\\d{9}(?:\\d{2})?|[12]\\d{6,7}|86\\d{6}|(?:1[03-689]\\d|6)\\d{7,9}|(?:[3-579]\\d|8[0-57-9])\\d{6,9}", [7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d{2})(\\d{5,6})", "$1 $2", ["(?:10|2[0-57-9])[19]", "(?:10|2[0-57-9])(?:10|9[56])", "(?:10|2[0-57-9])(?:100|9[56])"], "0$1"],
                            ["(\\d{3})(\\d{5,6})", "$1 $2", ["3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]", "(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))[19]", "85[23](?:10|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:10|9[56])", "85[23](?:100|95)|(?:3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:100|9[56])"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["(?:4|80)0"]],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["10|2(?:[02-57-9]|1[1-9])", "10|2(?:[02-57-9]|1[1-9])", "10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]"], "0$1", 1],
                            ["(\\d{3})(\\d{7,8})", "$1 $2", ["9"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["80"], "0$1", 1],
                            ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[3-578]"], "0$1", 1],
                            ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["1[3-9]"]],
                            ["(\\d{2})(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["[12]"], "0$1", 1]
                        ], "0", 0, "0|(1(?:[12]\\d|79)\\d\\d)", 0, 0, 0, [
                            ["(?:10(?:[02-79]\\d\\d|[18](?:0[1-9]|[1-9]\\d))|21(?:[18](?:0[1-9]|[1-9]\\d)|[2-79]\\d\\d))\\d{5}|(?:43[35]|754)\\d{7,8}|8(?:078\\d{7}|51\\d{7,8})|(?:10|(?:2|85)1|43[35]|754)(?:100\\d\\d|95\\d{3,4})|(?:2[02-57-9]|3(?:11|7[179])|4(?:[15]1|3[12])|5(?:1\\d|2[37]|3[12]|51|7[13-79]|9[15])|7(?:[39]1|5[57]|6[09])|8(?:71|98))(?:[02-8]\\d{7}|1(?:0(?:0\\d\\d(?:\\d{3})?|[1-9]\\d{5})|[1-9]\\d{6})|9(?:[0-46-9]\\d{6}|5\\d{3}(?:\\d(?:\\d{2})?)?))|(?:3(?:1[02-9]|35|49|5\\d|7[02-68]|9[1-68])|4(?:1[02-9]|2[179]|3[46-9]|5[2-9]|6[47-9]|7\\d|8[23])|5(?:3[03-9]|4[36]|5[02-9]|6[1-46]|7[028]|80|9[2-46-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[17]\\d|2[248]|3[04-9]|4[3-6]|5[0-3689]|6[2368]|9[02-9])|8(?:1[236-8]|2[5-7]|3\\d|5[2-9]|7[02-9]|8[36-8]|9[1-7])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))(?:[02-8]\\d{6}|1(?:0(?:0\\d\\d(?:\\d{2})?|[1-9]\\d{4})|[1-9]\\d{5})|9(?:[0-46-9]\\d{5}|5\\d{3,5}))", [7, 8, 9, 10, 11]],
                            ["1740[0-5]\\d{6}|1(?:[38]\\d|4[57]|[59][0-35-9]|6[25-7]|7[0-35-8])\\d{8}", [11]],
                            ["(?:(?:10|21)8|8)00\\d{7}", [10, 12]],
                            ["16[08]\\d{5}", [8]], 0, 0, 0, 0, 0, ["400\\d{7}|950\\d{7,8}|(?:10|2[0-57-9]|3(?:[157]\\d|35|49|9[1-68])|4(?:[17]\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\d|4[13]|5[1-5]))96\\d{3,4}", [7, 8, 9, 10, 11]]
                        ], "00"
                    ],
                    CO: ["57", "00(?:4(?:[14]4|56)|[579])", "(?:60\\d\\d|9101)\\d{6}|(?:1\\d|3)\\d{9}", [10, 11],
                        [
                            ["(\\d{3})(\\d{7})", "$1 $2", ["6"], "($1)"],
                            ["(\\d{3})(\\d{7})", "$1 $2", ["3[0-357]|91"]],
                            ["(\\d)(\\d{3})(\\d{7})", "$1-$2-$3", ["1"], "0$1", 0, "$1 $2 $3"]
                        ], "0", 0, "0(4(?:[14]4|56)|[579])?", 0, 0, 0, [
                            ["601055(?:[0-4]\\d|50)\\d\\d|6010(?:[0-4]\\d|5[0-4])\\d{4}|60[124-8][2-9]\\d{6}", [10]],
                            ["3333(?:0(?:0\\d|1[0-5])|[4-9]\\d\\d)\\d{3}|(?:3(?:24[1-9]|3(?:00|3[0-24-9]))|9101)\\d{6}|3(?:0[0-5]|1\\d|2[0-3]|5[01]|70)\\d{7}", [10]],
                            ["1800\\d{7}", [11]],
                            ["19(?:0[01]|4[78])\\d{7}", [11]]
                        ]
                    ],
                    CR: ["506", "00", "(?:8\\d|90)\\d{8}|(?:[24-8]\\d{3}|3005)\\d{4}", [8, 10],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[3-9]"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["[89]"]]
                        ], 0, 0, "(19(?:0[0-2468]|1[09]|20|66|77|99))", 0, 0, 0, [
                            ["210[7-9]\\d{4}|2(?:[024-7]\\d|1[1-9])\\d{5}", [8]],
                            ["(?:3005\\d|6500[01])\\d{3}|(?:5[07]|6[0-4]|7[0-3]|8[3-9])\\d{6}", [8]],
                            ["800\\d{7}", [10]],
                            ["90[059]\\d{7}", [10]], 0, 0, 0, 0, ["(?:210[0-6]|4\\d{3}|5100)\\d{4}", [8]]
                        ]
                    ],
                    CU: ["53", "119", "[27]\\d{6,7}|[34]\\d{5,7}|(?:5|8\\d\\d)\\d{7}", [6, 7, 8, 10],
                        [
                            ["(\\d{2})(\\d{4,6})", "$1 $2", ["2[1-4]|[34]"], "(0$1)"],
                            ["(\\d)(\\d{6,7})", "$1 $2", ["7"], "(0$1)"],
                            ["(\\d)(\\d{7})", "$1 $2", ["5"], "0$1"],
                            ["(\\d{3})(\\d{7})", "$1 $2", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:3[23]|48)\\d{4,6}|(?:31|4[36]|8(?:0[25]|78)\\d)\\d{6}|(?:2[1-4]|4[1257]|7\\d)\\d{5,6}"],
                            ["5\\d{7}", [8]],
                            ["800\\d{7}", [10]], 0, 0, 0, 0, 0, 0, ["807\\d{7}", [10]]
                        ]
                    ],
                    CV: ["238", "0", "(?:[2-59]\\d\\d|800)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2-589]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:2[1-7]|3[0-8]|4[12]|5[1256]|6\\d|7[1-3]|8[1-5])\\d{4}"],
                            ["(?:36|5[1-389]|9\\d)\\d{5}"],
                            ["800\\d{4}"], 0, 0, 0, 0, 0, ["(?:3[3-5]|4[356])\\d{5}"]
                        ]
                    ],
                    CW: ["599", "00", "(?:[34]1|60|(?:7|9\\d)\\d)\\d{5}", [7, 8],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[3467]"]],
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["9[4-8]"]]
                        ], 0, 0, 0, 0, 0, "[69]", [
                            ["9(?:4(?:3[0-5]|4[14]|6\\d)|50\\d|7(?:2[014]|3[02-9]|4[4-9]|6[357]|77|8[7-9])|8(?:3[39]|[46]\\d|7[01]|8[57-9]))\\d{4}"],
                            ["953[01]\\d{4}|9(?:5[12467]|6[5-9])\\d{5}"], 0, 0, 0, 0, 0, ["955\\d{5}", [8]], 0, ["60[0-2]\\d{4}", [7]]
                        ]
                    ],
                    CX: ["61", "001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011", "1(?:[0-79]\\d{8}(?:\\d{2})?|8[0-24-9]\\d{7})|[148]\\d{8}|1\\d{5,7}", [6, 7, 8, 9, 10, 12], 0, "0", 0, "0|([59]\\d{7})$", "8$1", 0, 0, [
                        ["8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\d|7(?:0[01]|1[0-2])|958))\\d{3}", [9]],
                        ["4(?:83[0-38]|93[0-6])\\d{5}|4(?:[0-3]\\d|4[047-9]|5[0-25-9]|6[016-9]|7[02-9]|8[0-24-9]|9[0-27-9])\\d{6}", [9]],
                        ["180(?:0\\d{3}|2)\\d{3}", [7, 10]],
                        ["190[0-26]\\d{6}", [10]], 0, 0, 0, 0, ["14(?:5(?:1[0458]|[23][458])|71\\d)\\d{4}", [9]],
                        ["13(?:00\\d{6}(?:\\d{2})?|45[0-4]\\d{3})|13\\d{4}", [6, 8, 10, 12]]
                    ], "0011"],
                    CY: ["357", "00", "(?:[279]\\d|[58]0)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{6})", "$1 $2", ["[257-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2[2-6]\\d{6}"],
                            ["9[4-79]\\d{6}"],
                            ["800\\d{5}"],
                            ["90[09]\\d{5}"],
                            ["700\\d{5}"], 0, ["(?:50|77)\\d{6}"], 0, 0, ["80[1-9]\\d{5}"]
                        ]
                    ],
                    CZ: ["420", "00", "(?:[2-578]\\d|60)\\d{7}|9\\d{8,11}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]|9[015-7]"]],
                            ["(\\d{2})(\\d{3})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["96"]],
                            ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]],
                            ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2\\d|3[1257-9]|4[16-9]|5[13-9])\\d{7}"],
                            ["(?:60[1-8]|7(?:0[2-5]|[2379]\\d))\\d{6}"],
                            ["800\\d{6}"],
                            ["9(?:0[05689]|76)\\d{6}"],
                            ["70[01]\\d{6}"], 0, ["9(?:5\\d|7[2-4])\\d{6}"], 0, ["9[17]0\\d{6}"],
                            ["8[134]\\d{7}"]
                        ]
                    ],
                    DE: ["49", "00", "[2579]\\d{5,14}|49(?:[34]0|69|8\\d)\\d\\d?|49(?:37|49|60|7[089]|9\\d)\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\d{1,8}|(?:1|[368]\\d|4[0-8])\\d{3,13}|49(?:[015]\\d|2[13]|31|[46][1-8])\\d{1,9}", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],
                        [
                            ["(\\d{2})(\\d{3,13})", "$1 $2", ["3[02]|40|[68]9"], "0$1"],
                            ["(\\d{3})(\\d{3,12})", "$1 $2", ["2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1", "2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1"], "0$1"],
                            ["(\\d{4})(\\d{2,11})", "$1 $2", ["[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]", "[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]"], "0$1"],
                            ["(\\d{3})(\\d{4})", "$1 $2", ["138"], "0$1"],
                            ["(\\d{5})(\\d{2,10})", "$1 $2", ["3"], "0$1"],
                            ["(\\d{3})(\\d{5,11})", "$1 $2", ["181"], "0$1"],
                            ["(\\d{3})(\\d)(\\d{4,10})", "$1 $2 $3", ["1(?:3|80)|9"], "0$1"],
                            ["(\\d{3})(\\d{7,8})", "$1 $2", ["1[67]"], "0$1"],
                            ["(\\d{3})(\\d{7,12})", "$1 $2", ["8"], "0$1"],
                            ["(\\d{5})(\\d{6})", "$1 $2", ["185", "1850", "18500"], "0$1"],
                            ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                            ["(\\d{4})(\\d{7})", "$1 $2", ["18[68]"], "0$1"],
                            ["(\\d{5})(\\d{6})", "$1 $2", ["15[0568]"], "0$1"],
                            ["(\\d{4})(\\d{7})", "$1 $2", ["15[1279]"], "0$1"],
                            ["(\\d{3})(\\d{8})", "$1 $2", ["18"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{7,8})", "$1 $2 $3", ["1(?:6[023]|7)"], "0$1"],
                            ["(\\d{4})(\\d{2})(\\d{7})", "$1 $2 $3", ["15[279]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{8})", "$1 $2 $3", ["15"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["32\\d{9,11}|49[1-6]\\d{10}|322\\d{6}|49[0-7]\\d{3,9}|(?:[34]0|[68]9)\\d{3,13}|(?:2(?:0[1-689]|[1-3569]\\d|4[0-8]|7[1-7]|8[0-7])|3(?:[3569]\\d|4[0-79]|7[1-7]|8[1-8])|4(?:1[02-9]|[2-48]\\d|5[0-6]|6[0-8]|7[0-79])|5(?:0[2-8]|[124-6]\\d|[38][0-8]|[79][0-7])|6(?:0[02-9]|[1-358]\\d|[47][0-8]|6[1-9])|7(?:0[2-8]|1[1-9]|[27][0-7]|3\\d|[4-6][0-8]|8[0-5]|9[013-7])|8(?:0[2-9]|1[0-79]|2\\d|3[0-46-9]|4[0-6]|5[013-9]|6[1-8]|7[0-8]|8[0-24-6])|9(?:0[6-9]|[1-4]\\d|[589][0-7]|6[0-8]|7[0-467]))\\d{3,12}", [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]],
                            ["15[0-25-9]\\d{8}|1(?:6[023]|7\\d)\\d{7,8}", [10, 11]],
                            ["800\\d{7,12}", [10, 11, 12, 13, 14, 15]],
                            ["(?:137[7-9]|900(?:[135]|9\\d))\\d{6}", [10, 11]],
                            ["700\\d{8}", [11]], 0, ["18(?:1\\d{5,11}|[2-9]\\d{8})", [8, 9, 10, 11, 12, 13, 14]],
                            ["16(?:4\\d{1,10}|[89]\\d{1,11})", [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]], 0, ["180\\d{5,11}|13(?:7[1-6]\\d\\d|8)\\d{4}", [7, 8, 9, 10, 11, 12, 13, 14]]
                        ]
                    ],
                    DJ: ["253", "00", "(?:2\\d|77)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[27]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:1[2-5]|7[45])\\d{5}"],
                            ["77\\d{6}"]
                        ]
                    ],
                    DK: ["45", "00", "[2-9]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:[2-7]\\d|8[126-9]|9[1-46-9])\\d{6}"],
                            [""],
                            ["80\\d{6}"],
                            ["90\\d{6}"]
                        ]
                    ],
                    DM: ["1", "011", "(?:[58]\\d\\d|767|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "767$1", 0, "767", [
                        ["767(?:2(?:55|66)|4(?:2[01]|4[0-25-9])|50[0-4])\\d{4}"],
                        ["767(?:2(?:[2-4689]5|7[5-7])|31[5-7]|61[1-8]|70[1-6])\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    DO: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "8001|8[024]9", [
                        ["8(?:[04]9[2-9]\\d\\d|29(?:2(?:[0-59]\\d|6[04-9]|7[0-27]|8[0237-9])|3(?:[0-35-9]\\d|4[7-9])|[45]\\d\\d|6(?:[0-27-9]\\d|[3-5][1-9]|6[0135-8])|7(?:0[013-9]|[1-37]\\d|4[1-35689]|5[1-4689]|6[1-57-9]|8[1-79]|9[1-8])|8(?:0[146-9]|1[0-48]|[248]\\d|3[1-79]|5[01589]|6[013-68]|7[124-8]|9[0-8])|9(?:[0-24]\\d|3[02-46-9]|5[0-79]|60|7[0169]|8[57-9]|9[02-9])))\\d{4}"],
                        ["8[024]9[2-9]\\d{6}"],
                        ["8(?:00(?:14|[2-9]\\d)|(?:33|44|55|66|77|88)[2-9]\\d)\\d{5}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    DZ: ["213", "00", "(?:[1-4]|[5-79]\\d|80)\\d{7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-4]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["9"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-8]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["9619\\d{5}|(?:1\\d|2[013-79]|3[0-8]|4[013-689])\\d{6}"],
                            ["(?:5(?:4[0-29]|5\\d|6[0-2])|6(?:[569]\\d|7[0-6])|7[7-9]\\d)\\d{6}", [9]],
                            ["800\\d{6}", [9]],
                            ["80[3-689]1\\d{5}", [9]], 0, 0, 0, 0, ["98[23]\\d{6}", [9]],
                            ["80[12]1\\d{5}", [9]]
                        ]
                    ],
                    EC: ["593", "00", "1\\d{9,10}|(?:[2-7]|9\\d)\\d{7}", [8, 9, 10, 11],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2-$3", ["[2-7]"], "(0$1)", 0, "$1-$2-$3"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["[2-7][2-7]\\d{6}", [8]],
                            ["964[0-2]\\d{5}|9(?:39|[57][89]|6[0-36-9]|[89]\\d)\\d{6}", [9]],
                            ["1800\\d{7}|1[78]00\\d{6}", [10, 11]], 0, 0, 0, 0, 0, ["[2-7]890\\d{4}", [8]]
                        ]
                    ],
                    EE: ["372", "00", "8\\d{9}|[4578]\\d{7}|(?:[3-8]\\d|90)\\d{5}", [7, 8, 10],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88", "[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88"]],
                            ["(\\d{4})(\\d{3,4})", "$1 $2", ["[45]|8(?:00|[1-49])", "[45]|8(?:00[1-9]|[1-49])"]],
                            ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["7"]],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:3[23589]|4[3-8]|6\\d|7[1-9]|88)\\d{5}", [7]],
                            ["(?:5\\d{5}|8(?:1(?:0(?:000|[3-9]\\d\\d)|(?:1(?:0[236]|1\\d)|(?:23|[3-79]\\d)\\d)\\d)|2(?:0(?:000|(?:19|[2-7]\\d)\\d)|(?:(?:[124-6]\\d|3[5-9])\\d|7(?:[3679]\\d|8[13-9])|8(?:[2-6]\\d|7[01]))\\d)|[349]\\d{4}))\\d\\d|5(?:(?:[02]\\d|5[0-478])\\d|1(?:[0-8]\\d|95)|6(?:4[0-4]|5[1-589]))\\d{3}", [7, 8]],
                            ["800(?:(?:0\\d\\d|1)\\d|[2-9])\\d{3}"],
                            ["(?:40\\d\\d|900)\\d{4}", [7, 8]],
                            ["70[0-2]\\d{5}", [8]]
                        ]
                    ],
                    EG: ["20", "00", "[189]\\d{8,9}|[24-6]\\d{8}|[135]\\d{7}", [8, 9, 10],
                        [
                            ["(\\d)(\\d{7,8})", "$1 $2", ["[23]"], "0$1"],
                            ["(\\d{2})(\\d{6,7})", "$1 $2", ["1[35]|[4-6]|8[2468]|9[235-7]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[189]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["13[23]\\d{6}|(?:15|57)\\d{6,7}|(?:2[2-4]|3|4[05-8]|5[05]|6[24-689]|8[2468]|9[235-7])\\d{7}", [8, 9]],
                            ["1[0-25]\\d{8}", [10]],
                            ["800\\d{7}", [10]],
                            ["900\\d{7}", [10]]
                        ]
                    ],
                    EH: ["212", "00", "[5-8]\\d{8}", [9], 0, "0", 0, 0, 0, 0, "528[89]", [
                        ["528[89]\\d{5}"],
                        ["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}"],
                        ["80\\d{7}"],
                        ["89\\d{7}"], 0, 0, 0, 0, ["592(?:4[0-2]|93)\\d{4}"]
                    ]],
                    ER: ["291", "00", "[178]\\d{6}", [7],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[178]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:1[12568]|[24]0|55|6[146])|8\\d\\d)\\d{4}"],
                            ["(?:17[1-3]|7\\d\\d)\\d{4}"]
                        ]
                    ],
                    ES: ["34", "00", "[5-9]\\d{8}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[89]00"]],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["96906(?:0[0-8]|1[1-9]|[2-9]\\d)\\d\\d|9(?:69(?:0[0-57-9]|[1-9]\\d)|73(?:[0-8]\\d|9[1-9]))\\d{4}|(?:8(?:[1356]\\d|[28][0-8]|[47][1-9])|9(?:[135]\\d|[268][0-8]|4[1-9]|7[124-9]))\\d{6}"],
                            ["(?:590[16]00\\d|9(?:6906(?:09|10)|7390\\d\\d))\\d\\d|(?:6\\d|7[1-48])\\d{7}"],
                            ["[89]00\\d{6}"],
                            ["80[367]\\d{6}"],
                            ["70\\d{7}"], 0, ["51\\d{7}"], 0, 0, ["90[12]\\d{6}"]
                        ]
                    ],
                    ET: ["251", "00", "(?:11|[2-579]\\d)\\d{7}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-579]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["11667[01]\\d{3}|(?:11(?:1(?:1[124]|2[2-7]|3[1-5]|5[5-8]|8[6-8])|2(?:13|3[6-8]|5[89]|7[05-9]|8[2-6])|3(?:2[01]|3[0-289]|4[1289]|7[1-4]|87)|4(?:1[69]|3[2-49]|4[0-3]|6[5-8])|5(?:1[578]|44|5[0-4])|6(?:1[78]|2[69]|39|4[5-7]|5[1-5]|6[0-59]|8[015-8]))|2(?:2(?:11[1-9]|22[0-7]|33\\d|44[1467]|66[1-68])|5(?:11[124-6]|33[2-8]|44[1467]|55[14]|66[1-3679]|77[124-79]|880))|3(?:3(?:11[0-46-8]|(?:22|55)[0-6]|33[0134689]|44[04]|66[01467])|4(?:44[0-8]|55[0-69]|66[0-3]|77[1-5]))|4(?:6(?:119|22[0-24-7]|33[1-5]|44[13-69]|55[14-689]|660|88[1-4])|7(?:(?:11|22)[1-9]|33[13-7]|44[13-6]|55[1-689]))|5(?:7(?:227|55[05]|(?:66|77)[14-8])|8(?:11[149]|22[013-79]|33[0-68]|44[013-8]|550|66[1-5]|77\\d)))\\d{4}"],
                            ["7001\\d{5}|(?:7(?:0[1-9]|1[01]|77|86|99)|9\\d\\d)\\d{6}"]
                        ]
                    ],
                    FI: ["358", "00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))", "[1-35689]\\d{4}|7\\d{10,11}|(?:[124-7]\\d|3[0-46-9])\\d{8}|[1-9]\\d{5,8}", [5, 6, 7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d)(\\d{4,9})", "$1 $2", ["[2568][1-8]|3(?:0[1-9]|[1-9])|9"], "0$1"],
                            ["(\\d{3})(\\d{3,7})", "$1 $2", ["[12]00|[368]|70[07-9]"], "0$1"],
                            ["(\\d{2})(\\d{4,8})", "$1 $2", ["[1245]|7[135]"], "0$1"],
                            ["(\\d{2})(\\d{6,10})", "$1 $2", ["7"], "0$1"]
                        ], "0", 0, 0, 0, 0, "1[03-79]|[2-9]", [
                            ["(?:1[3-79][1-8]|[235689][1-8]\\d)\\d{2,6}", [5, 6, 7, 8, 9]],
                            ["4946\\d{2,6}|(?:4[0-8]|50)\\d{4,8}", [6, 7, 8, 9, 10]],
                            ["800\\d{4,6}", [7, 8, 9]],
                            ["[67]00\\d{5,6}", [8, 9]], 0, 0, ["20\\d{4,8}|60[12]\\d{5,6}|7(?:099\\d{4,5}|5[03-9]\\d{3,7})|20[2-59]\\d\\d|(?:606|7(?:0[78]|1|3\\d))\\d{7}|(?:10|29|3[09]|70[1-5]\\d)\\d{4,8}"]
                        ], "00"
                    ],
                    FJ: ["679", "0(?:0|52)", "45\\d{5}|(?:0800\\d|[235-9])\\d{6}", [7, 11],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[235-9]|45"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["603\\d{4}|(?:3[0-5]|6[25-7]|8[58])\\d{5}", [7]],
                            ["(?:[279]\\d|45|5[01568]|8[034679])\\d{5}", [7]],
                            ["0800\\d{7}", [11]]
                        ], "00"
                    ],
                    FK: ["500", "00", "[2-7]\\d{4}", [5], 0, 0, 0, 0, 0, 0, 0, [
                        ["[2-47]\\d{4}"],
                        ["[56]\\d{4}"]
                    ]],
                    FM: ["691", "00", "(?:[39]\\d\\d|820)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[389]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-6]\\d)\\d)\\d{3}"],
                            ["31(?:00[67]|208|309)\\d\\d|(?:3(?:[2357]0[1-9]|602|804|905)|(?:820|9[2-7]\\d)\\d)\\d{3}"]
                        ]
                    ],
                    FO: ["298", "00", "[2-9]\\d{5}", [6],
                        [
                            ["(\\d{6})", "$1", ["[2-9]"]]
                        ], 0, 0, "(10(?:01|[12]0|88))", 0, 0, 0, [
                            ["(?:20|[34]\\d|8[19])\\d{4}"],
                            ["(?:[27][1-9]|5\\d|9[16])\\d{4}"],
                            ["80[257-9]\\d{3}"],
                            ["90(?:[13-5][15-7]|2[125-7]|9\\d)\\d\\d"], 0, 0, 0, 0, ["(?:6[0-36]|88)\\d{4}"]
                        ]
                    ],
                    FR: ["33", "00", "[1-9]\\d{8}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0 $1"],
                            ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["[1-79]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:[1-35]\\d|4[1-9])\\d{7}"],
                            ["(?:6(?:[0-24-8]\\d|3[0-8]|9[589])|7(?:00|[3-9]\\d))\\d{6}"],
                            ["80[0-5]\\d{6}"],
                            ["836(?:0[0-36-9]|[1-9]\\d)\\d{4}|8(?:1[2-9]|2[2-47-9]|3[0-57-9]|[569]\\d|8[0-35-9])\\d{6}"], 0, 0, ["80[6-9]\\d{6}"], 0, ["9\\d{8}"],
                            ["8(?:1[01]|2[0156]|4[02]|84)\\d{6}"]
                        ]
                    ],
                    GA: ["241", "00", "(?:[067]\\d|11)\\d{6}|[2-7]\\d{6}", [7, 8],
                        [
                            ["(\\d)(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-7]"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["11|[67]"], "0$1"]
                        ], 0, 0, "0(11\\d{6}|60\\d{6}|61\\d{6}|6[256]\\d{6}|7[467]\\d{6})", "$1", 0, 0, [
                            ["[01]1\\d{6}", [8]],
                            ["(?:(?:0[2-7]|7[467])\\d|6(?:0[0-4]|10|[256]\\d))\\d{5}|[2-7]\\d{6}"]
                        ]
                    ],
                    GB: ["44", "00", "[1-357-9]\\d{9}|[18]\\d{8}|8\\d{6}", [7, 9, 10],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["800", "8001", "80011", "800111", "8001111"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["845", "8454", "84546", "845464"], "0$1"],
                            ["(\\d{3})(\\d{6})", "$1 $2", ["800"], "0$1"],
                            ["(\\d{5})(\\d{4,5})", "$1 $2", ["1(?:38|5[23]|69|76|94)", "1(?:(?:38|69)7|5(?:24|39)|768|946)", "1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)"], "0$1"],
                            ["(\\d{4})(\\d{5,6})", "$1 $2", ["1(?:[2-69][02-9]|[78])"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[25]|7(?:0|6[02-9])", "[25]|7(?:0|6(?:[03-9]|2[356]))"], "0$1"],
                            ["(\\d{4})(\\d{6})", "$1 $2", ["7"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1389]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:1(?:3(?:[0-58]\\d\\d|73[0235])|4(?:[0-5]\\d\\d|69[7-9]|70[013579])|(?:(?:5[0-26-9]|[78][0-49])\\d|6(?:[0-4]\\d|50))\\d)|2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\d)\\d\\d|1(?:[0-7]\\d\\d|8(?:[02]\\d|1[0-246-9])))|(?:3(?:0\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\d\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\d{3})\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\d)|76\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\d|7[4-79])|295[5-7]|35[34]\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\d{3}", [9, 10]],
                            ["7(?:457[0-57-9]|700[01]|911[028])\\d{5}|7(?:[1-3]\\d\\d|4(?:[0-46-9]\\d|5[0-689])|5(?:0[0-8]|[13-9]\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\d|8[02-9]|9[0-689])|8(?:[014-9]\\d|[23][0-8])|9(?:[024-9]\\d|1[02-9]|3[0-689]))\\d{6}", [10]],
                            ["80[08]\\d{7}|800\\d{6}|8001111"],
                            ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[2-49]))\\d{7}|845464\\d", [7, 10]],
                            ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]],
                            ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
                            ["56\\d{8}", [10]]
                        ], 0, " x"
                    ],
                    GD: ["1", "011", "(?:473|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "473$1", 0, "473", [
                        ["473(?:2(?:3[0-2]|69)|3(?:2[89]|86)|4(?:[06]8|3[5-9]|4[0-49]|5[5-79]|73|90)|63[68]|7(?:58|84)|800|938)\\d{4}"],
                        ["473(?:4(?:0[2-79]|1[04-9]|2[0-5]|58)|5(?:2[01]|3[3-8])|901)\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    GE: ["995", "00", "(?:[3-57]\\d\\d|800)\\d{6}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["32"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[57]"]],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[348]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:3(?:[256]\\d|4[124-9]|7[0-4])|4(?:1\\d|2[2-7]|3[1-79]|4[2-8]|7[239]|9[1-7]))\\d{6}"],
                            ["5(?:(?:0555|1(?:[17]77|555))[5-9]|757(?:7[7-9]|8[01]))\\d{3}|5(?:0070|11(?:33|51)|[25]222|3333)[0-4]\\d{3}|5(?:00(?:0\\d|5[05])|11(?:00|[124]\\d|3[01])|5200|75(?:00|[57]5)|8(?:0(?:[01]\\d|2[0-4])|58[89]|8(?:55|88)))\\d{4}|(?:5(?:[14]4|5[0157-9]|68|7[0147-9]|9[1-35-9])|790)\\d{6}"],
                            ["800\\d{6}"], 0, 0, 0, 0, 0, ["70[67]\\d{6}"]
                        ]
                    ],
                    GF: ["594", "00", "(?:[56]94|80\\d|976)\\d{6}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["594(?:[0239]\\d|1[0-2]|4[03-9]|5[6-9]|6[0-3]|80)\\d{4}"],
                            ["694(?:[0-249]\\d|3[0-8])\\d{4}"],
                            ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["976\\d{6}"]
                        ]
                    ],
                    GG: ["44", "00", "(?:1481|[357-9]\\d{3})\\d{6}|8\\d{6}(?:\\d{2})?", [7, 9, 10], 0, "0", 0, "0|([25-9]\\d{5})$", "1481$1", 0, 0, [
                        ["1481[25-9]\\d{5}", [10]],
                        ["7(?:(?:781|839)\\d|911[17])\\d{5}", [10]],
                        ["80[08]\\d{7}|800\\d{6}|8001111"],
                        ["(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\d|8[0-3]))\\d{7}|845464\\d", [7, 10]],
                        ["70\\d{8}", [10]], 0, ["(?:3[0347]|55)\\d{8}", [10]],
                        ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}", [10]],
                        ["56\\d{8}", [10]]
                    ]],
                    GH: ["233", "00", "(?:[235]\\d{3}|800)\\d{5}", [8, 9],
                        [
                            ["(\\d{3})(\\d{5})", "$1 $2", ["8"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[235]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["3082[0-5]\\d{4}|3(?:0(?:[237]\\d|8[01])|[167](?:2[0-6]|7\\d|80)|2(?:2[0-5]|7\\d|80)|3(?:2[0-3]|7\\d|80)|4(?:2[013-9]|3[01]|7\\d|80)|5(?:2[0-7]|7\\d|80)|8(?:2[0-2]|7\\d|80)|9(?:[28]0|7\\d))\\d{5}", [9]],
                            ["(?:2(?:[0346-9]\\d|5[67])|5(?:[0457]\\d|6[01]|9[1-9]))\\d{6}", [9]],
                            ["800\\d{5}", [8]]
                        ]
                    ],
                    GI: ["350", "00", "(?:[25]\\d\\d|606)\\d{5}", [8],
                        [
                            ["(\\d{3})(\\d{5})", "$1 $2", ["2"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["21(?:6[24-7]\\d|90[0-2])\\d{3}|2(?:00|2[25])\\d{5}"],
                            ["(?:5[146-8]\\d|606)\\d{5}"]
                        ]
                    ],
                    GL: ["299", "00", "(?:19|[2-689]\\d|70)\\d{4}", [6],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["19|[2-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:19|3[1-7]|6[14689]|70|8[14-79]|9\\d)\\d{4}"],
                            ["[245]\\d{5}"],
                            ["80\\d{4}"], 0, 0, 0, 0, 0, ["3[89]\\d{4}"]
                        ]
                    ],
                    GM: ["220", "00", "[2-9]\\d{6}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:4(?:[23]\\d\\d|4(?:1[024679]|[6-9]\\d))|5(?:5(?:3\\d|4[0-7])|6[67]\\d|7(?:1[04]|2[035]|3[58]|48))|8\\d{3})\\d{3}"],
                            ["(?:[23679]\\d|5[0-389])\\d{5}"]
                        ]
                    ],
                    GN: ["224", "00", "722\\d{6}|(?:3|6\\d)\\d{7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["3"]],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[67]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["3(?:0(?:24|3[12]|4[1-35-7]|5[13]|6[189]|[78]1|9[1478])|1\\d\\d)\\d{4}", [8]],
                            ["6[0-356]\\d{7}", [9]], 0, 0, 0, 0, 0, 0, ["722\\d{6}", [9]]
                        ]
                    ],
                    GP: ["590", "00", "(?:590|(?:69|80)\\d|976)\\d{6}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1289]|5[3-579]|6[0-289]|7[08]|8[0-689]|9\\d)\\d{4}"],
                            ["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],
                            ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["976[01]\\d{5}"]
                        ]
                    ],
                    GQ: ["240", "00", "222\\d{6}|(?:3\\d|55|[89]0)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235]"]],
                            ["(\\d{3})(\\d{6})", "$1 $2", ["[89]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["33[0-24-9]\\d[46]\\d{4}|3(?:33|5\\d)\\d[7-9]\\d{4}"],
                            ["(?:222|55\\d)\\d{6}"],
                            ["80\\d[1-9]\\d{5}"],
                            ["90\\d[1-9]\\d{5}"]
                        ]
                    ],
                    GR: ["30", "00", "5005000\\d{3}|8\\d{9,11}|(?:[269]\\d|70)\\d{8}", [10, 11, 12],
                        [
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["21|7"]],
                            ["(\\d{4})(\\d{6})", "$1 $2", ["2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2689]"]],
                            ["(\\d{3})(\\d{3,4})(\\d{5})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:1\\d\\d|2(?:2[1-46-9]|[36][1-8]|4[1-7]|5[1-4]|7[1-5]|[89][1-9])|3(?:1\\d|2[1-57]|[35][1-3]|4[13]|7[1-7]|8[124-6]|9[1-79])|4(?:1\\d|2[1-8]|3[1-4]|4[13-5]|6[1-578]|9[1-5])|5(?:1\\d|[29][1-4]|3[1-5]|4[124]|5[1-6])|6(?:1\\d|[269][1-6]|3[1245]|4[1-7]|5[13-9]|7[14]|8[1-5])|7(?:1\\d|2[1-5]|3[1-6]|4[1-7]|5[1-57]|6[135]|9[125-7])|8(?:1\\d|2[1-5]|[34][1-4]|9[1-57]))\\d{6}", [10]],
                            ["68[57-9]\\d{7}|(?:69|94)\\d{8}", [10]],
                            ["800\\d{7,9}"],
                            ["90[19]\\d{7}", [10]],
                            ["70\\d{8}", [10]], 0, ["5005000\\d{3}", [10]], 0, 0, ["8(?:0[16]|12|[27]5|50)\\d{7}", [10]]
                        ]
                    ],
                    GT: ["502", "00", "(?:1\\d{3}|[2-7])\\d{7}", [8, 11],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["[267][2-9]\\d{6}", [8]],
                            ["[3-5]\\d{7}", [8]],
                            ["18[01]\\d{8}", [11]],
                            ["19\\d{9}", [11]]
                        ]
                    ],
                    GU: ["1", "011", "(?:[58]\\d\\d|671|900)\\d{7}", [10], 0, "1", 0, "1|([3-9]\\d{6})$", "671$1", 0, "671", [
                        ["671(?:3(?:00|3[39]|4[349]|55|6[26])|4(?:00|56|7[1-9]|8[0236-9])|5(?:55|6[2-5]|88)|6(?:3[2-578]|4[24-9]|5[34]|78|8[235-9])|7(?:[0479]7|2[0167]|3[45]|8[7-9])|8(?:[2-57-9]8|6[48])|9(?:2[29]|6[79]|7[1279]|8[7-9]|9[78]))\\d{4}"],
                        [""],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    GW: ["245", "00", "[49]\\d{8}|4\\d{6}", [7, 9],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["40"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["443\\d{6}", [9]],
                            ["9(?:5\\d|6[569]|77)\\d{6}", [9]], 0, 0, 0, 0, 0, 0, ["40\\d{5}", [7]]
                        ]
                    ],
                    GY: ["592", "001", "9008\\d{3}|(?:[2-467]\\d\\d|862)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-46-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:1[6-9]|2[0-35-9]|3[1-4]|5[3-9]|6\\d|7[0-24-79])|3(?:2[25-9]|3\\d)|4(?:4[0-24]|5[56])|77[1-57])\\d{4}"],
                            ["(?:6\\d\\d|70[015-7])\\d{4}"],
                            ["(?:289|862)\\d{4}"],
                            ["9008\\d{3}"]
                        ]
                    ],
                    HK: ["852", "00(?:30|5[09]|[126-9]?)", "8[0-46-9]\\d{6,7}|9\\d{4,7}|(?:[2-7]|9\\d{3})\\d{7}", [5, 6, 7, 8, 9, 11],
                        [
                            ["(\\d{3})(\\d{2,5})", "$1 $2", ["900", "9003"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]|8[1-4]|9(?:0[1-9]|[1-8])"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
                            ["(\\d{3})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["9"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:[13-9]\\d|2[013-9])\\d|3(?:(?:[1569][0-24-9]|4[0-246-9]|7[0-24-69])\\d|8(?:[45][0-8]|6[01]|9\\d))|58(?:0[1-8]|1[2-9]))\\d{4}", [8]],
                            ["(?:4(?:44[5-9]|6(?:0[0-7]|1[0-6]|4[0-57-9]|6[0-4]|7[0-8]))|573[0-6]|6(?:26[013-8]|66[0-3])|70(?:7[1-5]|8[0-4])|848[015-9]|9(?:29[013-9]|59[0-4]))\\d{4}|(?:4(?:4[01]|6[2358])|5(?:[1-59][0-46-9]|6[0-4689]|7[0-246-9])|6(?:0[1-9]|[13-59]\\d|[268][0-57-9]|7[0-79])|84[09]|9(?:0[1-9]|1[02-9]|[2358][0-8]|[467]\\d))\\d{5}", [8]],
                            ["800\\d{6}", [9]],
                            ["900(?:[0-24-9]\\d{7}|3\\d{1,4})", [5, 6, 7, 8, 11]],
                            ["8(?:1[0-4679]\\d|2(?:[0-36]\\d|7[0-4])|3(?:[034]\\d|2[09]|70))\\d{4}", [8]], 0, ["30(?:0[1-9]|[15-7]\\d|2[047]|89)\\d{4}", [8]],
                            ["7(?:1(?:0[0-38]|1[0-3679]|3[013]|69|9[0136])|2(?:[02389]\\d|1[18]|7[27-9])|3(?:[0-38]\\d|7[0-369]|9[2357-9])|47\\d|5(?:[178]\\d|5[0-5])|6(?:0[0-7]|2[236-9]|[35]\\d)|7(?:[27]\\d|8[7-9])|8(?:[23689]\\d|7[1-9])|9(?:[025]\\d|6[0-246-8]|7[0-36-9]|8[238]))\\d{4}", [8]]
                        ], "00"
                    ],
                    HN: ["504", "00", "8\\d{10}|[237-9]\\d{7}", [8, 11],
                        [
                            ["(\\d{4})(\\d{4})", "$1-$2", ["[237-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:2(?:0[0-359]|1[1-367]|[23]\\d|4[03-6]|5[57]|6[245]|7[0135689]|8[01346-9]|9[0-2])|4(?:0[78]|2[3-59]|3[13-9]|4[0-68]|5[1-35])|5(?:0[7-9]|16|4[03-5]|5\\d|6[014-6]|7[04]|80)|6(?:[056]\\d|17|2[067]|3[04]|4[0-378]|[78][0-8]|9[01])|7(?:6[46-9]|7[02-9]|8[034]|91)|8(?:79|8[0-357-9]|9[1-57-9]))\\d{4}", [8]],
                            ["[37-9]\\d{7}", [8]],
                            ["8002\\d{7}", [11]]
                        ]
                    ],
                    HR: ["385", "00", "(?:[24-69]\\d|3[0-79])\\d{7}|80\\d{5,7}|[1-79]\\d{7}|6\\d{5,6}", [6, 7, 8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["6[01]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["8"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{3})", "$1 $2 $3", ["1"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[67]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-5]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1\\d{7}|(?:2[0-3]|3[1-5]|4[02-47-9]|5[1-3])\\d{6,7}", [8, 9]],
                            ["98\\d{6,7}|975(?:1\\d|77|9[67])\\d{4}|9(?:0[1-9]|[1259]\\d|7[0679])\\d{6}", [8, 9]],
                            ["80[01]\\d{4,6}", [7, 8, 9]],
                            ["6[01459]\\d{6}|6[01]\\d{4,5}", [6, 7, 8]],
                            ["7[45]\\d{6}", [8]], 0, ["62\\d{6,7}|72\\d{6}", [8, 9]]
                        ]
                    ],
                    HT: ["509", "00", "[2-489]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[2-489]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:2\\d|5[1-5]|81|9[149])\\d{5}"],
                            ["[34]\\d{7}"],
                            ["8\\d{7}"], 0, 0, 0, 0, 0, ["9(?:[67][0-4]|8[0-3589]|9\\d)\\d{5}"]
                        ]
                    ],
                    HU: ["36", "00", "[235-7]\\d{8}|[1-9]\\d{7}", [8, 9],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "(06 $1)"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]"], "(06 $1)"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "06 $1"]
                        ], "06", 0, 0, 0, 0, 0, [
                            ["(?:1\\d|[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6[23689]|8[2-57-9]|9[2-69])\\d{6}", [8]],
                            ["(?:[257]0|3[01])\\d{7}", [9]],
                            ["(?:[48]0\\d|680[29])\\d{5}"],
                            ["9[01]\\d{6}", [8]], 0, 0, ["38\\d{7}", [9]], 0, ["21\\d{7}", [9]]
                        ]
                    ],
                    ID: ["62", "00[89]", "(?:(?:00[1-9]|8\\d)\\d{4}|[1-36])\\d{6}|00\\d{10}|[1-9]\\d{8,10}|[2-9]\\d{7}", [7, 8, 9, 10, 11, 12, 13],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["15"]],
                            ["(\\d{2})(\\d{5,9})", "$1 $2", ["2[124]|[36]1"], "(0$1)"],
                            ["(\\d{3})(\\d{5,7})", "$1 $2", ["800"], "0$1"],
                            ["(\\d{3})(\\d{5,8})", "$1 $2", ["[2-79]"], "(0$1)"],
                            ["(\\d{3})(\\d{3,4})(\\d{3})", "$1-$2-$3", ["8[1-35-9]"], "0$1"],
                            ["(\\d{3})(\\d{6,8})", "$1 $2", ["1"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["804"], "0$1"],
                            ["(\\d{3})(\\d)(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["80"], "0$1"],
                            ["(\\d{3})(\\d{4})(\\d{4,5})", "$1-$2-$3", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["2[124]\\d{7,8}|619\\d{8}|2(?:1(?:14|500)|2\\d{3})\\d{3}|61\\d{5,8}|(?:2(?:[35][1-4]|6[0-8]|7[1-6]|8\\d|9[1-8])|3(?:1|[25][1-8]|3[1-68]|4[1-3]|6[1-3568]|7[0-469]|8\\d)|4(?:0[1-589]|1[01347-9]|2[0-36-8]|3[0-24-68]|43|5[1-378]|6[1-5]|7[134]|8[1245])|5(?:1[1-35-9]|2[25-8]|3[124-9]|4[1-3589]|5[1-46]|6[1-8])|6(?:[25]\\d|3[1-69]|4[1-6])|7(?:02|[125][1-9]|[36]\\d|4[1-8]|7[0-36-9])|9(?:0[12]|1[013-8]|2[0-479]|5[125-8]|6[23679]|7[159]|8[01346]))\\d{5,8}", [7, 8, 9, 10, 11]],
                            ["8[1-35-9]\\d{7,10}", [9, 10, 11, 12]],
                            ["00[17]803\\d{7}|(?:177\\d|800)\\d{5,7}|001803\\d{6}", [8, 9, 10, 11, 12, 13]],
                            ["809\\d{7}", [10]], 0, 0, ["(?:1500|8071\\d{3})\\d{3}", [7, 10]], 0, 0, ["804\\d{7}", [10]]
                        ]
                    ],
                    IE: ["353", "00", "(?:1\\d|[2569])\\d{6,8}|4\\d{6,9}|7\\d{8}|8\\d{8,9}", [7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{5})", "$1 $2", ["2[24-9]|47|58|6[237-9]|9[35-9]"], "(0$1)"],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[45]0"], "(0$1)"],
                            ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2569]|4[1-69]|7[14]"], "(0$1)"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["70"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["81"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[78]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["4"], "(0$1)"],
                            ["(\\d{2})(\\d)(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1\\d|21)\\d{6,7}|(?:2[24-9]|4(?:0[24]|5\\d|7)|5(?:0[45]|1\\d|8)|6(?:1\\d|[237-9])|9(?:1\\d|[35-9]))\\d{5}|(?:23|4(?:[1-469]|8\\d)|5[23679]|6[4-6]|7[14]|9[04])\\d{7}"],
                            ["8(?:22|[35-9]\\d)\\d{6}", [9]],
                            ["1800\\d{6}", [10]],
                            ["15(?:1[2-8]|[2-8]0|9[089])\\d{6}", [10]],
                            ["700\\d{6}", [9]], 0, ["818\\d{6}", [9]], 0, ["76\\d{7}", [9]],
                            ["18[59]0\\d{6}", [10]]
                        ]
                    ],
                    IL: ["972", "0(?:0|1[2-9])", "1\\d{6}(?:\\d{3,5})?|[57]\\d{8}|[1-489]\\d{7}", [7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d{4})(\\d{3})", "$1-$2", ["125"]],
                            ["(\\d{4})(\\d{2})(\\d{2})", "$1-$2-$3", ["121"]],
                            ["(\\d)(\\d{3})(\\d{4})", "$1-$2-$3", ["[2-489]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1-$2-$3", ["12"]],
                            ["(\\d{4})(\\d{6})", "$1-$2", ["159"]],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3-$4", ["1[7-9]"]],
                            ["(\\d{3})(\\d{1,2})(\\d{3})(\\d{4})", "$1-$2 $3-$4", ["15"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["153\\d{8,9}|29[1-9]\\d{5}|(?:2[0-8]|[3489]\\d)\\d{6}", [8, 11, 12]],
                            ["5(?:(?:[02368]\\d|[19][2-9]|4[1-9])\\d|5(?:01|1[79]|2[2-9]|3[0-3]|4[34]|5[015689]|6[6-8]|7[0-267]|8[7-9]|9[1-9]))\\d{5}", [9]],
                            ["1(?:255|80[019]\\d{3})\\d{3}", [7, 10]],
                            ["1212\\d{4}|1(?:200|9(?:0[0-2]|19))\\d{6}", [8, 10]], 0, 0, ["1599\\d{6}", [10]], 0, ["7(?:380|8(?:33|55|77|81))\\d{5}|7(?:18|2[23]|3[237]|47|6[258]|7\\d|82|9[2-9])\\d{6}", [9]],
                            ["1700\\d{6}", [10]]
                        ]
                    ],
                    IM: ["44", "00", "1624\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "0|([25-8]\\d{5})$", "1624$1", 0, "74576|(?:16|7[56])24", [
                        ["1624(?:230|[5-8]\\d\\d)\\d{3}"],
                        ["76245[06]\\d{4}|7(?:4576|[59]24\\d|624[0-4689])\\d{5}"],
                        ["808162\\d{4}"],
                        ["8(?:440[49]06|72299\\d)\\d{3}|(?:8(?:45|70)|90[0167])624\\d{4}"],
                        ["70\\d{8}"], 0, ["3440[49]06\\d{3}|(?:3(?:08162|3\\d{4}|45624|7(?:0624|2299))|55\\d{4})\\d{4}"], 0, ["56\\d{8}"]
                    ]],
                    IN: ["91", "00", "(?:000800|[2-9]\\d\\d)\\d{7}|1\\d{7,12}", [8, 9, 10, 11, 12, 13],
                        [
                            ["(\\d{8})", "$1", ["5(?:0|2[23]|3[03]|[67]1|88)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)", "5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)"], 0, 1],
                            ["(\\d{4})(\\d{4,5})", "$1 $2", ["180", "1800"], 0, 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["140"], 0, 1],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["11|2[02]|33|4[04]|79[1-7]|80[2-46]", "11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])", "11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]", "1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]"], "0$1", 1],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807", "1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]", "1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\d|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]))[2-7]"], "0$1", 1],
                            ["(\\d{5})(\\d{5})", "$1 $2", ["[6-9]"], "0$1", 1],
                            ["(\\d{4})(\\d{2,4})(\\d{4})", "$1 $2 $3", ["1(?:6|8[06])", "1(?:6|8[06]0)"], 0, 1],
                            ["(\\d{4})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["18"], 0, 1]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["2717(?:[2-7]\\d|95)\\d{4}|(?:271[0-689]|782[0-6])[2-7]\\d{5}|(?:170[24]|2(?:(?:[02][2-79]|90)\\d|80[13468])|(?:3(?:23|80)|683|79[1-7])\\d|4(?:20[24]|72[2-8])|552[1-7])\\d{6}|(?:11|33|4[04]|80)[2-7]\\d{7}|(?:342|674|788)(?:[0189][2-7]|[2-7]\\d)\\d{5}|(?:1(?:2[0-249]|3[0-25]|4[145]|[59][14]|6[014]|7[1257]|8[01346])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568]|9[14])|3(?:26|4[13]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[014-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|2[14]|3[134]|4[47]|5[15]|[67]1)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91))[2-7]\\d{6}|(?:1(?:2[35-8]|3[346-9]|4[236-9]|[59][0235-9]|6[235-9]|7[34689]|8[257-9])|2(?:1[134689]|3[24-8]|4[2-8]|5[25689]|6[2-4679]|7[3-79]|8[2-479]|9[235-9])|3(?:01|1[79]|2[1245]|4[5-8]|5[125689]|6[235-7]|7[157-9]|8[2-46-8])|4(?:1[14578]|2[5689]|3[2-467]|5[4-7]|6[35]|73|8[2689]|9[2389])|5(?:[16][146-9]|2[14-8]|3[1346]|4[14-69]|5[46]|7[2-4]|8[2-8]|9[246])|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])|7(?:1[013-9]|2[0235-9]|3[2679]|4[1-35689]|5[2-46-9]|[67][02-9]|8[013-7]|9[089])|8(?:1[1357-9]|2[235-8]|3[03-57-9]|4[0-24-9]|5\\d|6[2457-9]|7[1-6]|8[1256]|9[2-4]))\\d[2-7]\\d{5}", [10]],
                            ["(?:61279|7(?:887[02-9]|9(?:313|79[07-9]))|8(?:079[04-9]|(?:84|91)7[02-8]))\\d{5}|(?:6(?:12|[2-47]1|5[17]|6[13]|80)[0189]|7(?:1(?:2[0189]|9[0-5])|2(?:[14][017-9]|8[0-59])|3(?:2[5-8]|[34][017-9]|9[016-9])|4(?:1[015-9]|[29][89]|39|8[389])|5(?:[15][017-9]|2[04-9]|9[7-9])|6(?:0[0-47]|1[0-257-9]|2[0-4]|3[19]|5[4589])|70[0289]|88[089]|97[02-8])|8(?:0(?:6[67]|7[02-8])|70[017-9]|84[01489]|91[0-289]))\\d{6}|(?:7(?:31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[0189]\\d|7[02-8])\\d{5}|(?:6(?:[09]\\d|1[04679]|2[03689]|3[05-9]|4[0489]|50|6[069]|7[07]|8[7-9])|7(?:0\\d|2[0235-79]|3[05-8]|40|5[0346-8]|6[6-9]|7[1-9]|8[0-79]|9[089])|8(?:0[01589]|1[0-57-9]|2[235-9]|3[03-57-9]|[45]\\d|6[02457-9]|7[1-69]|8[0-25-9]|9[02-9])|9\\d\\d)\\d{7}|(?:6(?:(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|8[124-6])\\d|7(?:[235689]\\d|4[0189]))|7(?:1(?:[013-8]\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-5])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\d|5[0-367])|70[13-7]|881))[0189]\\d{5}", [10]],
                            ["000800\\d{7}|1(?:600\\d{6}|80(?:0\\d{4,9}|3\\d{9}))"],
                            ["186[12]\\d{9}", [13]], 0, 0, ["140\\d{7}", [10]], 0, 0, ["1860\\d{7}", [11]]
                        ]
                    ],
                    IO: ["246", "00", "3\\d{6}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["3"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["37\\d{5}"],
                            ["38\\d{5}"]
                        ]
                    ],
                    IQ: ["964", "00", "(?:1|7\\d\\d)\\d{7}|[2-6]\\d{7,8}", [8, 9, 10],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-6]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1\\d{7}|(?:2[13-5]|3[02367]|4[023]|5[03]|6[026])\\d{6,7}", [8, 9]],
                            ["7[3-9]\\d{8}", [10]]
                        ]
                    ],
                    IR: ["98", "00", "[1-9]\\d{9}|(?:[1-8]\\d\\d|9)\\d{3,4}", [4, 5, 6, 7, 10],
                        [
                            ["(\\d{4,5})", "$1", ["96"], "0$1"],
                            ["(\\d{2})(\\d{4,5})", "$1 $2", ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["9"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["[1-8]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])(?:[03-57]\\d{7}|[16]\\d{3}(?:\\d{4})?|[289]\\d{3}(?:\\d(?:\\d{3})?)?)|94(?:000[09]|2(?:121|[2689]0\\d)|30[0-2]\\d|4(?:111|40\\d))\\d{4}", [6, 7, 10]],
                            ["9(?:(?:0(?:[0-35]\\d|4[4-6])|(?:[13]\\d|2[0-3])\\d)\\d|9(?:[0-46]\\d\\d|5[15]0|8(?:1\\d|88)|9(?:0[0-3]|[19]\\d|21|77|8[7-9])))\\d{5}", [10]], 0, 0, 0, 0, ["96(?:0[12]|2[16-8]|3(?:08|[14]5|[23]|66)|4(?:0|80)|5[01]|6[89]|86|9[19])", [4, 5]]
                        ]
                    ],
                    IS: ["354", "00|1(?:0(?:01|[12]0)|100)", "(?:38\\d|[4-9])\\d{6}", [7, 9],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[4-9]"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["3"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:4(?:1[0-24-69]|2[0-7]|[37][0-8]|4[0-24589]|5[0-68]|6\\d|8[0-36-8])|5(?:05|[156]\\d|2[02578]|3[0-579]|4[03-7]|7[0-2578]|8[0-35-9]|9[013-689])|872)\\d{4}", [7]],
                            ["(?:38[589]\\d\\d|6(?:1[1-8]|2[0-6]|3[026-9]|4[014679]|5[0159]|6[0-69]|70|8[06-8]|9\\d)|7(?:5[057]|[6-9]\\d)|8(?:2[0-59]|[3-69]\\d|8[238]))\\d{4}"],
                            ["80[0-8]\\d{4}", [7]],
                            ["90(?:0\\d|1[5-79]|2[015-79]|3[135-79]|4[125-7]|5[25-79]|7[1-37]|8[0-35-7])\\d{3}", [7]], 0, 0, ["809\\d{4}", [7]], 0, ["49[0-24-79]\\d{4}", [7]]
                        ], "00"
                    ],
                    IT: ["39", "00", "0\\d{5,10}|1\\d{8,10}|3(?:[0-8]\\d{7,10}|9\\d{7,8})|(?:55|70)\\d{8}|8\\d{5}(?:\\d{2,4})?", [6, 7, 8, 9, 10, 11],
                        [
                            ["(\\d{2})(\\d{4,6})", "$1 $2", ["0[26]"]],
                            ["(\\d{3})(\\d{3,6})", "$1 $2", ["0[13-57-9][0159]|8(?:03|4[17]|9[2-5])", "0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))"]],
                            ["(\\d{4})(\\d{2,6})", "$1 $2", ["0(?:[13-579][2-46-8]|8[236-8])"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["894"]],
                            ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[26]|5"]],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["1(?:44|[679])|[378]"]],
                            ["(\\d{3})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["0[13-57-9][0159]|14"]],
                            ["(\\d{2})(\\d{4})(\\d{5})", "$1 $2 $3", ["0[26]"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["0"]],
                            ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["3"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["0669[0-79]\\d{1,6}|0(?:1(?:[0159]\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\d\\d|3(?:[0159]\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\d|6[0-8])|7(?:[0159]\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\d{2,7}"],
                            ["3[1-9]\\d{8}|3[2-9]\\d{7}", [9, 10]],
                            ["80(?:0\\d{3}|3)\\d{3}", [6, 9]],
                            ["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}", [6, 8, 9, 10]],
                            ["1(?:78\\d|99)\\d{6}", [9, 10]], 0, 0, 0, ["55\\d{8}", [10]],
                            ["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]
                        ]
                    ],
                    JE: ["44", "00", "1534\\d{6}|(?:[3578]\\d|90)\\d{8}", [10], 0, "0", 0, "0|([0-24-8]\\d{5})$", "1534$1", 0, 0, [
                        ["1534[0-24-8]\\d{5}"],
                        ["7(?:(?:(?:50|82)9|937)\\d|7(?:00[378]|97[7-9]))\\d{5}"],
                        ["80(?:07(?:35|81)|8901)\\d{4}"],
                        ["(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\d{4}"],
                        ["701511\\d{4}"], 0, ["(?:3(?:0(?:07(?:35|81)|8901)|3\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\d{4})\\d{4}"],
                        ["76(?:464|652)\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\d{6}"],
                        ["56\\d{8}"]
                    ]],
                    JM: ["1", "011", "(?:[58]\\d\\d|658|900)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "658|876", [
                        ["8766060\\d{3}|(?:658(?:2(?:[0-8]\\d|9[0-46-9])|[3-9]\\d\\d)|876(?:52[35]|6(?:0[1-3579]|1[02357-9]|[23]\\d|40|5[06]|6[2-589]|7[025-7]|8[04]|9[4-9])|7(?:0[2-689]|[1-6]\\d|8[056]|9[45])|9(?:0[1-8]|1[02378]|[2-8]\\d|9[2-468])))\\d{4}"],
                        ["(?:658295|876(?:2(?:0[1-9]|[13-9]\\d|2[013-9])|[348]\\d\\d|5(?:0[1-9]|[1-9]\\d)|6(?:4[89]|6[67])|7(?:0[07]|7\\d|8[1-47-9]|9[0-36-9])|9(?:[01]9|9[0579])))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    JO: ["962", "00", "(?:(?:[2689]|7\\d)\\d|32|53)\\d{6}", [8, 9],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2356]|87"], "(0$1)"],
                            ["(\\d{3})(\\d{5,6})", "$1 $2", ["[89]"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["70"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["7"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["87(?:000|90[01])\\d{3}|(?:2(?:6(?:2[0-35-9]|3[0-578]|4[24-7]|5[0-24-8]|[6-8][023]|9[0-3])|7(?:0[1-79]|10|2[014-7]|3[0-689]|4[019]|5[0-3578]))|32(?:0[1-69]|1[1-35-7]|2[024-7]|3\\d|4[0-3]|[5-7][023])|53(?:0[0-3]|[13][023]|2[0-59]|49|5[0-35-9]|6[15]|7[45]|8[1-6]|9[0-36-9])|6(?:2(?:[05]0|22)|3(?:00|33)|4(?:0[0-25]|1[2-7]|2[0569]|[38][07-9]|4[025689]|6[0-589]|7\\d|9[0-2])|5(?:[01][056]|2[034]|3[0-57-9]|4[178]|5[0-69]|6[0-35-9]|7[1-379]|8[0-68]|9[0239]))|87(?:20|7[078]|99))\\d{4}", [8]],
                            ["7(?:[78][0-25-9]|9\\d)\\d{6}", [9]],
                            ["80\\d{6}", [8]],
                            ["9\\d{7}", [8]],
                            ["70\\d{7}", [9]], 0, ["8(?:10|8\\d)\\d{5}", [8]],
                            ["74(?:66|77)\\d{5}", [9]], 0, ["85\\d{6}", [8]]
                        ]
                    ],
                    JP: ["81", "010", "00[1-9]\\d{6,14}|[257-9]\\d{9}|(?:00|[1-9]\\d\\d)\\d{6}", [8, 9, 10, 11, 12, 13, 14, 15, 16, 17],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1-$2-$3", ["(?:12|57|99)0"], "0$1"],
                            ["(\\d{4})(\\d)(\\d{4})", "$1-$2-$3", ["1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51|63)|9(?:80|9[16])", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9]|636)|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]", "1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9]|636[457-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1-$2-$3", ["[36]|4(?:2[09]|7[01])", "[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[27-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9])|5(?:2|3[045]|4[0-369]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|49|51|6(?:[0-24]|36|5[0-3589]|72|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:49|55|83)[29]|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]", "1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|7[015-9]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17|3[015-9]))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3[045]|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9(?:[019]|4[1-3]|6(?:[0-47-9]|5[01346-9])))|3(?:[29]|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[23]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|72|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|829(?:2|66)|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3", ["[14]|[289][2-9]|5[3-9]|7[2-4679]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2-$3", ["800"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[257-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:1[235-8]|2[3-6]|3[3-9]|4[2-6]|[58][2-8]|6[2-7]|7[2-9]|9[1-9])|(?:2[2-9]|[36][1-9])\\d|4(?:[2-578]\\d|6[02-8]|9[2-59])|5(?:[2-589]\\d|6[1-9]|7[2-8])|7(?:[25-9]\\d|3[4-9]|4[02-9])|8(?:[2679]\\d|3[2-9]|4[5-9]|5[1-9]|8[03-9])|9(?:[2-58]\\d|[679][1-9]))\\d{6}", [9]],
                            ["[7-9]0[1-9]\\d{7}", [10]],
                            ["00777(?:[01]|5\\d)\\d\\d|(?:00(?:7778|882[1245])|(?:120|800\\d)\\d\\d)\\d{4}|00(?:37|66|78)\\d{6,13}"],
                            ["990\\d{6}", [9]],
                            ["60\\d{7}", [9]], 0, ["570\\d{6}", [9]],
                            ["20\\d{8}", [10]],
                            ["50[1-9]\\d{7}", [10]]
                        ]
                    ],
                    KE: ["254", "000", "(?:[17]\\d\\d|900)\\d{6}|(?:2|80)0\\d{6,7}|[4-6]\\d{6,8}", [7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{5,7})", "$1 $2", ["[24-6]"], "0$1"],
                            ["(\\d{3})(\\d{6})", "$1 $2", ["[17]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:4[245]|5[1-79]|6[01457-9])\\d{5,7}|(?:4[136]|5[08]|62)\\d{7}|(?:[24]0|66)\\d{6,7}", [7, 8, 9]],
                            ["(?:1(?:0[0-6]|1[0-5]|2[014]|30)|7\\d\\d)\\d{6}", [9]],
                            ["800[2-8]\\d{5,6}", [9, 10]],
                            ["900[02-9]\\d{5}", [9]]
                        ]
                    ],
                    KG: ["996", "00", "8\\d{9}|(?:[235-8]\\d|99)\\d{7}", [9, 10],
                        [
                            ["(\\d{4})(\\d{5})", "$1 $2", ["3(?:1[346]|[24-79])"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[235-79]|88"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d)(\\d{2,3})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["312(?:5[0-79]\\d|9(?:[0-689]\\d|7[0-24-9]))\\d{3}|(?:3(?:1(?:2[0-46-8]|3[1-9]|47|[56]\\d)|2(?:22|3[0-479]|6[0-7])|4(?:22|5[6-9]|6\\d)|5(?:22|3[4-7]|59|6\\d)|6(?:22|5[35-7]|6\\d)|7(?:22|3[468]|4[1-9]|59|[67]\\d)|9(?:22|4[1-8]|6\\d))|6(?:09|12|2[2-4])\\d)\\d{5}", [9]],
                            ["312(?:58\\d|973)\\d{3}|(?:2(?:0[0-35]|2\\d)|5[0-24-7]\\d|7(?:[07]\\d|55)|88[08]|99[05-9])\\d{6}", [9]],
                            ["800\\d{6,7}"]
                        ]
                    ],
                    KH: ["855", "00[14-9]", "1\\d{9}|[1-9]\\d{7,8}", [8, 9, 10],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-9]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["23(?:4(?:[2-4]|[56]\\d)|[568]\\d\\d)\\d{4}|23[236-9]\\d{5}|(?:2[4-6]|3[2-6]|4[2-4]|[5-7][2-5])(?:(?:[237-9]|4[56]|5\\d)\\d{5}|6\\d{5,6})", [8, 9]],
                            ["(?:(?:1[28]|3[18]|9[67])\\d|6[016-9]|7(?:[07-9]|[16]\\d)|8(?:[013-79]|8\\d))\\d{6}|(?:1\\d|9[0-57-9])\\d{6}|(?:2[3-6]|3[2-6]|4[2-4]|[5-7][2-5])48\\d{5}", [8, 9]],
                            ["1800(?:1\\d|2[019])\\d{4}", [10]],
                            ["1900(?:1\\d|2[09])\\d{4}", [10]]
                        ]
                    ],
                    KI: ["686", "00", "(?:[37]\\d|6[0-79])\\d{6}|(?:[2-48]\\d|50)\\d{3}", [5, 8], 0, "0", 0, 0, 0, 0, 0, [
                        ["(?:[24]\\d|3[1-9]|50|65(?:02[12]|12[56]|22[89]|[3-5]00)|7(?:27\\d\\d|3100|5(?:02[12]|12[56]|22[89]|[34](?:00|81)|500))|8[0-5])\\d{3}"],
                        ["(?:63\\d{3}|73(?:0[0-5]\\d|140))\\d{3}|[67]200[01]\\d{3}", [8]], 0, 0, 0, 0, 0, 0, ["30(?:0[01]\\d\\d|12(?:11|20))\\d\\d", [8]]
                    ]],
                    KM: ["269", "00", "[3478]\\d{6}", [7],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[3478]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["7[4-7]\\d{5}"],
                            ["[34]\\d{6}"], 0, ["8\\d{6}"]
                        ]
                    ],
                    KN: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "869$1", 0, "869", [
                        ["869(?:2(?:29|36)|302|4(?:6[015-9]|70)|56[5-7])\\d{4}"],
                        ["869(?:48[89]|55[6-8]|66\\d|76[02-7])\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    KP: ["850", "00|99", "85\\d{6}|(?:19\\d|[2-7])\\d{7}", [8, 10],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-7]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:195|2)\\d|3[19]|4[159]|5[37]|6[17]|7[39]|85)\\d{6}"],
                            ["19[1-3]\\d{7}", [10]]
                        ]
                    ],
                    KR: ["82", "00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))", "00[1-9]\\d{8,11}|(?:[12]|5\\d{3})\\d{7}|[13-6]\\d{9}|(?:[1-6]\\d|80)\\d{7}|[3-6]\\d{4,5}|(?:00|7)0\\d{8}", [5, 6, 8, 9, 10, 11, 12, 13, 14],
                        [
                            ["(\\d{2})(\\d{3,4})", "$1-$2", ["(?:3[1-3]|[46][1-4]|5[1-5])1"], "0$1"],
                            ["(\\d{4})(\\d{4})", "$1-$2", ["1"]],
                            ["(\\d)(\\d{3,4})(\\d{4})", "$1-$2-$3", ["2"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1-$2-$3", ["60|8"], "0$1"],
                            ["(\\d{2})(\\d{3,4})(\\d{4})", "$1-$2-$3", ["[1346]|5[1-5]"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2-$3", ["[57]"], "0$1"],
                            ["(\\d{2})(\\d{5})(\\d{4})", "$1-$2-$3", ["5"], "0$1"]
                        ], "0", 0, "0(8(?:[1-46-8]|5\\d\\d))?", 0, 0, 0, [
                            ["(?:2|3[1-3]|[46][1-4]|5[1-5])[1-9]\\d{6,7}|(?:3[1-3]|[46][1-4]|5[1-5])1\\d{2,3}", [5, 6, 8, 9, 10]],
                            ["1(?:05(?:[0-8]\\d|9[0-6])|22[13]\\d)\\d{4,5}|1(?:0[1-46-9]|[16-9]\\d|2[013-9])\\d{6,7}", [9, 10]],
                            ["00(?:308\\d{6,7}|798\\d{7,9})|(?:00368|80)\\d{7}", [9, 11, 12, 13, 14]],
                            ["60[2-9]\\d{6}", [9]],
                            ["50\\d{8,9}", [10, 11]], 0, ["1(?:5(?:22|33|44|66|77|88|99)|6(?:[07]0|44|6[168]|88)|8(?:00|33|55|77|99))\\d{4}", [8]],
                            ["15\\d{7,8}", [9, 10]],
                            ["70\\d{8}", [10]]
                        ]
                    ],
                    KW: ["965", "00", "18\\d{5}|(?:[2569]\\d|41)\\d{6}", [7, 8],
                        [
                            ["(\\d{4})(\\d{3,4})", "$1 $2", ["[169]|2(?:[235]|4[1-35-9])|52"]],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[245]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:[23]\\d\\d|4(?:[1-35-9]\\d|44)|5(?:0[034]|[2-46]\\d|5[1-3]|7[1-7]))\\d{4}", [8]],
                            ["(?:41\\d\\d|5(?:(?:[05]\\d|1[0-7]|6[56])\\d|2(?:22|5[25])|7(?:55|77)|88[58])|6(?:(?:0[034679]|5[015-9]|6\\d)\\d|1(?:00|11|66)|222|3[36]3|444|7(?:0[013-9]|[67]\\d)|888|9(?:[069]\\d|3[039]))|9(?:(?:0[09]|22|[4679]\\d|8[057-9])\\d|1(?:1[01]|99)|3(?:00|33)|5(?:00|5\\d)))\\d{4}", [8]],
                            ["18\\d{5}", [7]]
                        ]
                    ],
                    KY: ["1", "011", "(?:345|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "345$1", 0, "345", [
                        ["345(?:2(?:22|3[23]|44|66)|333|444|6(?:23|38|40)|7(?:30|4[35-79]|6[6-9]|77)|8(?:00|1[45]|[48]8)|9(?:14|4[035-9]))\\d{4}"],
                        ["345(?:32[1-9]|42[0-4]|5(?:1[67]|2[5-79]|4[6-9]|50|76)|649|82[56]|9(?:1[679]|2[2-9]|3[06-9]|90))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["(?:345976|900[2-9]\\d\\d)\\d{4}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, ["345849\\d{4}"]
                    ]],
                    KZ: ["7", "810", "(?:33622|8\\d{8})\\d{5}|[78]\\d{9}", [10, 14], 0, "8", 0, 0, 0, 0, "33|7", [
                        ["(?:33622|7(?:1(?:0(?:[23]\\d|4[0-3]|59|63)|1(?:[23]\\d|4[0-79]|59)|2(?:[23]\\d|59)|3(?:2\\d|3[0-79]|4[0-35-9]|59)|4(?:[24]\\d|3[013-9]|5[1-9])|5(?:2\\d|3[1-9]|4[0-7]|59)|6(?:[2-4]\\d|5[19]|61)|72\\d|8(?:[27]\\d|3[1-46-9]|4[0-5]))|2(?:1(?:[23]\\d|4[46-9]|5[3469])|2(?:2\\d|3[0679]|46|5[12679])|3(?:[2-4]\\d|5[139])|4(?:2\\d|3[1-35-9]|59)|5(?:[23]\\d|4[0-246-8]|59|61)|6(?:2\\d|3[1-9]|4[0-4]|59)|7(?:[2379]\\d|40|5[279])|8(?:[23]\\d|4[0-3]|59)|9(?:2\\d|3[124578]|59))))\\d{5}", [10]],
                        ["7(?:0[0-25-8]|47|6[0-4]|7[15-8]|85)\\d{7}", [10]],
                        ["8(?:00|108\\d{3})\\d{7}"],
                        ["809\\d{7}", [10]],
                        ["808\\d{7}", [10]], 0, 0, 0, ["751\\d{7}", [10]]
                    ], "8~10"],
                    LA: ["856", "00", "[23]\\d{9}|3\\d{8}|(?:[235-8]\\d|41)\\d{6}", [8, 9, 10],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2[13]|3[14]|[4-8]"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["30[013-9]"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[23]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2[13]|[35-7][14]|41|8[1468])\\d{6}", [8]],
                            ["(?:20(?:[239]\\d|5[24-9]|7[6-8]|88)|302\\d)\\d{6}", [10]], 0, 0, 0, 0, ["30[013-9]\\d{6}", [9]]
                        ]
                    ],
                    LB: ["961", "00", "[27-9]\\d{7}|[13-9]\\d{6}", [7, 8],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[27-9]"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["7(?:62|8[0-7]|9[04-9])\\d{4}|(?:[14-69]\\d|2(?:[14-69]\\d|[78][1-9])|7[2-57]|8[02-9])\\d{5}"],
                            ["793(?:[01]\\d|2[0-4])\\d{3}|(?:(?:3|81)\\d|7(?:[01]\\d|6[013-9]|8[89]|9[12]))\\d{5}"], 0, ["9[01]\\d{6}", [8]], 0, 0, 0, 0, 0, ["80\\d{6}", [8]]
                        ]
                    ],
                    LC: ["1", "011", "(?:[58]\\d\\d|758|900)\\d{7}", [10], 0, "1", 0, "1|([2-8]\\d{6})$", "758$1", 0, "758", [
                        ["758(?:234|4(?:30|5\\d|6[2-9]|8[0-2])|57[0-2]|(?:63|75)8)\\d{4}"],
                        ["758(?:28[4-7]|384|4(?:6[01]|8[4-9])|5(?:1[89]|20|84)|7(?:1[2-9]|2\\d|3[0-3])|812)\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    LI: ["423", "00", "[68]\\d{8}|(?:[2378]\\d|90)\\d{5}", [7, 9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3", ["[2379]|8(?:0[09]|7)", "[2379]|8(?:0(?:02|9)|7)"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["69"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]]
                        ], "0", 0, "0|(1001)", 0, 0, 0, [
                            ["(?:2(?:01|1[27]|2[02]|3\\d|6[02-578]|96)|3(?:[24]0|33|7[0135-7]|8[048]|9[0269]))\\d{4}", [7]],
                            ["(?:6(?:(?:4[5-9]|5[0-4])\\d|6(?:[0245]\\d|[17]0|3[7-9]))\\d|7(?:[37-9]\\d|42|56))\\d{4}"],
                            ["8002[28]\\d\\d|80(?:05\\d|9)\\d{4}"],
                            ["90(?:02[258]|1(?:23|3[14])|66[136])\\d\\d", [7]], 0, 0, ["870(?:28|87)\\d\\d", [7]]
                        ]
                    ],
                    LK: ["94", "00", "[1-9]\\d{8}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[1-689]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:12[2-9]|602|8[12]\\d|9(?:1\\d|22|9[245]))\\d{6}|(?:11|2[13-7]|3[1-8]|4[157]|5[12457]|6[35-7])[2-57]\\d{6}"],
                            ["7(?:[0-25-8]\\d|4[0-4])\\d{6}"], 0, 0, 0, 0, ["1973\\d{5}"]
                        ]
                    ],
                    LR: ["231", "00", "(?:2|33|5\\d|77|88)\\d{7}|[4-6]\\d{6}", [7, 8, 9],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[4-6]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3578]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2\\d{3}|33333)\\d{4}", [8, 9]],
                            ["(?:(?:330|555|(?:77|88)\\d)\\d|4[67])\\d{5}|[56]\\d{6}", [7, 9]], 0, ["332(?:02|[34]\\d)\\d{4}", [9]]
                        ]
                    ],
                    LS: ["266", "00", "(?:[256]\\d\\d|800)\\d{5}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2568]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2\\d{7}"],
                            ["[56]\\d{7}"],
                            ["800[256]\\d{4}"]
                        ]
                    ],
                    LT: ["370", "00", "(?:[3469]\\d|52|[78]0)\\d{6}", [8],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["52[0-7]"], "(8-$1)", 1],
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[7-9]"], "8 $1", 1],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["37|4(?:[15]|6[1-8])"], "(8-$1)", 1],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[3-6]"], "(8-$1)", 1]
                        ], "8", 0, "[08]", 0, 0, 0, [
                            ["(?:3[1478]|4[124-6]|52)\\d{6}"],
                            ["6\\d{7}"],
                            ["80[02]\\d{5}"],
                            ["9(?:0[0239]|10)\\d{5}"],
                            ["70[05]\\d{5}"], 0, ["70[67]\\d{5}"], 0, ["[89]01\\d{5}"],
                            ["808\\d{5}"]
                        ]
                    ],
                    LU: ["352", "00", "35[013-9]\\d{4,8}|6\\d{8}|35\\d{2,4}|(?:[2457-9]\\d|3[0-46-9])\\d{2,9}", [4, 5, 6, 7, 8, 9, 10, 11],
                        [
                            ["(\\d{2})(\\d{3})", "$1 $2", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])"]],
                            ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["20[2-689]"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4", ["2(?:[0367]|4[3-8])"]],
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["80[01]|90[015]"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3 $4", ["20"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{1,2})", "$1 $2 $3 $4 $5", ["2(?:[0367]|4[3-8])"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{1,5})", "$1 $2 $3 $4", ["[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]"]]
                        ], 0, 0, "(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\d)", 0, 0, 0, [
                            ["(?:35[013-9]|80[2-9]|90[89])\\d{1,8}|(?:2[2-9]|3[0-46-9]|[457]\\d|8[13-9]|9[2-579])\\d{2,9}"],
                            ["6(?:[269][18]|5[1568]|7[189]|81)\\d{6}", [9]],
                            ["800\\d{5}", [8]],
                            ["90[015]\\d{5}", [8]], 0, 0, 0, 0, ["20(?:1\\d{5}|[2-689]\\d{1,7})", [4, 5, 6, 7, 8, 9, 10]],
                            ["801\\d{5}", [8]]
                        ]
                    ],
                    LV: ["371", "00", "(?:[268]\\d|90)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[269]|8[01]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["6\\d{7}"],
                            ["23(?:23[0-57-9]|33[0238])\\d{3}|2(?:[0-24-9]\\d\\d|3(?:0[07]|[14-9]\\d|2[024-9]|3[0-24-9]))\\d{4}"],
                            ["80\\d{6}"],
                            ["90\\d{6}"], 0, 0, 0, 0, 0, ["81\\d{6}"]
                        ]
                    ],
                    LY: ["218", "00", "[2-9]\\d{8}", [9],
                        [
                            ["(\\d{2})(\\d{7})", "$1-$2", ["[2-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2(?:0[56]|[1-6]\\d|7[124579]|8[124])|3(?:1\\d|2[2356])|4(?:[17]\\d|2[1-357]|5[2-4]|8[124])|5(?:[1347]\\d|2[1-469]|5[13-5]|8[1-4])|6(?:[1-479]\\d|5[2-57]|8[1-5])|7(?:[13]\\d|2[13-79])|8(?:[124]\\d|5[124]|84))\\d{6}"],
                            ["9[1-6]\\d{7}"]
                        ]
                    ],
                    MA: ["212", "00", "[5-8]\\d{8}", [9],
                        [
                            ["(\\d{5})(\\d{4})", "$1-$2", ["5(?:29|38)", "5(?:29[89]|389)", "5(?:29[89]|389)0"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5[45]"], "0$1"],
                            ["(\\d{4})(\\d{5})", "$1-$2", ["5(?:2[2-489]|3[5-9]|9)|892", "5(?:2(?:[2-49]|8[235-9])|3[5-9]|9)|892"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1-$2", ["8"], "0$1"],
                            ["(\\d{3})(\\d{6})", "$1-$2", ["[5-7]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["5(?:29(?:[189][05]|2[29]|3[01])|389[05])\\d{4}|5(?:2(?:[0-25-7]\\d|3[1-578]|4[02-46-8]|8[0235-7]|90)|3(?:[0-47]\\d|5[02-9]|6[02-8]|8[08]|9[3-9])|(?:4[067]|5[03])\\d)\\d{5}"],
                            ["(?:6(?:[0-79]\\d|8[0-247-9])|7(?:[017]\\d|2[0-2]|6[0-8]|8[0-3]))\\d{6}"],
                            ["80\\d{7}"],
                            ["89\\d{7}"], 0, 0, 0, 0, ["592(?:4[0-2]|93)\\d{4}"]
                        ]
                    ],
                    MC: ["377", "00", "(?:[3489]|6\\d)\\d{7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["4"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[389]"]],
                            ["(\\d)(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4 $5", ["6"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:870|9[2-47-9]\\d)\\d{5}", [8]],
                            ["4(?:[46]\\d|5[1-9])\\d{5}|(?:3|6\\d)\\d{7}"],
                            ["(?:800|90\\d)\\d{5}", [8]]
                        ]
                    ],
                    MD: ["373", "00", "(?:[235-7]\\d|[89]0)\\d{6}", [8],
                        [
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["22|3"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[25-7]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:2[1-9]|3[1-79])\\d|5(?:33|5[257]))\\d{5}"],
                            ["562\\d{5}|(?:6\\d|7[16-9])\\d{6}"],
                            ["800\\d{5}"],
                            ["90[056]\\d{5}"], 0, 0, ["803\\d{5}"], 0, ["3[08]\\d{6}"],
                            ["808\\d{5}"]
                        ]
                    ],
                    ME: ["382", "00", "(?:20|[3-79]\\d)\\d{6}|80\\d{6,7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[2-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:20[2-8]|3(?:[0-2][2-7]|3[24-7])|4(?:0[2-467]|1[2467])|5(?:0[2467]|1[24-7]|2[2-467]))\\d{5}", [8]],
                            ["6(?:[07-9]\\d|3[024]|6[0-25])\\d{5}", [8]],
                            ["80(?:[0-2578]|9\\d)\\d{5}"],
                            ["9(?:4[1568]|5[178])\\d{5}", [8]], 0, 0, ["77[1-9]\\d{5}", [8]], 0, ["78[1-49]\\d{5}", [8]]
                        ]
                    ],
                    MF: ["590", "00", "(?:590|(?:69|80)\\d|976)\\d{6}", [9], 0, "0", 0, 0, 0, 0, 0, [
                        ["590(?:0[079]|[14]3|[27][79]|30|5[0-268]|87)\\d{4}"],
                        ["69(?:0\\d\\d|1(?:2[2-9]|3[0-5]))\\d{4}"],
                        ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["976[01]\\d{5}"]
                    ]],
                    MG: ["261", "00", "[23]\\d{8}", [9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{3})(\\d{2})", "$1 $2 $3 $4", ["[23]"], "0$1"]
                        ], "0", 0, "0|([24-9]\\d{6})$", "20$1", 0, 0, [
                            ["2072[29]\\d{4}|20(?:2\\d|4[47]|5[3467]|6[279]|7[35]|8[268]|9[245])\\d{5}"],
                            ["3[2-489]\\d{7}"], 0, 0, 0, 0, 0, 0, ["22\\d{7}"]
                        ]
                    ],
                    MH: ["692", "011", "329\\d{4}|(?:[256]\\d|45)\\d{5}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1-$2", ["[2-6]"]]
                        ], "1", 0, 0, 0, 0, 0, [
                            ["(?:247|528|625)\\d{4}"],
                            ["(?:(?:23|54)5|329|45[356])\\d{4}"], 0, 0, 0, 0, 0, 0, ["635\\d{4}"]
                        ]
                    ],
                    MK: ["389", "00", "[2-578]\\d{7}", [8],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2|34[47]|4(?:[37]7|5[47]|64)"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[347]"], "0$1"],
                            ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[58]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:2(?:62|77)0|3444)\\d|4[56]440)\\d{3}|(?:34|4[357])700\\d{3}|(?:2(?:[0-3]\\d|5[0-578]|6[01]|82)|3(?:1[3-68]|[23][2-68]|4[23568])|4(?:[23][2-68]|4[3-68]|5[2568]|6[25-8]|7[24-68]|8[4-68]))\\d{5}"],
                            ["7(?:3555|4747|9(?:[019]77|42[0-4]))\\d{3}|7(?:[0-25-8]\\d\\d|3(?:[1-4]\\d|7[01578])|4(?:2\\d|60|7[01578])|9(?:[23]\\d|4[01]|7[015]))\\d{4}"],
                            ["800\\d{5}"],
                            ["5\\d{7}"], 0, 0, 0, 0, 0, ["8(?:0[1-9]|[1-9]\\d)\\d{5}"]
                        ]
                    ],
                    ML: ["223", "00", "[24-9]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:07[0-8]|12[67])\\d{4}|(?:2(?:02|1[4-689])|4(?:0[0-4]|4[1-39]))\\d{5}"],
                            ["2(?:0(?:01|79)|17\\d)\\d{4}|(?:5[01]|[679]\\d|8[2-49])\\d{6}"],
                            ["80\\d{6}"]
                        ]
                    ],
                    MM: ["95", "00", "1\\d{5,7}|95\\d{6}|(?:[4-7]|9[0-46-9])\\d{6,8}|(?:2|8\\d)\\d{5,8}", [6, 7, 8, 9, 10],
                        [
                            ["(\\d)(\\d{2})(\\d{3})", "$1 $2 $3", ["16|2"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[4-7]|8[1-35]"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{4,6})", "$1 $2 $3", ["9(?:2[0-4]|[35-9]|4[137-9])"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["92"], "0$1"],
                            ["(\\d)(\\d{5})(\\d{4})", "$1 $2 $3", ["9"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:(?:2\\d|3[56]|[89][0-6])\\d|4(?:2[2-469]|39|46|6[25]|7[0-3]|83)|6)|2(?:2(?:00|8[34])|4(?:0\\d|2[246]|39|46|62|7[0-3]|83)|51\\d\\d)|4(?:2(?:2\\d\\d|48[0-3])|3(?:20\\d|4(?:70|83)|56)|420\\d|5470)|6(?:0(?:[23]|88\\d)|(?:124|[56]2\\d)\\d|247[23]|3(?:20\\d|470)|4(?:2[04]\\d|47[23])|7(?:(?:3\\d|8[01459])\\d|4(?:39|60|7[013]))))\\d{4}|5(?:2(?:2\\d{5,6}|47[023]\\d{4})|(?:347[23]|4(?:2(?:1|86)|470)|522\\d|6(?:20\\d|483)|7(?:20\\d|48[0-2])|8(?:20\\d|47[02])|9(?:20\\d|47[01]))\\d{4})|7(?:(?:0470|4(?:25\\d|470)|5(?:202|470|96\\d))\\d{4}|1(?:20\\d{4,5}|4(?:70|83)\\d{4}))|8(?:1(?:2\\d{5,6}|4(?:10|7[01]\\d)\\d{3})|2(?:2\\d{5,6}|(?:320|490\\d)\\d{3})|(?:3(?:2\\d\\d|470)|4[24-7]|5(?:2\\d|4[1-9]|51)\\d|6[23])\\d{4})|(?:1[2-6]\\d|4(?:2[24-8]|3[2-7]|[46][2-6]|5[3-5])|5(?:[27][2-8]|3[2-68]|4[24-8]|5[23]|6[2-4]|8[24-7]|9[2-7])|6(?:[19]20|42[03-6]|(?:52|7[45])\\d)|7(?:[04][24-8]|[15][2-7]|22|3[2-4])|8(?:1[2-689]|2[2-8]|[35]2\\d))\\d{4}|25\\d{5,6}|(?:2[2-9]|6(?:1[2356]|[24][2-6]|3[24-6]|5[2-4]|6[2-8]|7[235-7]|8[245]|9[24])|8(?:3[24]|5[245]))\\d{4}", [6, 7, 8, 9]],
                            ["(?:17[01]|9(?:2(?:[0-4]|[56]\\d\\d)|(?:3(?:[0-36]|4\\d)|(?:6\\d|9[4-8])\\d|7(?:3|40|[5-9]\\d)|8(?:78|[89]\\d))\\d|4(?:(?:[0245]\\d|[1379])\\d|88)|5[0-6])\\d)\\d{4}|9[69]1\\d{6}|9(?:[68]\\d|9[089])\\d{5}", [7, 8, 9, 10]],
                            ["80080(?:[01][1-9]|2\\d)\\d{3}", [10]], 0, 0, 0, 0, 0, ["1333\\d{4}|[12]468\\d{4}", [8]]
                        ]
                    ],
                    MN: ["976", "001", "[12]\\d{7,9}|[5-9]\\d{7}", [8, 9, 10],
                        [
                            ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[12]1"], "0$1"],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[5-9]"]],
                            ["(\\d{3})(\\d{5,6})", "$1 $2", ["[12]2[1-3]"], "0$1"],
                            ["(\\d{4})(\\d{5,6})", "$1 $2", ["[12](?:27|3[2-8]|4[2-68]|5[1-4689])", "[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]"], "0$1"],
                            ["(\\d{5})(\\d{4,5})", "$1 $2", ["[12]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["[12]2[1-3]\\d{5,6}|7(?:0[0-5]\\d|128)\\d{4}|(?:[12](?:1|27)|5[368])\\d{6}|[12](?:3[2-8]|4[2-68]|5[1-4689])\\d{6,7}"],
                            ["(?:83[01]|920)\\d{5}|(?:5[05]|6[06]|8[015689]|9[013-9])\\d{6}", [8]], 0, 0, 0, 0, 0, 0, ["712[0-79]\\d{4}|7(?:1[013-9]|[25-8]\\d)\\d{5}", [8]]
                        ]
                    ],
                    MO: ["853", "00", "0800\\d{3}|(?:28|[68]\\d)\\d{6}", [7, 8],
                        [
                            ["(\\d{4})(\\d{3})", "$1 $2", ["0"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[268]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:28[2-9]|8(?:11|[2-57-9]\\d))\\d{5}", [8]],
                            ["6800[0-79]\\d{3}|6(?:[235]\\d\\d|6(?:0[0-5]|[1-9]\\d)|8(?:0[1-9]|[14-8]\\d|2[5-9]|[39][0-4]))\\d{4}", [8]],
                            ["0800\\d{3}", [7]]
                        ]
                    ],
                    MP: ["1", "011", "[58]\\d{9}|(?:67|90)0\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "670$1", 0, "670", [
                        ["670(?:2(?:3[3-7]|56|8[4-8])|32[1-38]|4(?:33|8[348])|5(?:32|55|88)|6(?:64|70|82)|78[3589]|8[3-9]8|989)\\d{4}"],
                        [""],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    MQ: ["596", "00", "(?:69|80)\\d{7}|(?:59|97)6\\d{6}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[569]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["596(?:[03-7]\\d|10|2[7-9]|8[09]|9[4-9])\\d{4}"],
                            ["69(?:6(?:[0-46-9]\\d|5[0-6])|727)\\d{4}"],
                            ["80[0-5]\\d{6}"], 0, 0, 0, 0, 0, ["976(?:6\\d|7[0-367])\\d{4}"]
                        ]
                    ],
                    MR: ["222", "00", "(?:[2-4]\\d\\d|800)\\d{5}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2-48]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:25[08]|35\\d|45[1-7])\\d{5}"],
                            ["[2-4][0-46-9]\\d{6}"],
                            ["800\\d{5}"]
                        ]
                    ],
                    MS: ["1", "011", "(?:[58]\\d\\d|664|900)\\d{7}", [10], 0, "1", 0, "1|([34]\\d{6})$", "664$1", 0, "664", [
                        ["6644(?:1[0-3]|91)\\d{4}"],
                        ["664(?:3(?:49|9[1-6])|49[2-6])\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    MT: ["356", "00", "3550\\d{4}|(?:[2579]\\d\\d|800)\\d{5}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2357-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["20(?:3[1-4]|6[059])\\d{4}|2(?:0[19]|[1-357]\\d|60)\\d{5}"],
                            ["(?:7(?:210|[79]\\d\\d)|9(?:[29]\\d\\d|69[67]|8(?:1[1-3]|89|97)))\\d{4}"],
                            ["800(?:02|[3467]\\d)\\d{3}"],
                            ["5(?:0(?:0(?:37|43)|(?:6\\d|70|9[0168])\\d)|[12]\\d0[1-5])\\d{3}"], 0, 0, ["501\\d{5}"],
                            ["7117\\d{4}"],
                            ["3550\\d{4}"]
                        ]
                    ],
                    MU: ["230", "0(?:0|[24-7]0|3[03])", "(?:5|8\\d\\d)\\d{7}|[2-468]\\d{6}", [7, 8, 10],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-46]|8[013]"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["5"]],
                            ["(\\d{5})(\\d{5})", "$1 $2", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:[0346-8]\\d|1[0-7])|4(?:[013568]\\d|2[4-7])|54(?:[3-5]\\d|71)|6\\d\\d|8(?:14|3[129]))\\d{4}", [7, 8]],
                            ["5(?:4(?:2[1-389]|7[1-9])|87[15-8])\\d{4}|5(?:2[5-9]|4[3-689]|[57]\\d|8[0-689]|9[0-8])\\d{5}", [8]],
                            ["802\\d{7}|80[0-2]\\d{4}", [7, 10]],
                            ["30\\d{5}", [7]], 0, 0, 0, 0, ["3(?:20|9\\d)\\d{4}", [7]]
                        ], "020"
                    ],
                    MV: ["960", "0(?:0|19)", "(?:800|9[0-57-9]\\d)\\d{7}|[34679]\\d{6}", [7, 10],
                        [
                            ["(\\d{3})(\\d{4})", "$1-$2", ["[3467]|9[13-9]"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:3(?:0[0-3]|3[0-59])|6(?:[58][024689]|6[024-68]|7[02468]))\\d{4}", [7]],
                            ["46[46]\\d{4}|(?:7\\d|9[13-9])\\d{5}", [7]],
                            ["800\\d{7}", [10]],
                            ["900\\d{7}", [10]], 0, 0, ["4(?:0[01]|50)\\d{4}", [7]]
                        ], "00"
                    ],
                    MW: ["265", "00", "(?:[1289]\\d|31|77)\\d{7}|1\\d{6}", [7, 9],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["1[2-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[137-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1[2-9]|2[12]\\d\\d)\\d{5}"],
                            ["111\\d{6}|(?:31|77|[89][89])\\d{7}", [9]]
                        ]
                    ],
                    MX: ["52", "0[09]", "1(?:(?:44|99)[1-9]|65[0-689])\\d{7}|(?:1(?:[017]\\d|[235][1-9]|4[0-35-9]|6[0-46-9]|8[1-79]|9[1-8])|[2-9]\\d)\\d{8}", [10, 11],
                        [
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["33|5[56]|81"], 0, 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[2-9]"], 0, 1],
                            ["(\\d)(\\d{2})(\\d{4})(\\d{4})", "$2 $3 $4", ["1(?:33|5[56]|81)"], 0, 1],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{4})", "$2 $3 $4", ["1"], 0, 1]
                        ], "01", 0, "0(?:[12]|4[45])|1", 0, 0, 0, [
                            ["657[12]\\d{6}|(?:2(?:0[01]|2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|6[1-9]|7[12]|8[1-8]|9\\d))\\d{7}", [10]],
                            ["657[12]\\d{6}|(?:1(?:2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[24-7][1-9]|3[1-8]|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|[69][1-9]|7[12]|8[1-8]))|2(?:2[1-9]|3[1-35-8]|4[13-9]|7[1-689]|8[1-578]|9[467])|3(?:1[1-79]|[2458][1-9]|3\\d|7[1-8]|9[1-5])|4(?:1[1-57-9]|[25-7][1-9]|3[1-8]|4\\d|8[1-35-9]|9[2-689])|5(?:[56]\\d|88|9[1-79])|6(?:1[2-68]|[2-4][1-9]|5[1-3689]|6[1-57-9]|7[1-7]|8[67]|9[4-8])|7(?:[1-467][1-9]|5[13-9]|8[1-69]|9[17])|8(?:1\\d|2[13-689]|3[1-6]|4[124-6]|6[1246-9]|7[1-378]|9[12479])|9(?:1[346-9]|2[1-4]|3[2-46-8]|5[1348]|6[1-9]|7[12]|8[1-8]|9\\d))\\d{7}"],
                            ["8(?:00|88)\\d{7}", [10]],
                            ["900\\d{7}", [10]],
                            ["500\\d{7}", [10]], 0, 0, 0, 0, ["300\\d{7}", [10]]
                        ], "00"
                    ],
                    MY: ["60", "00", "1\\d{8,9}|(?:3\\d|[4-9])\\d{7}", [8, 9, 10],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1-$2 $3", ["[4-79]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1-$2 $3", ["1(?:[02469]|[378][1-9]|53)|8", "1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8"], "0$1"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1-$2 $3", ["3"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{2})(\\d{4})", "$1-$2-$3-$4", ["1(?:[367]|80)"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1-$2 $3", ["15"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1-$2 $3", ["1"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:3(?:2[0-36-9]|3[0-368]|4[0-278]|5[0-24-8]|6[0-467]|7[1246-9]|8\\d|9[0-57])\\d|4(?:2[0-689]|[3-79]\\d|8[1-35689])|5(?:2[0-589]|[3468]\\d|5[0-489]|7[1-9]|9[23])|6(?:2[2-9]|3[1357-9]|[46]\\d|5[0-6]|7[0-35-9]|85|9[015-8])|7(?:[2579]\\d|3[03-68]|4[0-8]|6[5-9]|8[0-35-9])|8(?:[24][2-8]|3[2-5]|5[2-7]|6[2-589]|7[2-578]|[89][2-9])|9(?:0[57]|13|[25-7]\\d|[3489][0-8]))\\d{5}", [8, 9]],
                            ["1(?:1888[689]|4400|8(?:47|8[27])[0-4])\\d{4}|1(?:0(?:[23568]\\d|4[0-6]|7[016-9]|9[0-8])|1(?:[1-5]\\d\\d|6(?:0[5-9]|[1-9]\\d)|7(?:[0134]\\d|2[1-9]|5[0-6]))|(?:[269]\\d|[37][1-9]|4[235-9])\\d|5(?:31|9\\d\\d)|8(?:1[23]|[236]\\d|4[06]|5(?:46|[7-9])|7[016-9]|8[01]|9[0-8]))\\d{5}", [9, 10]],
                            ["1[378]00\\d{6}", [10]],
                            ["1600\\d{6}", [10]], 0, 0, 0, 0, ["15(?:4(?:6[0-4]\\d|8(?:0[125]|[17]\\d|21|3[01]|4[01589]|5[014]|6[02]))|6(?:32[0-6]|78\\d))\\d{4}", [10]]
                        ]
                    ],
                    MZ: ["258", "00", "(?:2|8\\d)\\d{7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2|8[2-79]"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:[1346]\\d|5[0-2]|[78][12]|93)\\d{5}", [8]],
                            ["8[2-79]\\d{7}", [9]],
                            ["800\\d{6}", [9]]
                        ]
                    ],
                    NA: ["264", "00", "[68]\\d{7,8}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["88"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["6"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["87"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["64426\\d{3}|6(?:1(?:2[2-7]|3[01378]|4[0-4])|254|32[0237]|4(?:27|41|5[25])|52[236-8]|626|7(?:2[2-4]|30))\\d{4,5}|6(?:1(?:(?:0\\d|2[0189]|3[24-69]|4[5-9])\\d|17|69|7[014])|2(?:17|5[0-36-8]|69|70)|3(?:17|2[14-689]|34|6[289]|7[01]|81)|4(?:17|2[0-2]|4[06]|5[0137]|69|7[01])|5(?:17|2[0459]|69|7[01])|6(?:17|25|38|42|69|7[01])|7(?:17|2[569]|3[13]|6[89]|7[01]))\\d{4}"],
                            ["(?:60|8[1245])\\d{7}", [9]],
                            ["80\\d{7}", [9]],
                            ["8701\\d{5}", [9]], 0, 0, 0, 0, ["8(?:3\\d\\d|86)\\d{5}"]
                        ]
                    ],
                    NC: ["687", "00", "(?:050|[2-57-9]\\d\\d)\\d{3}", [6],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1.$2.$3", ["[02-57-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2[03-9]|3[0-5]|4[1-7]|88)\\d{4}"],
                            ["(?:5[0-4]|[79]\\d|8[0-79])\\d{4}"],
                            ["050\\d{3}"],
                            ["36\\d{4}"]
                        ]
                    ],
                    NE: ["227", "00", "[027-9]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["08"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[089]|2[013]|7[04]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:0(?:20|3[1-8]|4[13-5]|5[14]|6[14578]|7[1-578])|1(?:4[145]|5[14]|6[14-68]|7[169]|88))\\d{4}"],
                            ["(?:23|7[04]|[89]\\d)\\d{6}"],
                            ["08\\d{6}"],
                            ["09\\d{6}"]
                        ]
                    ],
                    NF: ["672", "00", "[13]\\d{5}", [6],
                        [
                            ["(\\d{2})(\\d{4})", "$1 $2", ["1[0-3]"]],
                            ["(\\d)(\\d{5})", "$1 $2", ["[13]"]]
                        ], 0, 0, "([0-258]\\d{4})$", "3$1", 0, 0, [
                            ["(?:1(?:06|17|28|39)|3[0-2]\\d)\\d{3}"],
                            ["(?:14|3[58])\\d{4}"]
                        ]
                    ],
                    NG: ["234", "009", "(?:[124-7]|9\\d{3})\\d{6}|[1-9]\\d{7}|[78]\\d{9,13}", [7, 8, 10, 11, 12, 13, 14],
                        [
                            ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["78"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[12]|9(?:0[3-9]|[1-9])"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["[3-7]|8[2-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[7-9]"], "0$1"],
                            ["(\\d{3})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["[78]"], "0$1"],
                            ["(\\d{3})(\\d{5})(\\d{5,6})", "$1 $2 $3", ["[78]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:[1-356]\\d|4[02-8]|8[2-9])\\d|9(?:0[3-9]|[1-9]\\d))\\d{5}|7(?:0(?:[013-689]\\d|2[0-24-9])\\d{3,4}|[1-79]\\d{6})|(?:[12]\\d|4[147]|5[14579]|6[1578]|7[1-3578])\\d{5}", [7, 8]],
                            ["(?:702[0-24-9]|8(?:01|19)[01])\\d{6}|(?:70[13-689]|8(?:0[2-9]|1[0-8])|9(?:0[1-9]|1[2356]))\\d{7}", [10]],
                            ["800\\d{7,11}", [10, 11, 12, 13, 14]], 0, 0, 0, ["700\\d{7,11}", [10, 11, 12, 13, 14]]
                        ]
                    ],
                    NI: ["505", "00", "(?:1800|[25-8]\\d{3})\\d{4}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[125-8]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2\\d{7}"],
                            ["(?:5(?:5[0-7]|[78]\\d)|6(?:20|3[035]|4[045]|5[05]|77|8[1-9]|9[059])|(?:7[5-8]|8\\d)\\d)\\d{5}"],
                            ["1800\\d{4}"]
                        ]
                    ],
                    NL: ["31", "00", "(?:[124-7]\\d\\d|3(?:[02-9]\\d|1[0-8]))\\d{6}|8\\d{6,9}|9\\d{6,10}|1\\d{4,5}", [5, 6, 7, 8, 9, 10, 11],
                        [
                            ["(\\d{3})(\\d{4,7})", "$1 $2", ["[89]0"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["66"], "0$1"],
                            ["(\\d)(\\d{8})", "$1 $2", ["6"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["1[16-8]|2[259]|3[124]|4[17-9]|5[124679]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-578]|91"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3", ["9"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:[035]\\d|1[13-578]|6[124-8]|7[24]|8[0-467])|2(?:[0346]\\d|2[2-46-9]|5[125]|9[479])|3(?:[03568]\\d|1[3-8]|2[01]|4[1-8])|4(?:[0356]\\d|1[1-368]|7[58]|8[15-8]|9[23579])|5(?:[0358]\\d|[19][1-9]|2[1-57-9]|4[13-8]|6[126]|7[0-3578])|7\\d\\d)\\d{6}", [9]],
                            ["(?:6[1-58]|970\\d)\\d{7}", [9, 11]],
                            ["800\\d{4,7}", [7, 8, 9, 10]],
                            ["90[069]\\d{4,7}", [7, 8, 9, 10]], 0, 0, ["140(?:1[035]|2[0346]|3[03568]|4[0356]|5[0358]|8[458])|(?:140(?:1[16-8]|2[259]|3[124]|4[17-9]|5[124679]|7)|8[478]\\d{6})\\d", [5, 6, 9]],
                            ["66\\d{7}", [9]],
                            ["(?:85|91)\\d{7}", [9]]
                        ]
                    ],
                    NO: ["47", "00", "(?:0|[2-9]\\d{3})\\d{4}", [5, 8],
                        [
                            ["(\\d{3})(\\d{2})(\\d{3})", "$1 $2 $3", ["[489]|59"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[235-7]"]]
                        ], 0, 0, 0, 0, 0, "[02-689]|7[0-8]", [
                            ["(?:2[1-4]|3[1-3578]|5[1-35-7]|6[1-4679]|7[0-8])\\d{6}", [8]],
                            ["(?:4[015-8]|59|9\\d)\\d{6}", [8]],
                            ["80[01]\\d{5}", [8]],
                            ["82[09]\\d{5}", [8]],
                            ["880\\d{5}", [8]], 0, ["(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"], 0, ["85[0-5]\\d{5}", [8]],
                            ["810(?:0[0-6]|[2-8]\\d)\\d{3}", [8]]
                        ]
                    ],
                    NP: ["977", "00", "(?:1\\d|9)\\d{9}|[1-9]\\d{7}", [8, 10, 11],
                        [
                            ["(\\d)(\\d{7})", "$1-$2", ["1[2-6]"], "0$1"],
                            ["(\\d{2})(\\d{6})", "$1-$2", ["1[01]|[2-8]|9(?:[1-59]|[67][2-6])"], "0$1"],
                            ["(\\d{3})(\\d{7})", "$1-$2", ["9"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1[0-6]\\d|99[02-6])\\d{5}|(?:2[13-79]|3[135-8]|4[146-9]|5[135-7]|6[13-9]|7[15-9]|8[1-46-9]|9[1-7])[2-6]\\d{5}", [8]],
                            ["9(?:6[0-3]|7[024-6]|8[0-24-68])\\d{7}", [10]],
                            ["1(?:66001|800\\d\\d)\\d{5}", [11]]
                        ]
                    ],
                    NR: ["674", "00", "(?:444|(?:55|8\\d)\\d|666)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[4-68]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["444\\d{4}"],
                            ["(?:55[3-9]|666|8\\d\\d)\\d{4}"]
                        ]
                    ],
                    NU: ["683", "00", "(?:[47]|888\\d)\\d{3}", [4, 7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["[47]\\d{3}", [4]],
                            ["888[4-9]\\d{3}", [7]]
                        ]
                    ],
                    NZ: ["64", "0(?:0|161)", "[29]\\d{7,9}|50\\d{5}(?:\\d{2,3})?|6[0-35-9]\\d{6}|7\\d{7,8}|8\\d{4,9}|(?:11\\d|[34])\\d{7}", [5, 6, 7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{3,8})", "$1 $2", ["8[1-579]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["50[036-8]|[89]0", "50(?:[0367]|88)|[89]0"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["24|[346]|7[2-57-9]|9[2-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:10|74)|[59]|80"], "0$1"],
                            ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1|2[028]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,5})", "$1 $2 $3", ["2(?:[169]|7[0-35-9])|7|86"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["24099\\d{3}|(?:3[2-79]|[49][2-9]|6[235-9]|7[2-57-9])\\d{6}", [8]],
                            ["2[0-27-9]\\d{7,8}|21\\d{6}", [8, 9, 10]],
                            ["508\\d{6,7}|80\\d{6,8}", [8, 9, 10]],
                            ["(?:11\\d{5}|50(?:0[08]|30|66|77|88))\\d{3}|90\\d{6,8}", [7, 8, 9, 10]],
                            ["70\\d{7}", [9]], 0, ["8(?:1[6-9]|22|3\\d|4[045]|5[459]|7[0-3579]|90)\\d{2,7}"],
                            ["[28]6\\d{6,7}", [8, 9]]
                        ], "00"
                    ],
                    OM: ["968", "00", "(?:1505|[279]\\d{3}|500)\\d{4}|800\\d{5,6}", [7, 8, 9],
                        [
                            ["(\\d{3})(\\d{4,6})", "$1 $2", ["[58]"]],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["2"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[179]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2[2-6]\\d{6}", [8]],
                            ["1505\\d{4}|(?:7(?:[1289]\\d|7[0-4])|9(?:0[1-9]|[1-9]\\d))\\d{5}", [8]],
                            ["8007\\d{4,5}|(?:500|800[05])\\d{4}"],
                            ["900\\d{5}", [8]]
                        ]
                    ],
                    PA: ["507", "00", "(?:00800|8\\d{3})\\d{6}|[68]\\d{7}|[1-57-9]\\d{6}", [7, 8, 10, 11],
                        [
                            ["(\\d{3})(\\d{4})", "$1-$2", ["[1-57-9]"]],
                            ["(\\d{4})(\\d{4})", "$1-$2", ["[68]"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:1(?:0\\d|1[479]|2[37]|3[0137]|4[17]|5[05]|6[58]|7[0167]|8[2358]|9[1389])|2(?:[0235-79]\\d|1[0-7]|4[013-9]|8[02-9])|3(?:[089]\\d|1[0-7]|2[0-5]|33|4[0-79]|5[0-35]|6[068]|7[0-8])|4(?:00|3[0-579]|4\\d|7[0-57-9])|5(?:[01]\\d|2[0-7]|[56]0|79)|7(?:0[09]|2[0-26-8]|3[03]|4[04]|5[05-9]|6[056]|7[0-24-9]|8[5-9]|90)|8(?:09|2[89]|3\\d|4[0-24-689]|5[014]|8[02])|9(?:0[5-9]|1[0135-8]|2[036-9]|3[35-79]|40|5[0457-9]|6[05-9]|7[04-9]|8[35-8]|9\\d))\\d{4}", [7]],
                            ["(?:1[16]1|21[89]|6\\d{3}|8(?:1[01]|7[23]))\\d{4}", [7, 8]],
                            ["800\\d{4,5}|(?:00800|800\\d)\\d{6}"],
                            ["(?:8(?:22|55|60|7[78]|86)|9(?:00|81))\\d{4}", [7]]
                        ]
                    ],
                    PE: ["51", "00|19(?:1[124]|77|90)00", "(?:[14-8]|9\\d)\\d{7}", [8, 9],
                        [
                            ["(\\d{3})(\\d{5})", "$1 $2", ["80"], "(0$1)"],
                            ["(\\d)(\\d{7})", "$1 $2", ["1"], "(0$1)"],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["[4-8]"], "(0$1)"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:4[34]|5[14])[0-8]\\d|7(?:173|3[0-8]\\d)|8(?:10[05689]|6(?:0[06-9]|1[6-9]|29)|7(?:0[569]|[56]0)))\\d{4}|(?:1[0-8]|4[12]|5[236]|6[1-7]|7[246]|8[2-4])\\d{6}", [8]],
                            ["9\\d{8}", [9]],
                            ["800\\d{5}", [8]],
                            ["805\\d{5}", [8]],
                            ["80[24]\\d{5}", [8]], 0, 0, 0, 0, ["801\\d{5}", [8]]
                        ], "00", " Anexo "
                    ],
                    PF: ["689", "00", "4\\d{5}(?:\\d{2})?|8\\d{7,8}", [6, 8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["44"]],
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["4|8[7-9]"]],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["4(?:0[4-689]|9[4-68])\\d{5}", [8]],
                            ["8[7-9]\\d{6}", [8]],
                            ["80[0-5]\\d{6}", [9]], 0, 0, 0, ["44\\d{4}", [6]], 0, ["499\\d{5}", [8]]
                        ]
                    ],
                    PG: ["675", "00|140[1-3]", "(?:180|[78]\\d{3})\\d{4}|(?:[2-589]\\d|64)\\d{5}", [7, 8],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["18|[2-69]|85"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[78]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:(?:3[0-2]|4[257]|5[34]|9[78])\\d|64[1-9]|85[02-46-9])\\d{4}", [7]],
                            ["(?:7\\d|8[128])\\d{6}", [8]],
                            ["180\\d{4}", [7]], 0, 0, 0, 0, ["27[01]\\d{4}", [7]],
                            ["2(?:0[0-57]|7[568])\\d{4}", [7]]
                        ], "00"
                    ],
                    PH: ["63", "00", "(?:[2-7]|9\\d)\\d{8}|2\\d{5}|(?:1800|8)\\d{7,9}", [6, 8, 9, 10, 11, 12, 13],
                        [
                            ["(\\d)(\\d{5})", "$1 $2", ["2"], "(0$1)"],
                            ["(\\d{4})(\\d{4,6})", "$1 $2", ["3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2", "3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))"], "(0$1)"],
                            ["(\\d{5})(\\d{4})", "$1 $2", ["346|4(?:27|9[35])|883", "3469|4(?:279|9(?:30|56))|8834"], "(0$1)"],
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["2"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|8[2-8]"], "(0$1)"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]],
                            ["(\\d{4})(\\d{1,2})(\\d{3})(\\d{4})", "$1 $2 $3 $4", ["1"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:2[3-8]|3[2-68]|4[2-9]|5[2-6]|6[2-58]|7[24578])\\d{3}|88(?:22\\d\\d|42))\\d{4}|(?:2|8[2-8]\\d\\d)\\d{5}", [6, 8, 9, 10]],
                            ["(?:8(?:1[37]|9[5-8])|9(?:0[5-9]|1[0-24-9]|[235-7]\\d|4[2-9]|8[135-9]|9[1-9]))\\d{7}", [10]],
                            ["1800\\d{7,9}", [11, 12, 13]]
                        ]
                    ],
                    PK: ["92", "00", "122\\d{6}|[24-8]\\d{10,11}|9(?:[013-9]\\d{8,10}|2(?:[01]\\d\\d|2(?:[06-8]\\d|1[01]))\\d{7})|(?:[2-8]\\d{3}|92(?:[0-7]\\d|8[1-9]))\\d{6}|[24-9]\\d{8}|[89]\\d{7}", [8, 9, 10, 11, 12],
                        [
                            ["(\\d{3})(\\d{3})(\\d{2,7})", "$1 $2 $3", ["[89]0"], "0$1"],
                            ["(\\d{4})(\\d{5})", "$1 $2", ["1"]],
                            ["(\\d{3})(\\d{6,7})", "$1 $2", ["2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])", "9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]"], "(0$1)"],
                            ["(\\d{2})(\\d{7,8})", "$1 $2", ["(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]"], "(0$1)"],
                            ["(\\d{5})(\\d{5})", "$1 $2", ["58"], "(0$1)"],
                            ["(\\d{3})(\\d{7})", "$1 $2", ["3"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91"], "(0$1)"],
                            ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[24-9]"], "(0$1)"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:21|42)[2-9]|58[126])\\d{7}|(?:2[25]|4[0146-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\\d{6,7}|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8]))[2-9]\\d{5,6}", [9, 10]],
                            ["3(?:[0-24]\\d|3[0-7]|55|64)\\d{7}", [10]],
                            ["800\\d{5}(?:\\d{3})?", [8, 11]],
                            ["900\\d{5}", [8]],
                            ["122\\d{6}", [9]], 0, ["(?:2(?:[125]|3[2358]|4[2-4]|9[2-8])|4(?:[0-246-9]|5[3479])|5(?:[1-35-7]|4[2-467])|6(?:0[468]|[1-8])|7(?:[14]|2[236])|8(?:[16]|2[2-689]|3[23578]|4[3478]|5[2356])|9(?:1|22|3[27-9]|4[2-6]|6[3569]|9[2-7]))111\\d{6}", [11, 12]]
                        ]
                    ],
                    PL: ["48", "00", "(?:6|8\\d\\d)\\d{7}|[1-9]\\d{6}(?:\\d{2})?|[26]\\d{5}", [6, 7, 8, 9, 10],
                        [
                            ["(\\d{5})", "$1", ["19"]],
                            ["(\\d{3})(\\d{3})", "$1 $2", ["11|20|64"]],
                            ["(\\d{2})(\\d{2})(\\d{3})", "$1 $2 $3", ["(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1", "(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19"]],
                            ["(\\d{3})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["64"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)"]],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["1[2-8]|[2-7]|8[1-79]|9[145]"]],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["47\\d{7}|(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])(?:[02-9]\\d{6}|1(?:[0-8]\\d{5}|9\\d{3}(?:\\d{2})?))", [7, 9]],
                            ["21(?:1(?:[145]\\d|3[1-5])|2[0-4]\\d)\\d{4}|(?:45|5[0137]|6[069]|7[2389]|88)\\d{7}", [9]],
                            ["800\\d{6,7}", [9, 10]],
                            ["70[01346-8]\\d{6}", [9]], 0, 0, ["804\\d{6}", [9]],
                            ["64\\d{4,7}", [6, 7, 8, 9]],
                            ["39\\d{7}", [9]],
                            ["801\\d{6}", [9]]
                        ]
                    ],
                    PM: ["508", "00", "(?:[45]|80\\d\\d)\\d{5}", [6, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[45]"], "0$1"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:4[1-356]|50)\\d{4}", [6]],
                            ["(?:4[02-4]|5[056])\\d{4}", [6]],
                            ["80[0-5]\\d{6}", [9]]
                        ]
                    ],
                    PR: ["1", "011", "(?:[589]\\d\\d|787)\\d{7}", [10], 0, "1", 0, 0, 0, 0, "787|939", [
                        ["(?:787|939)[2-9]\\d{6}"],
                        [""],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    PS: ["970", "00", "[2489]2\\d{6}|(?:1\\d|5)\\d{8}", [8, 9, 10],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["[2489]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["5"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:22[2-47-9]|42[45]|82[014-68]|92[3569])\\d{5}", [8]],
                            ["5[69]\\d{7}", [9]],
                            ["1800\\d{6}", [10]], 0, 0, 0, 0, 0, 0, ["1700\\d{6}", [10]]
                        ]
                    ],
                    PT: ["351", "00", "1693\\d{5}|(?:[26-9]\\d|30)\\d{7}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["2[12]"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["16|[236-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:[12]\\d|3[1-689]|4[1-59]|[57][1-9]|6[1-35689]|8[1-69]|9[1256])\\d{6}"],
                            ["6(?:[06]92(?:30|9\\d)|[35]92(?:3[03]|9\\d))\\d{3}|(?:(?:16|6[0356])93|9(?:[1-36]\\d\\d|480))\\d{5}"],
                            ["80[02]\\d{6}"],
                            ["(?:6(?:0[178]|4[68])\\d|76(?:0[1-57]|1[2-47]|2[237]))\\d{5}"],
                            ["884[0-4689]\\d{5}"], 0, ["70(?:7\\d|8[17])\\d{5}"],
                            ["6222\\d{5}"],
                            ["30\\d{7}"],
                            ["80(?:8\\d|9[1579])\\d{5}"]
                        ]
                    ],
                    PW: ["680", "01[12]", "(?:[24-8]\\d\\d|345|900)\\d{4}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2(?:55|77)|345|488|5(?:35|44|87)|6(?:22|54|79)|7(?:33|47)|8(?:24|55|76)|900)\\d{4}"],
                            ["(?:(?:46|83)[0-5]|6[2-4689]0)\\d{4}|(?:45|77|88)\\d{5}"]
                        ]
                    ],
                    PY: ["595", "00", "59\\d{4,6}|9\\d{5,10}|(?:[2-46-8]\\d|5[0-8])\\d{4,7}", [6, 7, 8, 9, 10, 11],
                        [
                            ["(\\d{3})(\\d{3,6})", "$1 $2", ["[2-9]0"], "0$1"],
                            ["(\\d{2})(\\d{5})", "$1 $2", ["[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]"], "(0$1)"],
                            ["(\\d{3})(\\d{4,5})", "$1 $2", ["2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["87"]],
                            ["(\\d{3})(\\d{6})", "$1 $2", ["9(?:[5-79]|8[1-6])"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-8]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["9"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36])\\d{5,7}|(?:2(?:2[4-68]|[4-68]\\d|7[15]|9[1-5])|3(?:18|3[167]|4[2357]|51|[67]\\d)|4(?:3[12]|5[13]|9[1-47])|5(?:[1-4]\\d|5[02-4])|6(?:3[1-3]|44|7[1-8])|7(?:4[0-4]|5\\d|6[1-578]|75|8[0-8])|858)\\d{5,6}", [7, 8, 9]],
                            ["9(?:51|6[129]|[78][1-6]|9[1-5])\\d{6}", [9]],
                            ["9800\\d{5,7}", [9, 10, 11]], 0, 0, 0, ["[2-9]0\\d{4,7}", [6, 7, 8, 9]], 0, ["8700[0-4]\\d{4}", [9]]
                        ]
                    ],
                    QA: ["974", "00", "[2-7]\\d{7}|800\\d{4}(?:\\d{2})?|2\\d{6}", [7, 8, 9],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["2[126]|8"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[2-7]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["414[1-4]\\d{4}|(?:23|4[04])\\d{6}", [8]],
                            ["(?:2[89]|[35-7]\\d)\\d{6}", [8]],
                            ["800\\d{4}(?:\\d{2})?", [7, 9]], 0, 0, 0, 0, ["2(?:[12]\\d|61)\\d{4}", [7]]
                        ]
                    ],
                    RE: ["262", "00", "976\\d{6}|(?:26|[68]\\d)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2689]"], "0$1"]
                        ], "0", 0, 0, 0, 0, "26[23]|69|[89]", [
                            ["26(?:2\\d\\d|3(?:0\\d|1[01]))\\d{4}"],
                            ["(?:69(?:2\\d\\d|3(?:0[0-46]|1[013]|2[0-2]|3[0-39]|4\\d|5[0-5]|6[0-6]|7[0-27]|8[0-8]|9[0-479]))|976(?:2[27]|3[0-37]|9\\d))\\d{4}"],
                            ["80\\d{7}"],
                            ["89[1-37-9]\\d{6}"], 0, 0, 0, 0, 0, ["8(?:1[019]|2[0156]|84|90)\\d{6}"]
                        ]
                    ],
                    RO: ["40", "00", "(?:[2378]\\d|90)\\d{7}|[23]\\d{5}", [6, 9],
                        [
                            ["(\\d{3})(\\d{3})", "$1 $2", ["2[3-6]", "2[3-6]\\d9"], "0$1"],
                            ["(\\d{2})(\\d{4})", "$1 $2", ["219|31"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[23]1"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[237-9]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["[23][13-6]\\d{7}|(?:2(?:19\\d|[3-6]\\d9)|31\\d\\d)\\d\\d"],
                            ["7020\\d{5}|7(?:0[013-9]|1[0-3]|[2-7]\\d|8[03-8]|9[019])\\d{6}", [9]],
                            ["800\\d{6}", [9]],
                            ["90[0136]\\d{6}", [9]], 0, 0, ["(?:37\\d|80[578])\\d{6}", [9]], 0, 0, ["801\\d{6}", [9]]
                        ], 0, " int "
                    ],
                    RS: ["381", "00", "38[02-9]\\d{6,9}|6\\d{7,9}|90\\d{4,8}|38\\d{5,6}|(?:7\\d\\d|800)\\d{3,9}|(?:[12]\\d|3[0-79])\\d{5,10}", [6, 7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d{3})(\\d{3,9})", "$1 $2", ["(?:2[389]|39)0|[7-9]"], "0$1"],
                            ["(\\d{2})(\\d{5,10})", "$1 $2", ["[1-36]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:11[1-9]\\d|(?:2[389]|39)(?:0[2-9]|[2-9]\\d))\\d{3,8}|(?:1[02-9]|2[0-24-7]|3[0-8])[2-9]\\d{4,9}", [7, 8, 9, 10, 11, 12]],
                            ["6(?:[0-689]|7\\d)\\d{6,7}", [8, 9, 10]],
                            ["800\\d{3,9}"],
                            ["(?:78\\d|90[0169])\\d{3,7}", [6, 7, 8, 9, 10]], 0, 0, ["7[06]\\d{4,10}"]
                        ]
                    ],
                    RU: ["7", "810", "8\\d{13}|[347-9]\\d{9}", [10, 14],
                        [
                            ["(\\d{4})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-8]|2[1-9])", "7(?:1(?:[0-6]2|7|8[27])|2(?:1[23]|[2-9]2))", "7(?:1(?:[0-6]2|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2"], "8 ($1)", 1],
                            ["(\\d{5})(\\d)(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["7(?:1[0-68]|2[1-9])", "7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))", "7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]"], "8 ($1)", 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "8 ($1)", 1],
                            ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[349]|8(?:[02-7]|1[1-8])"], "8 ($1)", 1],
                            ["(\\d{4})(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["8"], "8 ($1)"]
                        ], "8", 0, 0, 0, 0, "3[04-689]|[489]", [
                            ["(?:3(?:0[12]|4[1-35-79]|5[1-3]|65|8[1-58]|9[0145])|4(?:01|1[1356]|2[13467]|7[1-5]|8[1-7]|9[1-689])|8(?:1[1-8]|2[01]|3[13-6]|4[0-8]|5[15]|6[1-35-79]|7[1-37-9]))\\d{7}", [10]],
                            ["9\\d{9}", [10]],
                            ["8(?:0[04]|108\\d{3})\\d{7}"],
                            ["80[39]\\d{7}", [10]],
                            ["808\\d{7}", [10]]
                        ], "8~10"
                    ],
                    RW: ["250", "00", "(?:06|[27]\\d\\d|[89]00)\\d{6}", [8, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["0"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[7-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["2"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:06|2[23568]\\d)\\d{6}"],
                            ["7[2389]\\d{7}", [9]],
                            ["800\\d{6}", [9]],
                            ["900\\d{6}", [9]]
                        ]
                    ],
                    SA: ["966", "00", "92\\d{7}|(?:[15]|8\\d)\\d{8}", [9, 10],
                        [
                            ["(\\d{4})(\\d{5})", "$1 $2", ["9"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["5"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["81"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1(?:1\\d|2[24-8]|3[35-8]|4[3-68]|6[2-5]|7[235-7])\\d{6}", [9]],
                            ["579[01]\\d{5}|5(?:[013-689]\\d|7[0-35-8])\\d{6}", [9]],
                            ["800\\d{7}", [10]],
                            ["925\\d{6}", [9]], 0, 0, ["811\\d{7}", [10]], 0, 0, ["920\\d{6}", [9]]
                        ]
                    ],
                    SB: ["677", "0[01]", "(?:[1-6]|[7-9]\\d\\d)\\d{4}", [5, 7],
                        [
                            ["(\\d{2})(\\d{5})", "$1 $2", ["7|8[4-9]|9(?:[1-8]|9[0-8])"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:1[4-79]|[23]\\d|4[0-2]|5[03]|6[0-37])\\d{3}", [5]],
                            ["48\\d{3}|(?:(?:7[1-9]|8[4-9])\\d|9(?:1[2-9]|2[013-9]|3[0-2]|[46]\\d|5[0-46-9]|7[0-689]|8[0-79]|9[0-8]))\\d{4}"],
                            ["1[38]\\d{3}", [5]], 0, 0, 0, 0, 0, ["5[12]\\d{3}", [5]]
                        ]
                    ],
                    SC: ["248", "010|0[0-2]", "800\\d{4}|(?:[249]\\d|64)\\d{5}", [7],
                        [
                            ["(\\d)(\\d{3})(\\d{3})", "$1 $2 $3", ["[246]|9[57]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["4[2-46]\\d{5}"],
                            ["2[125-8]\\d{5}"],
                            ["800[08]\\d{3}"], 0, 0, 0, 0, 0, ["971\\d{4}|(?:64|95)\\d{5}"]
                        ], "00"
                    ],
                    SD: ["249", "00", "[19]\\d{8}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[19]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1(?:5\\d|8[35-7])\\d{6}"],
                            ["(?:1[0-2]|9[0-3569])\\d{7}"]
                        ]
                    ],
                    SE: ["46", "00", "(?:[26]\\d\\d|9)\\d{9}|[1-9]\\d{8}|[1-689]\\d{7}|[1-4689]\\d{6}|2\\d{5}", [6, 7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["20"], "0$1", 0, "$1 $2 $3"],
                            ["(\\d{3})(\\d{4})", "$1-$2", ["9(?:00|39|44|9)"], "0$1", 0, "$1 $2"],
                            ["(\\d{2})(\\d{3})(\\d{2})", "$1-$2 $3", ["[12][136]|3[356]|4[0246]|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3"],
                            ["(\\d)(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d{3})(\\d{2,3})(\\d{2})", "$1-$2 $3", ["1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3"],
                            ["(\\d{3})(\\d{2,3})(\\d{3})", "$1-$2 $3", ["9(?:00|39|44)"], "0$1", 0, "$1 $2 $3"],
                            ["(\\d{2})(\\d{2,3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["10|7"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1-$2 $3 $4", ["8"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1-$2 $3 $4", ["[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{3})", "$1-$2 $3 $4", ["9"], "0$1", 0, "$1 $2 $3 $4"],
                            ["(\\d{3})(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1-$2 $3 $4 $5", ["[26]"], "0$1", 0, "$1 $2 $3 $4 $5"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:(?:[12][136]|3[356]|4[0246]|6[03]|8\\d)\\d|90[1-9])\\d{4,6}|(?:1(?:2[0-35]|4[0-4]|5[0-25-9]|7[13-6]|[89]\\d)|2(?:2[0-7]|4[0136-8]|5[0138]|7[018]|8[01]|9[0-57])|3(?:0[0-4]|1\\d|2[0-25]|4[056]|7[0-2]|8[0-3]|9[023])|4(?:1[013-8]|3[0135]|5[14-79]|7[0-246-9]|8[0156]|9[0-689])|5(?:0[0-6]|[15][0-5]|2[0-68]|3[0-4]|4\\d|6[03-5]|7[013]|8[0-79]|9[01])|6(?:1[1-3]|2[0-4]|4[02-57]|5[0-37]|6[0-3]|7[0-2]|8[0247]|9[0-356])|9(?:1[0-68]|2\\d|3[02-5]|4[0-3]|5[0-4]|[68][01]|7[0135-8]))\\d{5,6}", [7, 8, 9]],
                            ["7[02369]\\d{7}", [9]],
                            ["20\\d{4,7}", [6, 7, 8, 9]],
                            ["649\\d{6}|99[1-59]\\d{4}(?:\\d{3})?|9(?:00|39|44)[1-8]\\d{3,6}", [7, 8, 9, 10]],
                            ["75[1-8]\\d{6}", [9]], 0, ["10[1-8]\\d{6}", [9]],
                            ["74[02-9]\\d{6}", [9]], 0, ["77[0-7]\\d{6}", [9]]
                        ]
                    ],
                    SG: ["65", "0[0-3]\\d", "(?:(?:1\\d|8)\\d\\d|7000)\\d{7}|[3689]\\d{7}", [8, 10, 11],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[369]|8(?:0[1-5]|[1-9])"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"]],
                            ["(\\d{4})(\\d{4})(\\d{3})", "$1 $2 $3", ["7"]],
                            ["(\\d{4})(\\d{3})(\\d{4})", "$1 $2 $3", ["1"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["662[0-24-9]\\d{4}|6(?:[0-578]\\d|6[013-57-9]|9[0-35-9])\\d{5}", [8]],
                            ["8(?:05[0-7]|95[0-2])\\d{4}|(?:8(?:0[1-4]|[1-8]\\d|9[0-4])|9[0-8]\\d)\\d{5}", [8]],
                            ["(?:18|8)00\\d{7}", [10, 11]],
                            ["1900\\d{7}", [11]], 0, 0, ["7000\\d{7}", [11]], 0, ["(?:3[12]\\d|666)\\d{5}", [8]]
                        ]
                    ],
                    SH: ["290", "00", "(?:[256]\\d|8)\\d{3}", [4, 5], 0, 0, 0, 0, 0, 0, "[256]", [
                        ["2(?:[0-57-9]\\d|6[4-9])\\d\\d"],
                        ["[56]\\d{4}", [5]], 0, 0, 0, 0, 0, 0, ["262\\d\\d", [5]]
                    ]],
                    SI: ["386", "00|10(?:22|66|88|99)", "[1-7]\\d{7}|8\\d{4,7}|90\\d{4,6}", [5, 6, 7, 8],
                        [
                            ["(\\d{2})(\\d{3,6})", "$1 $2", ["8[09]|9"], "0$1"],
                            ["(\\d{3})(\\d{5})", "$1 $2", ["59|8"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[37][01]|4[0139]|51|6"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[1-57]"], "(0$1)"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:[1-357][2-8]|4[24-8])\\d{6}", [8]],
                            ["65(?:1\\d|55|6[01]|70)\\d{4}|(?:[37][01]|4[0139]|51|6[489])\\d{6}", [8]],
                            ["80\\d{4,6}", [6, 7, 8]],
                            ["89[1-3]\\d{2,5}|90\\d{4,6}"], 0, 0, 0, 0, ["(?:59\\d\\d|8(?:1(?:[67]\\d|8[0-589])|2(?:0\\d|2[0-37-9]|8[0-2489])|3[389]\\d))\\d{4}", [8]]
                        ], "00"
                    ],
                    SJ: ["47", "00", "0\\d{4}|(?:[489]\\d|[57]9)\\d{6}", [5, 8], 0, 0, 0, 0, 0, 0, "79", [
                        ["79\\d{6}", [8]],
                        ["(?:4[015-8]|59|9\\d)\\d{6}", [8]],
                        ["80[01]\\d{5}", [8]],
                        ["82[09]\\d{5}", [8]],
                        ["880\\d{5}", [8]], 0, ["(?:0[2-9]|81(?:0(?:0[7-9]|1\\d)|5\\d\\d))\\d{3}"], 0, ["85[0-5]\\d{5}", [8]],
                        ["810(?:0[0-6]|[2-8]\\d)\\d{3}", [8]]
                    ]],
                    SK: ["421", "00", "[2-689]\\d{8}|[2-59]\\d{6}|[2-5]\\d{5}", [6, 7, 9],
                        [
                            ["(\\d)(\\d{2})(\\d{3,4})", "$1 $2 $3", ["21"], "0$1"],
                            ["(\\d{2})(\\d{2})(\\d{2,3})", "$1 $2 $3", ["[3-5][1-8]1", "[3-5][1-8]1[67]"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{3})(\\d{2})", "$1/$2 $3 $4", ["2"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[689]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1/$2 $3 $4", ["[3-5]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2(?:16|[2-9]\\d{3})|(?:(?:[3-5][1-8]\\d|819)\\d|601[1-5])\\d)\\d{4}|(?:2|[3-5][1-8])1[67]\\d{3}|[3-5][1-8]16\\d\\d"],
                            ["909[1-9]\\d{5}|9(?:0[1-8]|1[0-24-9]|4[03-57-9]|5\\d)\\d{6}", [9]],
                            ["800\\d{6}", [9]],
                            ["9(?:00|[78]\\d)\\d{6}", [9]], 0, 0, ["96\\d{7}", [9]],
                            ["9090\\d{3}", [7]],
                            ["6(?:02|5[0-4]|9[0-6])\\d{6}", [9]],
                            ["8[5-9]\\d{7}", [9]]
                        ]
                    ],
                    SL: ["232", "00", "(?:[237-9]\\d|66)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{6})", "$1 $2", ["[236-9]"], "(0$1)"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["22[2-4][2-9]\\d{4}"],
                            ["(?:25|3[0-5]|66|7[2-9]|8[08]|9[09])\\d{6}"]
                        ]
                    ],
                    SM: ["378", "00", "(?:0549|[5-7]\\d)\\d{6}", [8, 10],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[5-7]"]],
                            ["(\\d{4})(\\d{6})", "$1 $2", ["0"]]
                        ], 0, 0, "([89]\\d{5})$", "0549$1", 0, 0, [
                            ["0549(?:8[0157-9]|9\\d)\\d{4}", [10]],
                            ["6[16]\\d{6}", [8]], 0, ["7[178]\\d{6}", [8]], 0, 0, 0, 0, ["5[158]\\d{6}", [8]]
                        ]
                    ],
                    SN: ["221", "00", "(?:[378]\\d|93)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[379]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["3(?:0(?:1[0-2]|80)|282|3(?:8[1-9]|9[3-9])|611)\\d{5}"],
                            ["7(?:(?:[06-8]\\d|21|90)\\d|5(?:01|[19]0|25|[38]3|[4-7]\\d))\\d{5}"],
                            ["800\\d{6}"],
                            ["88[4689]\\d{6}"], 0, 0, 0, 0, ["(?:3(?:392|9[01]\\d)\\d|93(?:3[13]0|929))\\d{4}"],
                            ["81[02468]\\d{6}"]
                        ]
                    ],
                    SO: ["252", "00", "[346-9]\\d{8}|[12679]\\d{7}|[1-5]\\d{6}|[1348]\\d{5}", [6, 7, 8, 9],
                        [
                            ["(\\d{2})(\\d{4})", "$1 $2", ["8[125]"]],
                            ["(\\d{6})", "$1", ["[134]"]],
                            ["(\\d)(\\d{6})", "$1 $2", ["[15]|2[0-79]|3[0-46-8]|4[0-7]"]],
                            ["(\\d)(\\d{7})", "$1 $2", ["24|[67]"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3478]|64|90"]],
                            ["(\\d{2})(\\d{5,7})", "$1 $2", ["1|28|6(?:0[5-7]|[1-35-9])|9[2-9]"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1\\d|2[0-79]|3[0-46-8]|4[0-7]|5[57-9])\\d{5}|(?:[134]\\d|8[125])\\d{4}", [6, 7]],
                            ["(?:(?:15|(?:3[59]|4[89]|79|8[08])\\d|6(?:0[5-7]|[1-9]\\d)|9(?:0\\d|[2-9]))\\d|2(?:4\\d|8))\\d{5}|[67]\\d{7}", [7, 8, 9]]
                        ]
                    ],
                    SR: ["597", "00", "(?:[2-5]|68|[78]\\d)\\d{5}", [6, 7],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1-$2-$3", ["56"]],
                            ["(\\d{3})(\\d{3})", "$1-$2", ["[2-5]"]],
                            ["(\\d{3})(\\d{4})", "$1-$2", ["[6-8]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2[1-3]|3[0-7]|(?:4|68)\\d|5[2-58])\\d{4}"],
                            ["(?:7[124-7]|8[124-9])\\d{5}", [7]], 0, 0, 0, 0, 0, 0, ["56\\d{4}", [6]]
                        ]
                    ],
                    SS: ["211", "00", "[19]\\d{8}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[19]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["1[89]\\d{7}"],
                            ["(?:12|9[1257-9])\\d{7}"]
                        ]
                    ],
                    ST: ["239", "00", "(?:22|9\\d)\\d{5}", [7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[29]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["22\\d{5}"],
                            ["900[5-9]\\d{3}|9(?:0[1-9]|[89]\\d)\\d{4}"]
                        ]
                    ],
                    SV: ["503", "00", "[267]\\d{7}|[89]00\\d{4}(?:\\d{4})?", [7, 8, 11],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[89]"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[267]"]],
                            ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["[89]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:[1-6]\\d{3}|[79]90[034]|890[0245])\\d{3}", [8]],
                            ["66(?:[02-9]\\d\\d|1(?:[02-9]\\d|16))\\d{3}|(?:6[0-57-9]|7\\d)\\d{6}", [8]],
                            ["800\\d{4}(?:\\d{4})?", [7, 11]],
                            ["900\\d{4}(?:\\d{4})?", [7, 11]]
                        ]
                    ],
                    SX: ["1", "011", "7215\\d{6}|(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|(5\\d{6})$", "721$1", 0, "721", [
                        ["7215(?:4[2-8]|8[239]|9[056])\\d{4}"],
                        ["7215(?:1[02]|2\\d|5[034679]|8[014-8])\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    SY: ["963", "00", "[1-39]\\d{8}|[1-5]\\d{7}", [8, 9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-5]"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1", 1]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["21\\d{6,7}|(?:1(?:[14]\\d|[2356])|2[235]|3(?:[13]\\d|4)|4[134]|5[1-3])\\d{6}"],
                            ["9[1-689]\\d{7}", [9]]
                        ]
                    ],
                    SZ: ["268", "00", "0800\\d{4}|(?:[237]\\d|900)\\d{6}", [8, 9],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[0237]"]],
                            ["(\\d{5})(\\d{4})", "$1 $2", ["9"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["[23][2-5]\\d{6}", [8]],
                            ["7[6-9]\\d{6}", [8]],
                            ["0800\\d{4}", [8]],
                            ["900\\d{6}", [9]], 0, 0, 0, 0, ["70\\d{6}", [8]]
                        ]
                    ],
                    TA: ["290", "00", "8\\d{3}", [4], 0, 0, 0, 0, 0, 0, "8", [
                        ["8\\d{3}"]
                    ]],
                    TC: ["1", "011", "(?:[58]\\d\\d|649|900)\\d{7}", [10], 0, "1", 0, "1|([2-479]\\d{6})$", "649$1", 0, "649", [
                        ["649(?:266|712|9(?:4\\d|50))\\d{4}"],
                        ["649(?:2(?:3[129]|4[1-79])|3\\d\\d|4[34][1-3])\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, 0, ["649(?:71[01]|966)\\d{4}"]
                    ]],
                    TD: ["235", "00|16", "(?:22|[69]\\d|77)\\d{6}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[2679]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["22(?:[37-9]0|5[0-5]|6[89])\\d{4}"],
                            ["(?:6[023568]|77|9\\d)\\d{6}"]
                        ], "00"
                    ],
                    TG: ["228", "00", "[279]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[279]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2(?:2[2-7]|3[23]|4[45]|55|6[67]|77)\\d{5}"],
                            ["(?:7[09]|9[0-36-9])\\d{6}"]
                        ]
                    ],
                    TH: ["66", "00[1-9]", "(?:001800|[2-57]|[689]\\d)\\d{7}|1\\d{7,9}", [8, 9, 10, 13],
                        [
                            ["(\\d)(\\d{3})(\\d{4})", "$1 $2 $3", ["2"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[13-9]"], "0$1"],
                            ["(\\d{4})(\\d{3})(\\d{3})", "$1 $2 $3", ["1"]]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1[0689]|2\\d|3[2-9]|4[2-5]|5[2-6]|7[3-7])\\d{6}", [8]],
                            ["671[0-8]\\d{5}|(?:14|6[1-6]|[89]\\d)\\d{7}", [9]],
                            ["(?:001800\\d|1800)\\d{6}", [10, 13]],
                            ["1900\\d{6}", [10]], 0, 0, 0, 0, ["6[08]\\d{7}", [9]]
                        ]
                    ],
                    TJ: ["992", "810", "(?:00|[1-57-9]\\d)\\d{7}", [9],
                        [
                            ["(\\d{6})(\\d)(\\d{2})", "$1 $2 $3", ["331", "3317"]],
                            ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[34]7|91[78]"]],
                            ["(\\d{4})(\\d)(\\d{4})", "$1 $2 $3", ["3[1-5]"]],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[0-57-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:3(?:1[3-5]|2[245]|3[12]|4[24-7]|5[25]|72)|4(?:46|74|87))\\d{6}"],
                            ["41[18]\\d{6}|(?:[034]0|[17][017]|2[02]|5[05]|8[08]|9\\d)\\d{7}"]
                        ], "8~10"
                    ],
                    TK: ["690", "00", "[2-47]\\d{3,6}", [4, 5, 6, 7], 0, 0, 0, 0, 0, 0, 0, [
                        ["(?:2[2-4]|[34]\\d)\\d{2,5}"],
                        ["7[2-4]\\d{2,5}"]
                    ]],
                    TL: ["670", "00", "7\\d{7}|(?:[2-47]\\d|[89]0)\\d{5}", [7, 8],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[2-489]|70"]],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["7"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2[1-5]|3[1-9]|4[1-4])\\d{5}", [7]],
                            ["7[2-8]\\d{6}", [8]],
                            ["80\\d{5}", [7]],
                            ["90\\d{5}", [7]],
                            ["70\\d{5}", [7]]
                        ]
                    ],
                    TM: ["993", "810", "[1-6]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["12"], "(8 $1)"],
                            ["(\\d{3})(\\d)(\\d{2})(\\d{2})", "$1 $2-$3-$4", ["[1-5]"], "(8 $1)"],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["6"], "8 $1"]
                        ], "8", 0, 0, 0, 0, 0, [
                            ["(?:1(?:2\\d|3[1-9])|2(?:22|4[0-35-8])|3(?:22|4[03-9])|4(?:22|3[128]|4\\d|6[15])|5(?:22|5[7-9]|6[014-689]))\\d{5}"],
                            ["6\\d{7}"]
                        ], "8~10"
                    ],
                    TN: ["216", "00", "[2-57-9]\\d{7}", [8],
                        [
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-57-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["81200\\d{3}|(?:3[0-2]|7\\d)\\d{6}"],
                            ["3(?:001|[12]40)\\d{4}|(?:(?:[259]\\d|4[0-7])\\d|3(?:1[1-35]|6[0-4]|91))\\d{5}"],
                            ["8010\\d{4}"],
                            ["88\\d{6}"], 0, 0, 0, 0, 0, ["8[12]10\\d{4}"]
                        ]
                    ],
                    TO: ["676", "00", "(?:0800|(?:[5-8]\\d\\d|999)\\d)\\d{3}|[2-8]\\d{4}", [5, 7],
                        [
                            ["(\\d{2})(\\d{3})", "$1-$2", ["[2-4]|50|6[09]|7[0-24-69]|8[05]"]],
                            ["(\\d{4})(\\d{3})", "$1 $2", ["0"]],
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[5-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:2\\d|3[0-8]|4[0-4]|50|6[09]|7[0-24-69]|8[05])\\d{3}", [5]],
                            ["(?:55[4-6]|6(?:[09]\\d|3[02]|8[15-9])|(?:7\\d|8[46-9])\\d|999)\\d{4}", [7]],
                            ["0800\\d{3}", [7]], 0, 0, 0, 0, 0, ["55[0-37-9]\\d{4}", [7]]
                        ]
                    ],
                    TR: ["90", "00", "4\\d{6}|8\\d{11,12}|(?:[2-58]\\d\\d|900)\\d{7}", [7, 10, 12, 13],
                        [
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["512|8[01589]|90"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["5(?:[0-59]|61)", "5(?:[0-59]|616)", "5(?:[0-59]|6161)"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[24][1-8]|3[1-9]"], "(0$1)", 1],
                            ["(\\d{3})(\\d{3})(\\d{6,7})", "$1 $2 $3", ["80"], "0$1", 1]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2(?:[13][26]|[28][2468]|[45][268]|[67][246])|3(?:[13][28]|[24-6][2468]|[78][02468]|92)|4(?:[16][246]|[23578][2468]|4[26]))\\d{7}", [10]],
                            ["56161\\d{5}|5(?:0[15-7]|1[06]|24|[34]\\d|5[1-59]|9[46])\\d{7}", [10]],
                            ["8(?:00\\d{7}(?:\\d{2,3})?|11\\d{7})", [10, 12, 13]],
                            ["(?:8[89]8|900)\\d{7}", [10]],
                            ["592(?:21[12]|461)\\d{4}", [10]], 0, ["444\\d{4}", [7]],
                            ["512\\d{7}", [10]],
                            ["850\\d{7}", [10]]
                        ]
                    ],
                    TT: ["1", "011", "(?:[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-46-8]\\d{6})$", "868$1", 0, "868", [
                        ["868(?:2(?:01|1[5-9]|[23]\\d|4[0-2])|6(?:0[7-9]|1[02-8]|2[1-9]|[3-69]\\d|7[0-79])|82[124])\\d{4}"],
                        ["868(?:(?:2[5-9]|3\\d)\\d|4(?:3[0-6]|[6-9]\\d)|6(?:20|78|8\\d)|7(?:0[1-9]|1[02-9]|[2-9]\\d))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    TV: ["688", "00", "(?:2|7\\d\\d|90)\\d{4}", [5, 6, 7],
                        [
                            ["(\\d{2})(\\d{3})", "$1 $2", ["2"]],
                            ["(\\d{2})(\\d{4})", "$1 $2", ["90"]],
                            ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["2[02-9]\\d{3}", [5]],
                            ["(?:7[01]\\d|90)\\d{4}", [6, 7]]
                        ]
                    ],
                    TW: ["886", "0(?:0[25-79]|19)", "[2-689]\\d{8}|7\\d{9,10}|[2-8]\\d{7}|2\\d{6}", [7, 8, 9, 10, 11],
                        [
                            ["(\\d{2})(\\d)(\\d{4})", "$1 $2 $3", ["202"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[258]0"], "0$1"],
                            ["(\\d)(\\d{3,4})(\\d{4})", "$1 $2 $3", ["[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]", "[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[49]"], "0$1"],
                            ["(\\d{2})(\\d{4})(\\d{4,5})", "$1 $2 $3", ["7"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2[2-8]\\d|370|55[01]|7[1-9])\\d{6}|4(?:(?:0(?:0[1-9]|[2-48]\\d)|1[023]\\d)\\d{4,5}|(?:[239]\\d\\d|4(?:0[56]|12|49))\\d{5})|6(?:[01]\\d{7}|4(?:0[56]|12|24|4[09])\\d{4,5})|8(?:(?:2(?:3\\d|4[0-269]|[578]0|66)|36[24-9]|90\\d\\d)\\d{4}|4(?:0[56]|12|24|4[09])\\d{4,5})|(?:2(?:2(?:0\\d\\d|4(?:0[68]|[249]0|3[0-467]|5[0-25-9]|6[0235689]))|(?:3(?:[09]\\d|1[0-4])|(?:4\\d|5[0-49]|6[0-29]|7[0-5])\\d)\\d)|(?:(?:3[2-9]|5[2-8]|6[0-35-79]|8[7-9])\\d\\d|4(?:2(?:[089]\\d|7[1-9])|(?:3[0-4]|[78]\\d|9[01])\\d))\\d)\\d{3}", [8, 9]],
                            ["(?:40001[0-2]|9[0-8]\\d{4})\\d{3}", [9]],
                            ["80[0-79]\\d{6}|800\\d{5}", [8, 9]],
                            ["20(?:[013-9]\\d\\d|2)\\d{4}", [7, 9]],
                            ["99\\d{7}", [9]], 0, ["50[0-46-9]\\d{6}", [9]], 0, ["7010(?:[0-2679]\\d|3[0-7]|8[0-5])\\d{5}|70\\d{8}", [10, 11]]
                        ], 0, "#"
                    ],
                    TZ: ["255", "00[056]", "(?:[25-8]\\d|41|90)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{2})(\\d{4})", "$1 $2 $3", ["[89]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[24]"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["5"]],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[67]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["2[2-8]\\d{7}"],
                            ["77[2-9]\\d{6}|(?:6[125-9]|7[13-689])\\d{7}"],
                            ["80[08]\\d{6}"],
                            ["90\\d{7}"], 0, 0, 0, 0, ["41\\d{7}"],
                            ["8(?:40|6[01])\\d{6}"]
                        ]
                    ],
                    UA: ["380", "00", "[89]\\d{9}|[3-9]\\d{8}", [9, 10],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]", "6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]"], "0$1"],
                            ["(\\d{4})(\\d{5})", "$1 $2", ["3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])", "3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[3-7]|89|9[1-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[89]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:3[1-8]|4[13-8]|5[1-7]|6[12459])\\d{7}", [9]],
                            ["(?:39|50|6[36-8]|7[1-3]|9[1-9])\\d{7}", [9]],
                            ["800[1-8]\\d{5,6}"],
                            ["900[239]\\d{5,6}"], 0, 0, 0, 0, ["89[1-579]\\d{6}", [9]]
                        ], "0~0"
                    ],
                    UG: ["256", "00[057]", "800\\d{6}|(?:[29]0|[347]\\d)\\d{7}", [9],
                        [
                            ["(\\d{4})(\\d{5})", "$1 $2", ["202", "2024"], "0$1"],
                            ["(\\d{3})(\\d{6})", "$1 $2", ["[27-9]|4(?:6[45]|[7-9])"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["[34]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["20(?:(?:240|30[67])\\d|6(?:00[0-2]|30[0-4]))\\d{3}|(?:20(?:[017]\\d|2[5-9]|32|5[0-4]|6[15-9])|[34]\\d{3})\\d{5}"],
                            ["726[01]\\d{5}|7(?:[01578]\\d|20|36|[46][0-4]|9[89])\\d{6}"],
                            ["800[1-3]\\d{5}"],
                            ["90[1-3]\\d{6}"]
                        ]
                    ],
                    US: ["1", "011", "[2-9]\\d{9}|3\\d{6}", [10],
                        [
                            ["(\\d{3})(\\d{4})", "$1-$2", ["310"], 0, 1],
                            ["(\\d{3})(\\d{3})(\\d{4})", "($1) $2-$3", ["[2-9]"], 0, 1, "$1-$2-$3"]
                        ], "1", 0, 0, 0, 0, 0, [
                            ["505(?:[2-57-9]\\d\\d|6(?:[0-35-9]\\d|44))\\d{4}|(?:2(?:0[1-35-9]|1[02-9]|2[03-589]|3[149]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[01356]|3[0-24679]|4[167]|5[12]|6[014]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[19]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|[34][016]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-7]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-289]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\d{6}"],
                            [""],
                            ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                            ["900[2-9]\\d{6}"],
                            ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                        ]
                    ],
                    UY: ["598", "0(?:0|1[3-9]\\d)", "4\\d{9}|[1249]\\d{7}|(?:[49]\\d|80)\\d{5}", [7, 8, 10],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["405|8|90"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["9"], "0$1"],
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[124]"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["4"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:770|987)|(?:2\\d|4[2-7])\\d\\d)\\d{4}", [8]],
                            ["9[1-9]\\d{6}", [8]],
                            ["(?:4\\d{5}|80[05])\\d{4}|405\\d{4}", [7, 10]],
                            ["90[0-8]\\d{4}", [7]]
                        ], "00", " int. "
                    ],
                    UZ: ["998", "810", "(?:33|55|[679]\\d|88)\\d{7}", [9],
                        [
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[35-9]"], "8 $1"]
                        ], "8", 0, 0, 0, 0, 0, [
                            ["(?:6(?:1(?:22|3[124]|4[1-4]|5[1-3578]|64)|2(?:22|3[0-57-9]|41)|5(?:22|3[3-7]|5[024-8])|6\\d\\d|7(?:[23]\\d|7[69])|9(?:22|4[1-8]|6[135]))|7(?:0(?:5[4-9]|6[0146]|7[124-6]|9[135-8])|(?:1[12]|8\\d)\\d|2(?:22|3[13-57-9]|4[1-3579]|5[14])|3(?:2\\d|3[1578]|4[1-35-7]|5[1-57]|61)|4(?:2\\d|3[1-579]|7[1-79])|5(?:22|5[1-9]|6[1457])|6(?:22|3[12457]|4[13-8])|9(?:22|5[1-9])))\\d{5}"],
                            ["(?:(?:33|88|9[0-57-9])\\d{3}|55(?:50[013]|90\\d)|6(?:1(?:2(?:2[01]|98)|35[0-4]|50\\d|61[23]|7(?:[01][017]|4\\d|55|9[5-9]))|2(?:(?:11|7\\d)\\d|2(?:[12]1|9[01379])|5(?:[126]\\d|3[0-4]))|5(?:19[01]|2(?:27|9[26])|(?:30|59|7\\d)\\d)|6(?:2(?:1[5-9]|2[0367]|38|41|52|60)|(?:3[79]|9[0-3])\\d|4(?:56|83)|7(?:[07]\\d|1[017]|3[07]|4[047]|5[057]|67|8[0178]|9[79]))|7(?:2(?:24|3[237]|4[5-9]|7[15-8])|5(?:7[12]|8[0589])|7(?:0\\d|[39][07])|9(?:0\\d|7[079]))|9(?:2(?:1[1267]|3[01]|5\\d|7[0-4])|(?:5[67]|7\\d)\\d|6(?:2[0-26]|8\\d)))|7(?:[07]\\d{3}|1(?:13[01]|6(?:0[47]|1[67]|66)|71[3-69]|98\\d)|2(?:2(?:2[79]|95)|3(?:2[5-9]|6[0-6])|57\\d|7(?:0\\d|1[17]|2[27]|3[37]|44|5[057]|66|88))|3(?:2(?:1[0-6]|21|3[469]|7[159])|(?:33|9[4-6])\\d|5(?:0[0-4]|5[579]|9\\d)|7(?:[0-3579]\\d|4[0467]|6[67]|8[078]))|4(?:2(?:29|5[0257]|6[0-7]|7[1-57])|5(?:1[0-4]|8\\d|9[5-9])|7(?:0\\d|1[024589]|2[0-27]|3[0137]|[46][07]|5[01]|7[5-9]|9[079])|9(?:7[015-9]|[89]\\d))|5(?:112|2(?:0\\d|2[29]|[49]4)|3[1568]\\d|52[6-9]|7(?:0[01578]|1[017]|[23]7|4[047]|[5-7]\\d|8[78]|9[079]))|6(?:2(?:2[1245]|4[2-4])|39\\d|41[179]|5(?:[349]\\d|5[0-2])|7(?:0[017]|[13]\\d|22|44|55|67|88))|9(?:22[128]|3(?:2[0-4]|7\\d)|57[02569]|7(?:2[05-9]|3[37]|4\\d|60|7[2579]|87|9[07]))))\\d{4}"]
                        ], "8~10"
                    ],
                    VA: ["39", "00", "0\\d{5,10}|3[0-8]\\d{7,10}|55\\d{8}|8\\d{5}(?:\\d{2,4})?|(?:1\\d|39)\\d{7,8}", [6, 7, 8, 9, 10, 11], 0, 0, 0, 0, 0, 0, "06698", [
                        ["06698\\d{1,6}"],
                        ["3[1-9]\\d{8}|3[2-9]\\d{7}", [9, 10]],
                        ["80(?:0\\d{3}|3)\\d{3}", [6, 9]],
                        ["(?:0878\\d{3}|89(?:2\\d|3[04]|4(?:[0-4]|[5-9]\\d\\d)|5[0-4]))\\d\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\d{6}", [6, 8, 9, 10]],
                        ["1(?:78\\d|99)\\d{6}", [9, 10]], 0, 0, 0, ["55\\d{8}", [10]],
                        ["84(?:[08]\\d{3}|[17])\\d{3}", [6, 9]]
                    ]],
                    VC: ["1", "011", "(?:[58]\\d\\d|784|900)\\d{7}", [10], 0, "1", 0, "1|([2-7]\\d{6})$", "784$1", 0, "784", [
                        ["784(?:266|3(?:6[6-9]|7\\d|8[0-6])|4(?:38|5[0-36-8]|8[0-8])|5(?:55|7[0-2]|93)|638|784)\\d{4}"],
                        ["784(?:4(?:3[0-5]|5[45]|89|9[0-8])|5(?:2[6-9]|3[0-4])|720)\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"], 0, 0, 0, ["78451[0-2]\\d{4}"]
                    ]],
                    VE: ["58", "00", "[68]00\\d{7}|(?:[24]\\d|[59]0)\\d{8}", [10],
                        [
                            ["(\\d{3})(\\d{7})", "$1-$2", ["[24-689]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2(?:12|3[457-9]|[467]\\d|[58][1-9]|9[1-6])|[4-6]00)\\d{7}"],
                            ["4(?:1[24-8]|2[46])\\d{7}"],
                            ["800\\d{7}"],
                            ["90[01]\\d{7}"], 0, 0, ["501\\d{7}"]
                        ]
                    ],
                    VG: ["1", "011", "(?:284|[58]\\d\\d|900)\\d{7}", [10], 0, "1", 0, "1|([2-578]\\d{6})$", "284$1", 0, "284", [
                        ["284496[0-5]\\d{3}|284(?:229|4(?:22|9[45])|774|8(?:52|6[459]))\\d{4}"],
                        ["284496[6-9]\\d{3}|284(?:245|3(?:0[0-3]|4[0-7]|68|9[34])|4(?:4[0-6]|68|99)|5(?:4[0-7]|68|9[69]))\\d{4}"],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    VI: ["1", "011", "[58]\\d{9}|(?:34|90)0\\d{7}", [10], 0, "1", 0, "1|([2-9]\\d{6})$", "340$1", 0, "340", [
                        ["340(?:2(?:0[0-38]|2[06-8]|4[49]|77)|3(?:32|44)|4(?:2[23]|44|7[34]|89)|5(?:1[34]|55)|6(?:2[56]|4[23]|77|9[023])|7(?:1[2-57-9]|2[57]|7\\d)|884|998)\\d{4}"],
                        [""],
                        ["8(?:00|33|44|55|66|77|88)[2-9]\\d{6}"],
                        ["900[2-9]\\d{6}"],
                        ["52(?:3(?:[2-46-9][02-9]\\d|5(?:[02-46-9]\\d|5[0-46-9]))|4(?:[2-478][02-9]\\d|5(?:[034]\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\d)|9(?:[05-9]\\d|2[0-5]|49)))\\d{4}|52[34][2-9]1[02-9]\\d{4}|5(?:00|2[125-7]|33|44|66|77|88)[2-9]\\d{6}"]
                    ]],
                    VN: ["84", "00", "[12]\\d{9}|[135-9]\\d{8}|[16]\\d{7}|[16-8]\\d{6}", [7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{5})", "$1 $2", ["80"], "0$1", 1],
                            ["(\\d{4})(\\d{4,6})", "$1 $2", ["1"], 0, 1],
                            ["(\\d{2})(\\d{3})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["[69]"], "0$1", 1],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[3578]"], "0$1", 1],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["2[48]"], "0$1", 1],
                            ["(\\d{3})(\\d{4})(\\d{3})", "$1 $2 $3", ["2"], "0$1", 1]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["2(?:0[3-9]|1[0-689]|2[0-25-9]|3[2-9]|4[2-8]|5[124-9]|6[0-39]|7[0-7]|8[2-79]|9[0-4679])\\d{7}", [10]],
                            ["(?:5(?:2[238]|59)|89[6-9]|99[013-9])\\d{6}|(?:3\\d|5[689]|7[06-9]|8[1-8]|9[0-8])\\d{7}", [9]],
                            ["1800\\d{4,6}|12(?:0[13]|28)\\d{4}", [8, 9, 10]],
                            ["1900\\d{4,6}", [8, 9, 10]], 0, 0, ["(?:[17]99|80\\d)\\d{4}|69\\d{5,6}", [7, 8]], 0, ["672\\d{6}", [9]]
                        ]
                    ],
                    VU: ["678", "00", "[57-9]\\d{6}|(?:[238]\\d|48)\\d{3}", [5, 7],
                        [
                            ["(\\d{3})(\\d{4})", "$1 $2", ["[57-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["(?:38[0-8]|48[4-9])\\d\\d|(?:2[02-9]|3[4-7]|88)\\d{3}", [5]],
                            ["(?:[58]\\d|7[013-7])\\d{5}", [7]],
                            ["81[18]\\d\\d", [5]], 0, 0, 0, ["(?:3[03]|900\\d)\\d{3}"], 0, ["9(?:0[1-9]|1[01])\\d{4}", [7]]
                        ]
                    ],
                    WF: ["681", "00", "(?:40|72)\\d{4}|8\\d{5}(?:\\d{3})?", [6, 9],
                        [
                            ["(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3", ["[478]"]],
                            ["(\\d{3})(\\d{2})(\\d{2})(\\d{2})", "$1 $2 $3 $4", ["8"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["72\\d{4}", [6]],
                            ["(?:72|8[23])\\d{4}", [6]],
                            ["80[0-5]\\d{6}", [9]]
                        ]
                    ],
                    WS: ["685", "0", "(?:[2-6]|8\\d{5})\\d{4}|[78]\\d{6}|[68]\\d{5}", [5, 6, 7, 10],
                        [
                            ["(\\d{5})", "$1", ["[2-5]|6[1-9]"]],
                            ["(\\d{3})(\\d{3,7})", "$1 $2", ["[68]"]],
                            ["(\\d{2})(\\d{5})", "$1 $2", ["7"]]
                        ], 0, 0, 0, 0, 0, 0, [
                            ["6[1-9]\\d{3}|(?:[2-5]|60)\\d{4}", [5, 6]],
                            ["(?:7[1-35-7]|8(?:[3-7]|9\\d{3}))\\d{5}", [7, 10]],
                            ["800\\d{3}", [6]]
                        ]
                    ],
                    XK: ["383", "00", "[23]\\d{7,8}|(?:4\\d\\d|[89]00)\\d{5}", [8, 9],
                        [
                            ["(\\d{3})(\\d{5})", "$1 $2", ["[89]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3})", "$1 $2 $3", ["[2-4]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[23]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2[89]|39)0\\d{6}|[23][89]\\d{6}"],
                            ["4[3-9]\\d{6}", [8]],
                            ["800\\d{5}", [8]],
                            ["900\\d{5}", [8]]
                        ]
                    ],
                    YE: ["967", "00", "(?:1|7\\d)\\d{7}|[1-7]\\d{6}", [7, 8, 9],
                        [
                            ["(\\d)(\\d{3})(\\d{3,4})", "$1 $2 $3", ["[1-6]|7[24-68]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["7"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["78[0-7]\\d{4}|17\\d{6}|(?:[12][2-68]|3[2358]|4[2-58]|5[2-6]|6[3-58]|7[24-6])\\d{5}", [7, 8]],
                            ["7[0137]\\d{7}", [9]]
                        ]
                    ],
                    YT: ["262", "00", "80\\d{7}|(?:26|63)9\\d{6}", [9], 0, "0", 0, 0, 0, 0, "269|63", [
                        ["269(?:0[0-367]|5[0-3]|6\\d|[78]0)\\d{4}"],
                        ["639(?:0[0-79]|1[019]|[267]\\d|3[09]|40|5[05-9]|9[04-79])\\d{4}"],
                        ["80\\d{7}"]
                    ]],
                    ZA: ["27", "00", "[1-79]\\d{8}|8\\d{4,9}", [5, 6, 7, 8, 9, 10],
                        [
                            ["(\\d{2})(\\d{3,4})", "$1 $2", ["8[1-4]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{2,3})", "$1 $2 $3", ["8[1-4]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["860"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["[1-9]"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["8"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:2(?:0330|4302)|52087)0\\d{3}|(?:1[0-8]|2[1-378]|3[1-69]|4\\d|5[1346-8])\\d{7}", [9]],
                            ["(?:1(?:3492[0-25]|4495[0235]|549(?:20|5[01]))|4[34]492[01])\\d{3}|8[1-4]\\d{3,7}|(?:2[27]|47|54)4950\\d{3}|(?:1(?:049[2-4]|9[12]\\d\\d)|(?:6\\d|7[0-46-9])\\d{3}|8(?:5\\d{3}|7(?:08[67]|158|28[5-9]|310)))\\d{4}|(?:1[6-8]|28|3[2-69]|4[025689]|5[36-8])4920\\d{3}|(?:12|[2-5]1)492\\d{4}", [5, 6, 7, 8, 9]],
                            ["80\\d{7}", [9]],
                            ["(?:86[2-9]|9[0-2]\\d)\\d{6}", [9]], 0, 0, ["861\\d{6,7}", [9, 10]], 0, ["87(?:08[0-589]|15[0-79]|28[0-4]|31[1-9])\\d{4}|87(?:[02][0-79]|1[0-46-9]|3[02-9]|[4-9]\\d)\\d{5}", [9]],
                            ["860\\d{6}", [9]]
                        ]
                    ],
                    ZM: ["260", "00", "800\\d{6}|(?:21|63|[79]\\d)\\d{7}", [9],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[28]"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["[79]"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["21[1-8]\\d{6}"],
                            ["(?:7[5-79]|9[5-8])\\d{7}"],
                            ["800\\d{6}"], 0, 0, 0, 0, 0, ["63\\d{7}"]
                        ]
                    ],
                    ZW: ["263", "00", "2(?:[0-57-9]\\d{6,8}|6[0-24-9]\\d{6,7})|[38]\\d{9}|[35-8]\\d{8}|[3-6]\\d{7}|[1-689]\\d{6}|[1-3569]\\d{5}|[1356]\\d{4}", [5, 6, 7, 8, 9, 10],
                        [
                            ["(\\d{3})(\\d{3,5})", "$1 $2", ["2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]"], "0$1"],
                            ["(\\d)(\\d{3})(\\d{2,4})", "$1 $2 $3", ["[49]"], "0$1"],
                            ["(\\d{3})(\\d{4})", "$1 $2", ["80"], "0$1"],
                            ["(\\d{2})(\\d{7})", "$1 $2", ["24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2", "2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]"], "(0$1)"],
                            ["(\\d{2})(\\d{3})(\\d{4})", "$1 $2 $3", ["7"], "0$1"],
                            ["(\\d{3})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)", "2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)"], "0$1"],
                            ["(\\d{4})(\\d{6})", "$1 $2", ["8"], "0$1"],
                            ["(\\d{2})(\\d{3,5})", "$1 $2", ["1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]"], "0$1"],
                            ["(\\d{2})(\\d{3})(\\d{3,4})", "$1 $2 $3", ["29[013-9]|39|54"], "0$1"],
                            ["(\\d{4})(\\d{3,5})", "$1 $2", ["(?:25|54)8", "258|5483"], "0$1"]
                        ], "0", 0, 0, 0, 0, 0, [
                            ["(?:1(?:(?:3\\d|9)\\d|[4-8])|2(?:(?:(?:0(?:2[014]|5)|(?:2[0157]|31|84|9)\\d\\d|[56](?:[14]\\d\\d|20)|7(?:[089]|2[03]|[35]\\d\\d))\\d|4(?:2\\d\\d|8))\\d|1(?:2|[39]\\d{4}))|3(?:(?:123|(?:29\\d|92)\\d)\\d\\d|7(?:[19]|[56]\\d))|5(?:0|1[2-478]|26|[37]2|4(?:2\\d{3}|83)|5(?:25\\d\\d|[78])|[689]\\d)|6(?:(?:[16-8]21|28|52[013])\\d\\d|[39])|8(?:[1349]28|523)\\d\\d)\\d{3}|(?:4\\d\\d|9[2-9])\\d{4,5}|(?:(?:2(?:(?:(?:0|8[146])\\d|7[1-7])\\d|2(?:[278]\\d|92)|58(?:2\\d|3))|3(?:[26]|9\\d{3})|5(?:4\\d|5)\\d\\d)\\d|6(?:(?:(?:[0-246]|[78]\\d)\\d|37)\\d|5[2-8]))\\d\\d|(?:2(?:[569]\\d|8[2-57-9])|3(?:[013-59]\\d|8[37])|6[89]8)\\d{3}"],
                            ["7(?:[178]\\d|3[1-9])\\d{6}", [9]],
                            ["80(?:[01]\\d|20|8[0-8])\\d{3}", [7]], 0, 0, 0, 0, 0, ["86(?:1[12]|22|30|44|55|77|8[368])\\d{6}", [10]]
                        ]
                    ]
                },
                nonGeographic: {
                    800: ["800", 0, "(?:00|[1-9]\\d)\\d{6}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["\\d"]]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, ["(?:00|[1-9]\\d)\\d{6}"]]
                    ],
                    808: ["808", 0, "[1-9]\\d{7}", [8],
                        [
                            ["(\\d{4})(\\d{4})", "$1 $2", ["[1-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, 0, ["[1-9]\\d{7}"]]
                    ],
                    870: ["870", 0, "7\\d{11}|[35-7]\\d{8}", [9, 12],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["[35-7]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, ["(?:[356]|774[45])\\d{8}|7[6-8]\\d{7}"]]
                    ],
                    878: ["878", 0, "10\\d{10}", [12],
                        [
                            ["(\\d{2})(\\d{5})(\\d{5})", "$1 $2 $3", ["1"]]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["10\\d{10}"]]
                    ],
                    881: ["881", 0, "[0-36-9]\\d{8}", [9],
                        [
                            ["(\\d)(\\d{3})(\\d{5})", "$1 $2 $3", ["[0-36-9]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, ["[0-36-9]\\d{8}"]]
                    ],
                    882: ["882", 0, "[13]\\d{6}(?:\\d{2,5})?|285\\d{9}|(?:[19]\\d|49)\\d{6}", [7, 8, 9, 10, 11, 12],
                        [
                            ["(\\d{2})(\\d{5})", "$1 $2", ["16|342"]],
                            ["(\\d{2})(\\d{6})", "$1 $2", ["4"]],
                            ["(\\d{2})(\\d{2})(\\d{4})", "$1 $2 $3", ["[19]"]],
                            ["(\\d{2})(\\d{4})(\\d{3})", "$1 $2 $3", ["3[23]"]],
                            ["(\\d{2})(\\d{3,4})(\\d{4})", "$1 $2 $3", ["1"]],
                            ["(\\d{2})(\\d{4})(\\d{4})", "$1 $2 $3", ["34[57]"]],
                            ["(\\d{3})(\\d{4})(\\d{4})", "$1 $2 $3", ["34"]],
                            ["(\\d{2})(\\d{4,5})(\\d{5})", "$1 $2 $3", ["[1-3]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, ["342\\d{4}|(?:337|49)\\d{6}|3(?:2|47|7\\d{3})\\d{7}", [7, 8, 9, 10, 12]], 0, 0, 0, 0, 0, 0, ["1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\d{4}|6\\d{5,10})|(?:(?:285\\d\\d|3(?:45|[69]\\d{3}))\\d|9[89])\\d{6}"]]
                    ],
                    883: ["883", 0, "(?:210|370\\d\\d)\\d{7}|51\\d{7}(?:\\d{3})?", [9, 10, 12],
                        [
                            ["(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3", ["510"]],
                            ["(\\d{3})(\\d{3})(\\d{4})", "$1 $2 $3", ["2"]],
                            ["(\\d{4})(\\d{4})(\\d{4})", "$1 $2 $3", ["51[13]"]],
                            ["(\\d{3})(\\d{3})(\\d{3})(\\d{3})", "$1 $2 $3 $4", ["[35]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, 0, 0, ["(?:210|(?:370[1-9]|51[013]0)\\d)\\d{7}|5100\\d{5}"]]
                    ],
                    888: ["888", 0, "\\d{11}", [11],
                        [
                            ["(\\d{3})(\\d{3})(\\d{5})", "$1 $2 $3"]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, 0, 0, 0, 0, ["\\d{11}"]]
                    ],
                    979: ["979", 0, "[1359]\\d{8}", [9],
                        [
                            ["(\\d)(\\d{4})(\\d{4})", "$1 $2 $3", ["[1359]"]]
                        ], 0, 0, 0, 0, 0, 0, [0, 0, 0, ["[1359]\\d{8}"]]
                    ]
                }
            }
        }
    }
]);
//# sourceMappingURL=53843-1e4045c2f5b95449e2c7.js.map